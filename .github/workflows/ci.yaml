name: Build Container Image

on:
  push:
    branches: [ "main" ]
    paths:
      - .github/workflows/ci.yaml
      - Dockerfile

env:
  IMAGE: "ghcr.io/excid-io/seccon-dev:latest"

jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.image.outputs.image }}
      digest: ${{ steps.build.outputs.digest }}

    steps:
      - uses: actions/checkout@v4.2.2

      - name: Gitleaks
        id: gitleaks-scan
        uses: gitleaks/gitleaks-action@v2.3.9
        env:
          GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12'
      - name: NodeJS Scan
        id: njsscan
        uses: ajinabraham/njsscan-action@master
        with:
          args: '. --sarif --output results.sarif || true'
      - name: Upload njsscan report
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

      - name: Log into registry ghcr.io
        uses: docker/login-action@v3.3.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        id: build
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ env.IMAGE }}
          context: .
      
      - name: Run Trivy Vulnerability Scan
        id: trivy-vuln
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE }}
          format: "table"
      
      - name: STaaS Sign Container Image
        id: staas-sign-image
        env:
          COMMENT: gh-actions-sign-image-${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}
        run: |
          wget https://github.com/excid-io/staas-cli/releases/download/main/staas-cli
          chmod +x ./staas-cli
          ./staas-cli sign-image ${{ env.IMAGE }} --token ${{ secrets.STAAS_API_KEY }} --comment $COMMENT

    
  staas-sbom-attestation:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - name: Log into registry ghcr.io
        uses: docker/login-action@v3.3.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false

      - name: Generate SBOM
        id: sbom-gen
        uses: anchore/sbom-action@v0
        with:
          image: ${{ env.IMAGE }}
          output-file: "image.sbom"
          format: 'cyclonedx-json'
          upload-artifact: false

      - name: STaaS SBOM Attestation
        id: staas-attest-sbom
        run: |
          wget https://github.com/excid-io/staas-cli/releases/download/main/staas-cli
          chmod +x ./staas-cli
          wget http://staas.excid.io/Sign/Certificate -O staas-ca.pem 
          ./staas-cli attest-image ${{ env.IMAGE }} --token ${{ secrets.STAAS_API_KEY }} --predicate-type "https://cyclonedx.org/bom" --predicate ./image.sbom --root-ca-file ./staas-ca.pem --subject ${{ secrets.STAAS_EMAIL }}


  staas-provenance-attestation:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [build]

    steps: 
      - name: Log into registry ghcr.io
        uses: docker/login-action@v3.3.0
        with:
          registry: "ghcr.io"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          logout: false
      
      - name: STaaS SLSA Provenance Attestation
        id: staas-attest-slsa-provenance
        env:
          GITHUB_CONTEXT: "${{ toJSON(github) }}" # set these two variables for slsa-generator-container-linux-amd64
          VARS_CONTEXT: "${{ toJSON(vars) }}"
        run: |
          # slsa-generator-container-linux-amd64 generates the provenance predicate
          wget https://github.com/slsa-framework/slsa-github-generator/releases/download/v2.1.0/slsa-generator-container-linux-amd64
          chmod +x slsa-generator-container-linux-amd64
          ./slsa-generator-container-linux-amd64 generate --predicate="build.predicate"
          # then have staas-cli create the provenance attestation
          wget https://github.com/excid-io/staas-cli/releases/download/main/staas-cli
          chmod +x ./staas-cli
          wget http://staas.excid.io/Sign/Certificate -O staas-ca.pem 
          ./staas-cli attest-image ${{ env.IMAGE }} --token ${{ secrets.STAAS_API_KEY }} --predicate-type "https://in-toto.io/Statement/v0.1" --predicate ./build.predicate --root-ca-file ./staas-ca.pem --subject ${{ secrets.STAAS_EMAIL }}
              
