### This is the vulnerable pipeline

stages:
  - build_image
  - scan_image
  - attestations

################## build_image ##################

docker-build:
  stage: build_image
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  variables:
    DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    SECURE_FILES_DOWNLOAD_PATH: './'
    RUNNER_GENERATE_ARTIFACTS_METADATA: "true"
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - apk update && apk add curl
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | sh
    - mkdir security
    - mv FAIRDICE.crt FAIRDICE.key security
    - DOCKER_IMAGE_NAME=https://gitlab.com/excid-demo/excid-civd-demo-project  # HERE is the vulnerability
    - apk add git && git clone $DOCKER_IMAGE_NAME .
    - docker build --iidfile img.hash -t "$DOCKER_IMAGE_NAME" .
    - docker push "$DOCKER_IMAGE_NAME"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker tag "$DOCKER_IMAGE_NAME" "$CI_REGISTRY_IMAGE:latest"
        docker push "$DOCKER_IMAGE_NAME:latest"
      fi 
  artifacts:
    when: always
    paths:
      - img.hash
  allow_failure: true
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
 
################## attestation ##################

staas-provenance:
  stage: attestations
  needs: ["docker-build"]
  image: python:3.9
  before_script:
    - apt-get update && apt-get install jq -y
    - curl -O -L "https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64"
    - mv cosign-linux-amd64 cosign
    - chmod +x cosign
    - pip install requests
  script: # img.prov.json is an in-toto statment, a provenance document about the container image
    - |
      export IMG_HASH_B64=$(cat img.hash | base64 -w 0)
      jq --arg b64hash "$IMG_HASH_B64" --arg imgname "$CI_REGISTRY_IMAGE" '.subject = [{"name":$imgname, "digest":{"sha256":$b64hash}}]' artifacts-metadata.json > image.prov.json
    - export COMMENT=provenance
    - python3 staas-upload.py image.prov.json $STAAS_API_TOKEN $COMMENT
  after_script:
    - ./cosign verify-blob --certificate-identity=el.georgiadis@aueb.gr --certificate-oidc-issuer=https://staas.excid.io --certificate-chain ca.pem --insecure-ignore-sct --bundle image.prov.json.bundle image.prov.json
  allow_failure: true
  artifacts:
    when: always
    paths:
      - image.prov.json.bundle

staas-sbom:
  stage: attestations
  image: python:3.9
  needs: ["docker-build"]
  before_script:
    - curl -O -L "https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64"
    - mv cosign-linux-amd64 cosign
    - chmod +x cosign
    - pip install requests
  script:
    - export COMMENT=sbom
    - python3 staas-upload.py img.sbom.json $STAAS_API_TOKEN $COMMENT
  after_script:
    - ./cosign verify-blob --certificate-identity=el.georgiadis@aueb.gr --certificate-oidc-issuer=https://staas.excid.io --certificate-chain ca.pem --insecure-ignore-sct --bundle img.sbom.json.bundle img.sbom.json
  allow_failure: true
  artifacts:
    when: always
    paths:
      - img.sbom.json.bundle
  
