{"payloadType":"application/vnd.in-toto+json","payload":"ewogICJfdHlwZSI6ICJodHRwczovL2luLXRvdG8uaW8vU3RhdGVtZW50L3YwLjEiLAogICJwcmVkaWNhdGVUeXBlIjogImh0dHBzOi8vc2xzYS5kZXYvcHJvdmVuYW5jZS92MSIsCiAgInN1YmplY3QiOiBbCiAgICB7CiAgICAgICJuYW1lIjogInJlZ2lzdHJ5LmdpdGxhYi5jb20vbGVmb3NnL2V4Y2lkLWNpY2QtZGVtby1wcm9qZWN0IiwKICAgICAgImRpZ2VzdCI6IHsKICAgICAgICAic2hhMjU2IjogIjk2YzAzZmZkZTk2N2VhNmUzZDYyZDFhOTg1Yzc2YWI4M2Y2MDBlNjEzMDc2Zjg3NDEwZWYxZmFkM2M3ZDg2OGQiCiAgICAgIH0KICAgIH0KICBdLAogICJwcmVkaWNhdGUiOiB7CiAgICAiYnVpbGREZWZpbml0aW9uIjogewogICAgICAiYnVpbGRUeXBlIjogImh0dHBzOi8vZ2l0bGFiLmNvbS9naXRsYWItb3JnL2dpdGxhYi1ydW5uZXIvLS9ibG9iLzNlNjUzYzRlL1BST1ZFTkFOQ0UubWQiLAogICAgICAiZXh0ZXJuYWxQYXJhbWV0ZXJzIjogewogICAgICAgICJDSSI6ICIiLAogICAgICAgICJDSV9BUElfR1JBUEhRTF9VUkwiOiAiIiwKICAgICAgICAiQ0lfQVBJX1Y0X1VSTCI6ICIiLAogICAgICAgICJDSV9DT01NSVRfQVVUSE9SIjogIiIsCiAgICAgICAgIkNJX0NPTU1JVF9CRUZPUkVfU0hBIjogIiIsCiAgICAgICAgIkNJX0NPTU1JVF9CUkFOQ0giOiAiIiwKICAgICAgICAiQ0lfQ09NTUlUX0RFU0NSSVBUSU9OIjogIiIsCiAgICAgICAgIkNJX0NPTU1JVF9NRVNTQUdFIjogIiIsCiAgICAgICAgIkNJX0NPTU1JVF9SRUZfTkFNRSI6ICIiLAogICAgICAgICJDSV9DT01NSVRfUkVGX1BST1RFQ1RFRCI6ICIiLAogICAgICAgICJDSV9DT01NSVRfUkVGX1NMVUciOiAiIiwKICAgICAgICAiQ0lfQ09NTUlUX1NIQSI6ICIiLAogICAgICAgICJDSV9DT01NSVRfU0hPUlRfU0hBIjogIiIsCiAgICAgICAgIkNJX0NPTU1JVF9USU1FU1RBTVAiOiAiIiwKICAgICAgICAiQ0lfQ09NTUlUX1RJVExFIjogIiIsCiAgICAgICAgIkNJX0NPTkZJR19QQVRIIjogIiIsCiAgICAgICAgIkNJX0RFRkFVTFRfQlJBTkNIIjogIiIsCiAgICAgICAgIkNJX0RFRkFVTFRfQlJBTkNIX1NMVUciOiAiIiwKICAgICAgICAiQ0lfREVQRU5ERU5DWV9QUk9YWV9ESVJFQ1RfR1JPVVBfSU1BR0VfUFJFRklYIjogIiIsCiAgICAgICAgIkNJX0RFUEVOREVOQ1lfUFJPWFlfR1JPVVBfSU1BR0VfUFJFRklYIjogIiIsCiAgICAgICAgIkNJX0RFUEVOREVOQ1lfUFJPWFlfUEFTU1dPUkQiOiAiIiwKICAgICAgICAiQ0lfREVQRU5ERU5DWV9QUk9YWV9TRVJWRVIiOiAiIiwKICAgICAgICAiQ0lfREVQRU5ERU5DWV9QUk9YWV9VU0VSIjogIiIsCiAgICAgICAgIkNJX0pPQl9HUk9VUF9OQU1FIjogIiIsCiAgICAgICAgIkNJX0pPQl9JRCI6ICIiLAogICAgICAgICJDSV9KT0JfTkFNRSI6ICIiLAogICAgICAgICJDSV9KT0JfTkFNRV9TTFVHIjogIiIsCiAgICAgICAgIkNJX0pPQl9TVEFHRSI6ICIiLAogICAgICAgICJDSV9KT0JfU1RBUlRFRF9BVCI6ICIiLAogICAgICAgICJDSV9KT0JfVE9LRU4iOiAiIiwKICAgICAgICAiQ0lfSk9CX1VSTCI6ICIiLAogICAgICAgICJDSV9OT0RFX1RPVEFMIjogIiIsCiAgICAgICAgIkNJX1BBR0VTX0RPTUFJTiI6ICIiLAogICAgICAgICJDSV9QQUdFU19IT1NUTkFNRSI6ICIiLAogICAgICAgICJDSV9QQUdFU19VUkwiOiAiIiwKICAgICAgICAiQ0lfUElQRUxJTkVfQ1JFQVRFRF9BVCI6ICIiLAogICAgICAgICJDSV9QSVBFTElORV9JRCI6ICIiLAogICAgICAgICJDSV9QSVBFTElORV9JSUQiOiAiIiwKICAgICAgICAiQ0lfUElQRUxJTkVfTkFNRSI6ICIiLAogICAgICAgICJDSV9QSVBFTElORV9TT1VSQ0UiOiAiIiwKICAgICAgICAiQ0lfUElQRUxJTkVfVVJMIjogIiIsCiAgICAgICAgIkNJX1BST0pFQ1RfQ0xBU1NJRklDQVRJT05fTEFCRUwiOiAiIiwKICAgICAgICAiQ0lfUFJPSkVDVF9ERVNDUklQVElPTiI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX0lEIjogIiIsCiAgICAgICAgIkNJX1BST0pFQ1RfTkFNRSI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX05BTUVTUEFDRSI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX05BTUVTUEFDRV9JRCI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX05BTUVTUEFDRV9TTFVHIjogIiIsCiAgICAgICAgIkNJX1BST0pFQ1RfUEFUSCI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX1BBVEhfU0xVRyI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX1JFUE9TSVRPUllfTEFOR1VBR0VTIjogIiIsCiAgICAgICAgIkNJX1BST0pFQ1RfUk9PVF9OQU1FU1BBQ0UiOiAiIiwKICAgICAgICAiQ0lfUFJPSkVDVF9USVRMRSI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX1VSTCI6ICIiLAogICAgICAgICJDSV9QUk9KRUNUX1ZJU0lCSUxJVFkiOiAiIiwKICAgICAgICAiQ0lfUkVHSVNUUlkiOiAiIiwKICAgICAgICAiQ0lfUkVHSVNUUllfSU1BR0UiOiAiIiwKICAgICAgICAiQ0lfUkVHSVNUUllfUEFTU1dPUkQiOiAiIiwKICAgICAgICAiQ0lfUkVHSVNUUllfVVNFUiI6ICIiLAogICAgICAgICJDSV9SRVBPU0lUT1JZX1VSTCI6ICIiLAogICAgICAgICJDSV9SVU5ORVJfREVTQ1JJUFRJT04iOiAiIiwKICAgICAgICAiQ0lfUlVOTkVSX0lEIjogIiIsCiAgICAgICAgIkNJX1JVTk5FUl9UQUdTIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9GUUROIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9IT1NUIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9OQU1FIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9QT1JUIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9QUk9UT0NPTCI6ICIiLAogICAgICAgICJDSV9TRVJWRVJfUkVWSVNJT04iOiAiIiwKICAgICAgICAiQ0lfU0VSVkVSX1NIRUxMX1NTSF9IT1NUIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9TSEVMTF9TU0hfUE9SVCI6ICIiLAogICAgICAgICJDSV9TRVJWRVJfVVJMIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9WRVJTSU9OIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9WRVJTSU9OX01BSk9SIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9WRVJTSU9OX01JTk9SIjogIiIsCiAgICAgICAgIkNJX1NFUlZFUl9WRVJTSU9OX1BBVENIIjogIiIsCiAgICAgICAgIkNJX1RFTVBMQVRFX1JFR0lTVFJZX0hPU1QiOiAiIiwKICAgICAgICAiR0lUTEFCX0NJIjogIiIsCiAgICAgICAgIkdJVExBQl9GRUFUVVJFUyI6ICIiLAogICAgICAgICJHSVRMQUJfVVNFUl9FTUFJTCI6ICIiLAogICAgICAgICJHSVRMQUJfVVNFUl9JRCI6ICIiLAogICAgICAgICJHSVRMQUJfVVNFUl9MT0dJTiI6ICIiLAogICAgICAgICJHSVRMQUJfVVNFUl9OQU1FIjogIiIsCiAgICAgICAgIlJVTk5FUl9HRU5FUkFURV9BUlRJRkFDVFNfTUVUQURBVEEiOiAiIiwKICAgICAgICAiU1RBQVNfQVBJX0tFWSI6ICIiLAogICAgICAgICJTVEFBU19FTUFJTCI6ICIiLAogICAgICAgICJlbnRyeVBvaW50IjogImthbmlrby1idWlsZCIsCiAgICAgICAgInNvdXJjZSI6ICJodHRwczovL2dpdGxhYi5jb20vbGVmb3NnL2V4Y2lkLWNpY2QtZGVtby1wcm9qZWN0IgogICAgICB9LAogICAgICAiaW50ZXJuYWxQYXJhbWV0ZXJzIjogewogICAgICAgICJhcmNoaXRlY3R1cmUiOiAiYW1kNjQiLAogICAgICAgICJleGVjdXRvciI6ICJkb2NrZXIiLAogICAgICAgICJqb2IiOiAiMTA1Njg2NTg2NDciLAogICAgICAgICJuYW1lIjogImV4Y2lkIgogICAgICB9LAogICAgICAicmVzb2x2ZWREZXBlbmRlbmNpZXMiOiBbCiAgICAgICAgewogICAgICAgICAgInVyaSI6ICJodHRwczovL2dpdGxhYi5jb20vbGVmb3NnL2V4Y2lkLWNpY2QtZGVtby1wcm9qZWN0IiwKICAgICAgICAgICJkaWdlc3QiOiB7CiAgICAgICAgICAgICJzaGEyNTYiOiAiYzM4MzEzN2VkNmQ3MWY5NzFlYmI1MjUxY2IxNTI4ZmI2MjhkOTRhMyIKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIF0KICAgIH0sCiAgICAicnVuRGV0YWlscyI6IHsKICAgICAgImJ1aWxkZXIiOiB7CiAgICAgICAgImlkIjogImh0dHBzOi8vZ2l0bGFiLmNvbS9sZWZvc2cvZXhjaWQtY2ljZC1kZW1vLXByb2plY3QvLS9ydW5uZXJzLzQ3NTExNzkzIiwKICAgICAgICAidmVyc2lvbiI6IHsKICAgICAgICAgICJnaXRsYWItcnVubmVyIjogIjNlNjUzYzRlIgogICAgICAgIH0KICAgICAgfSwKICAgICAgIm1ldGFkYXRhIjogewogICAgICAgICJpbnZvY2F0aW9uSUQiOiAiMTA1Njg2NTg2NDciLAogICAgICAgICJzdGFydGVkT24iOiAiMjAyNS0wNy0wNFQxNjoxNzowOCswMzowMCIsCiAgICAgICAgImZpbmlzaGVkT24iOiAiMjAyNS0wNy0wNFQxNjoxODo1MCswMzowMCIKICAgICAgfQogICAgfQogIH0KfQo=","signatures":[{"keyid":"","sig":"MEQCIFp/BA/Z0kWrDNVEvResCew8qqb8ZeBDkrkPbWEzCsaUAiALZ72njbhKyuwQJ8Vc31zo+rFtTeiplCQW96pIlZhyYg=="}]}
{"payloadType":"application/vnd.in-toto+json","payload":"{
    "_type": "https://in-toto.io/Statement/v0.1",
    "predicateType": "https://cyclonedx.org/bom",
    "subject": [
        {
            "name": "registry.gitlab.com/lefosg/excid-cicd-demo-project",
            "digest": {
                "sha256": "96c03ffde967ea6e3d62d1a985c76ab83f600e613076f87410ef1fad3c7d868d"
            }
        }
    ],
    "predicate": {
        "$schema": "http://cyclonedx.org/schema/bom-1.6.schema.json",
        "bomFormat": "CycloneDX",
        "specVersion": "1.6",
        "serialNumber": "urn:uuid:1151373e-7581-4c35-a63f-878dadc2f656",
        "version": 1,
        "metadata": {
            "timestamp": "2025-07-04T13:29:59+00:00",
            "tools": {
                "components": [
                    {
                        "type": "application",
                        "manufacturer": {
                            "name": "Aqua Security Software Ltd."
                        },
                        "group": "aquasecurity",
                        "name": "trivy",
                        "version": "0.64.1"
                    }
                ]
            },
            "component": {
                "bom-ref": "pkg:oci/excid-cicd-demo-project@sha256%3A96c03ffde967ea6e3d62d1a985c76ab83f600e613076f87410ef1fad3c7d868d?arch=amd64&repository_url=registry.gitlab.com%2Flefosg%2Fexcid-cicd-demo-project",
                "type": "container",
                "name": "registry.gitlab.com/lefosg/excid-cicd-demo-project:1.0.7",
                "purl": "pkg:oci/excid-cicd-demo-project@sha256%3A96c03ffde967ea6e3d62d1a985c76ab83f600e613076f87410ef1fad3c7d868d?arch=amd64&repository_url=registry.gitlab.com%2Flefosg%2Fexcid-cicd-demo-project",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:2a3c319882b28016608c786b6b92b3af3a86e8b26ed7475da6fc585e5a5d791c"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:6431621f4dde53c90d03786e857b8e5238452e07dd0f65b2f49df7c2bef9be8c"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:977a71e175f0d330035e06ba829705c0d0f01486bf06aac1dbd01f0e08790c19"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:ac337668df60fbc54042376a911e77dd92f587b89794d7a667e71a0a5125a33a"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:d4c548fc9cf6c2ae0e9a3dd834ceb69c83be1354c829cf473a14e8c33265f2ac"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:DiffID",
                        "value": "sha256:fa6519b03a28b75d116628788d6c69ca3ef4b516c80c3a8bacbfec4a9865a1f5"
                    },
                    {
                        "name": "aquasecurity:trivy:ImageID",
                        "value": "sha256:236447ff912e8e58895475c43b0f729c22739e85e09923eeeafa84d38782ff38"
                    },
                    {
                        "name": "aquasecurity:trivy:RepoDigest",
                        "value": "registry.gitlab.com/lefosg/excid-cicd-demo-project@sha256:96c03ffde967ea6e3d62d1a985c76ab83f600e613076f87410ef1fad3c7d868d"
                    },
                    {
                        "name": "aquasecurity:trivy:RepoTag",
                        "value": "registry.gitlab.com/lefosg/excid-cicd-demo-project:1.0.7"
                    },
                    {
                        "name": "aquasecurity:trivy:SchemaVersion",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:Size",
                        "value": "1188916736"
                    }
                ]
            }
        },
        "components": [
            {
                "bom-ref": "02724976-0c89-486d-a3e3-5616fcc468c2",
                "type": "library",
                "name": "is-fullwidth-code-point",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "49dbcba3eb3e3cba5b97bce28eb6194775d23c88"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-fullwidth-code-point@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/is-fullwidth-code-point/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-fullwidth-code-point@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "066acbcc-202f-42fc-bc2a-48742d276e2b",
                "type": "library",
                "name": "yallist",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4eaebb818148fd3bcc27e1aef2d88497999f675e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BlueOak-1.0.0"
                        }
                    }
                ],
                "purl": "pkg:npm/yallist@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/node-gyp/node_modules/yallist/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yallist@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "06db1e21-2df7-42f4-acb0-318b04b99041",
                "type": "library",
                "name": "ansi-regex",
                "version": "6.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4f79e15ed0166e8a475f997546059bfc88beb90e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-regex@6.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@isaacs/cliui/node_modules/ansi-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-regex@6.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "081cd0c6-8a3f-4ac3-bbb3-1a382ef20041",
                "type": "library",
                "name": "minizlib",
                "version": "3.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "84d8d3aa79f268476fb7904393588b04eead52ed"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/minizlib@3.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/node-gyp/node_modules/minizlib/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minizlib@3.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "08e55d08-8e00-4c23-aa77-4242d1855daf",
                "type": "library",
                "name": "color-convert",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "03f26ab8597e0117b7ad15bcfa9f0b31c8375ea9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/color-convert@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/color-convert/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "color-convert@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "097ae652-3bc0-4999-9666-5406f8036e4b",
                "type": "library",
                "name": "debug",
                "version": "4.4.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f9ffe2d823ee9ade4030d8b64d46b34033506a5c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/debug@4.4.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/debug/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "debug@4.4.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "12eb7782-45b2-4169-a0af-4ac187c3a241",
                "type": "library",
                "name": "minipass",
                "version": "3.3.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc79b496665e2cdfc4bdaac9c7d7c4b2f4645f2c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass@3.3.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-sized/node_modules/minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass@3.3.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "19cb2c23-c836-4a3f-ac7f-e26d6df02fa8",
                "type": "library",
                "name": "fastest-levenshtein",
                "version": "1.0.16",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3aca1160ba8ff112a40cdfd2c860a5d6cd689391"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fastest-levenshtein@1.0.16",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fastest-levenshtein/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fastest-levenshtein@1.0.16"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "1b7c20aa-5590-47f0-ad5e-c4671073a434",
                "type": "library",
                "name": "safer-buffer",
                "version": "2.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5ed0fab8e5cac53e4d072acbd82fca9be08f5e67"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/safer-buffer@2.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/safer-buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "safer-buffer@2.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "20cc1758-794f-47e9-8c23-49c767fbb47b",
                "type": "library",
                "name": "minipass",
                "version": "3.3.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc79b496665e2cdfc4bdaac9c7d7c4b2f4645f2c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass@3.3.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tar/node_modules/fs-minipass/node_modules/minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass@3.3.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "21bd6554-71dd-4197-9ca8-926aa886f2bf",
                "type": "library",
                "name": "mkdirp",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7951629e27590ab8ae0e3a8e221b2679cda5dd35"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mkdirp@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/node-gyp/node_modules/mkdirp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mkdirp@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "2365f5c7-ecdc-418a-ba87-c2caa80ac506",
                "type": "library",
                "name": "graceful-fs",
                "version": "4.2.11",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "21a733b3f7e2ee153041de90fb03d5596934f346"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/graceful-fs@4.2.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/graceful-fs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "graceful-fs@4.2.11"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "23b0da91-5dd6-4136-814b-f7f271cc0b46",
                "type": "library",
                "name": "emoji-regex",
                "version": "9.2.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "238c48183550d02ab5c0dd37e13d57006dce640a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/emoji-regex@9.2.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@isaacs/cliui/node_modules/emoji-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "emoji-regex@9.2.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "25b8849b-ddb1-4475-aa8c-ce1924bf4478",
                "type": "library",
                "name": "mkdirp",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7951629e27590ab8ae0e3a8e221b2679cda5dd35"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mkdirp@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cacache/node_modules/mkdirp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mkdirp@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "271c82eb-e33e-46bb-94bf-1d299d8a55f1",
                "type": "library",
                "name": "negotiator",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "046524b23a7aefb2b0cfd3ebbd0fd84c0f7df3f6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/negotiator@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/make-fetch-happen/node_modules/negotiator/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "negotiator@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "2d3bde84-96c1-4340-bc86-ed071216b54f",
                "type": "library",
                "name": "minipass",
                "version": "3.3.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc79b496665e2cdfc4bdaac9c7d7c4b2f4645f2c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass@3.3.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-flush/node_modules/minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass@3.3.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "40b9d88e-4dd3-4d1a-85d6-6685210a5b00",
                "type": "library",
                "name": "fastest-levenshtein",
                "version": "1.0.16",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3aca1160ba8ff112a40cdfd2c860a5d6cd689391"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fastest-levenshtein@1.0.16",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/fastest-levenshtein/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fastest-levenshtein@1.0.16"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "47dc0a15-0bd3-4423-9f7d-906d79af6480",
                "type": "library",
                "name": "balanced-match",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ef0a0d2fd68c3396309ab54ab08c5f8d362436ea"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/balanced-match@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/balanced-match/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "balanced-match@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "48af7da3-bb91-4ebb-90e6-a2ae7e9f715a",
                "type": "library",
                "name": "isexe",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3b3eab80c4ffd08eef6b3381b98de7be3649d06b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/isexe@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/isexe/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "isexe@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "4b2619b4-340d-414d-b439-d64fbf97339d",
                "type": "library",
                "name": "string-width",
                "version": "5.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "53ae7a1b3953e86624927fec8421d453d9c88e41"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/string-width@5.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/wrap-ansi/node_modules/string-width/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "string-width@5.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "4bcfbefb-09bd-4b01-87f6-cd7dcc6eac6c",
                "type": "library",
                "name": "emoji-regex",
                "version": "8.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c26fe90da5886724a2676b8e3d5890beeacaad20"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/emoji-regex@8.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/emoji-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "emoji-regex@8.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "5158c049-2575-4685-89c7-a37da60226f3",
                "type": "library",
                "name": "balanced-match",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ef0a0d2fd68c3396309ab54ab08c5f8d362436ea"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/balanced-match@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/balanced-match/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "balanced-match@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "5243cb35-4e43-45a8-b3b8-875baec49f42",
                "type": "library",
                "name": "util-deprecate",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2e69081e7bab6e09d3dcfd680716fdeea577431d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/util-deprecate@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/util-deprecate/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "util-deprecate@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "57ff8f0d-5892-4c91-8ea5-5790435c7d60",
                "type": "library",
                "name": "yallist",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4eaebb818148fd3bcc27e1aef2d88497999f675e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BlueOak-1.0.0"
                        }
                    }
                ],
                "purl": "pkg:npm/yallist@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cacache/node_modules/yallist/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yallist@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "583ced29-c2d6-4d7c-9524-b17cb5ec6b73",
                "type": "operating-system",
                "name": "debian",
                "version": "12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:Class",
                        "value": "os-pkgs"
                    },
                    {
                        "name": "aquasecurity:trivy:Type",
                        "value": "debian"
                    }
                ]
            },
            {
                "bom-ref": "6001ec0b-7632-43d7-9eac-3594ad3b1e82",
                "type": "library",
                "name": "which",
                "version": "2.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "402837c5ba60f95b309957adc4657b8fe4fb1f05"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/which@2.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/which/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "which@2.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "60ea434f-fda8-45cc-96a6-d841caf3e131",
                "type": "library",
                "name": "strip-ansi",
                "version": "6.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "892d549c672831716abe655f087946d2644f2852"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/strip-ansi@6.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/strip-ansi-cjs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "strip-ansi@6.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "6532ef7f-4f94-4a0d-9d25-931d8240944e",
                "type": "library",
                "name": "debug",
                "version": "4.4.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f9ffe2d823ee9ade4030d8b64d46b34033506a5c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/debug@4.4.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/debug/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "debug@4.4.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "6762d01a-e47c-44b5-8aae-a34e1ab97050",
                "type": "library",
                "name": "chownr",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc7d452c2e7e9b57f311b04f8b5826656ccc8e1b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BlueOak-1.0.0"
                        }
                    }
                ],
                "purl": "pkg:npm/chownr@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/node-gyp/node_modules/chownr/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "chownr@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "6acf3674-5bd7-4277-932b-3d57a23bf220",
                "type": "library",
                "name": "ansi-regex",
                "version": "5.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f1b78e043012e1ab5689d57377093e88f1400677"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-regex@5.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ansi-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-regex@5.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "7316dc63-c246-4d32-8929-56694f909c74",
                "type": "library",
                "name": "strip-ansi",
                "version": "7.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "323ec71c0cdb2dfdcf717f3e324f0b77981d7c58"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/strip-ansi@7.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/wrap-ansi/node_modules/strip-ansi/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "strip-ansi@7.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "76aa4e32-78f5-4cea-ba35-9991d49e6483",
                "type": "library",
                "name": "mkdirp",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "036c90146bf405373889e2467a422030f14cec29"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mkdirp@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cacache/node_modules/mkdirp/dist/cjs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mkdirp@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "78714f2e-a747-4b02-b202-8d1b270f9589",
                "type": "library",
                "name": "string-width",
                "version": "4.2.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a5306c15bba6cb123d9f061ca85eb56576c6638f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/string-width@4.2.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/string-width/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "string-width@4.2.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "7883efdc-d385-46cb-acf4-efbc347a8cb4",
                "type": "library",
                "name": "ansi-styles",
                "version": "4.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3c9ef7bd0a1c3d805814c654c457cc315c48c116"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-styles@4.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ansi-styles/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-styles@4.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "7cc9eda0-db80-4682-b701-e05e853ee76e",
                "type": "library",
                "name": "spdx-expression-parse",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "72082a3e9d4efe5a06c914b7ffa738f35b550ffb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/spdx-expression-parse@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/spdx-correct/node_modules/spdx-expression-parse/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "spdx-expression-parse@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "80396818-976a-4a0f-a6f0-2dd3593f5a23",
                "type": "library",
                "name": "iconv-lite",
                "version": "0.6.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a3d90badf75db503f5dd3ff3fb76d120d1424978"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/iconv-lite@0.6.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/iconv-lite/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "iconv-lite@0.6.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "8acbbeaa-de7e-448a-a2bc-ab9fe7694d51",
                "type": "library",
                "name": "ms",
                "version": "2.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c290eb97736177176d071da4ac855ab995685c97"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ms@2.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ms/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ms@2.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "8b7422b4-8cfb-4d46-9e74-3c44c53891de",
                "type": "library",
                "name": "wrap-ansi",
                "version": "7.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3442b7381f1b431861a986d8cdf144ced299db29"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/wrap-ansi@7.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/wrap-ansi-cjs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "wrap-ansi@7.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "92824453-507e-4c55-aa96-3a9078b23389",
                "type": "library",
                "name": "tar",
                "version": "7.4.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3108841b231fcdea3fafe29b212c47cb777b9458"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/tar@7.4.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/node-gyp/node_modules/tar/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tar@7.4.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "9371f87f-c21f-4f70-ab20-a779232f12d7",
                "type": "library",
                "name": "wrap-ansi",
                "version": "7.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3442b7381f1b431861a986d8cdf144ced299db29"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/wrap-ansi@7.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/wrap-ansi/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "wrap-ansi@7.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "98872e38-8c0c-4621-a28d-9def88cc73c6",
                "type": "library",
                "name": "color-name",
                "version": "1.1.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "411d7c87d5b1dec0d479aa13e3406b5c38ac34f5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/color-name@1.1.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/color-name/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "color-name@1.1.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "992171de-0b7e-46be-a402-1a4b0c73c4c1",
                "type": "library",
                "name": "ms",
                "version": "2.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c290eb97736177176d071da4ac855ab995685c97"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ms@2.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ms/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ms@2.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "9ab393c4-fbe0-45b8-ac94-fc29ea68de12",
                "type": "library",
                "name": "mkdirp",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "036c90146bf405373889e2467a422030f14cec29"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mkdirp@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/node-gyp/node_modules/mkdirp/dist/cjs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mkdirp@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "a937a9d3-b2bf-4d5e-a76e-ad151c5762c8",
                "type": "library",
                "name": "spdx-expression-parse",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "72082a3e9d4efe5a06c914b7ffa738f35b550ffb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/spdx-expression-parse@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/validate-npm-package-license/node_modules/spdx-expression-parse/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "spdx-expression-parse@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "aaeb7b53-e277-485c-8d5b-ef3a12ffc59e",
                "type": "library",
                "name": "is-fullwidth-code-point",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "49dbcba3eb3e3cba5b97bce28eb6194775d23c88"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-fullwidth-code-point@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-fullwidth-code-point/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-fullwidth-code-point@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "af2865d9-8f3a-4bd8-96bd-bb405693e2d8",
                "type": "library",
                "name": "negotiator",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "046524b23a7aefb2b0cfd3ebbd0fd84c0f7df3f6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/negotiator@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/negotiator/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "negotiator@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "b0223353-c6f6-4b03-823f-d2d463c3f86a",
                "type": "library",
                "name": "tar",
                "version": "7.4.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3108841b231fcdea3fafe29b212c47cb777b9458"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/tar@7.4.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cacache/node_modules/tar/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tar@7.4.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "b30a2b3e-3d90-4284-bd96-f2ed4f95cc04",
                "type": "library",
                "name": "which",
                "version": "2.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "402837c5ba60f95b309957adc4657b8fe4fb1f05"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/which@2.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cross-spawn/node_modules/which/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "which@2.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "b74d7e81-c924-4f29-a97a-e7850118918b",
                "type": "library",
                "name": "string-width",
                "version": "4.2.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a5306c15bba6cb123d9f061ca85eb56576c6638f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/string-width@4.2.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/string-width-cjs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "string-width@4.2.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "b83ec9dd-33ca-4b68-a02c-e96154d7d0aa",
                "type": "library",
                "name": "minizlib",
                "version": "3.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "84d8d3aa79f268476fb7904393588b04eead52ed"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/minizlib@3.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-registry-fetch/node_modules/minizlib/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minizlib@3.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "b9f9731f-8a45-4d75-850b-a23cc023a446",
                "type": "library",
                "name": "minipass",
                "version": "3.3.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc79b496665e2cdfc4bdaac9c7d7c4b2f4645f2c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass@3.3.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minizlib/node_modules/minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass@3.3.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "bb1ac690-b144-427e-8894-77e6afdf17cb",
                "type": "library",
                "name": "isexe",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3b3eab80c4ffd08eef6b3381b98de7be3649d06b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/isexe@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/isexe/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "isexe@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "bb347fb4-fed1-494f-b89b-0d0d331ace14",
                "type": "library",
                "name": "strip-ansi",
                "version": "7.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "323ec71c0cdb2dfdcf717f3e324f0b77981d7c58"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/strip-ansi@7.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@isaacs/cliui/node_modules/strip-ansi/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "strip-ansi@7.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "bce24e18-1dc7-48fb-907d-fb30502ab0b3",
                "type": "library",
                "name": "chownr",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc7d452c2e7e9b57f311b04f8b5826656ccc8e1b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BlueOak-1.0.0"
                        }
                    }
                ],
                "purl": "pkg:npm/chownr@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cacache/node_modules/chownr/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "chownr@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "bd197568-4e3e-4a08-83a7-072914f5130d",
                "type": "library",
                "name": "string-width",
                "version": "5.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "53ae7a1b3953e86624927fec8421d453d9c88e41"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/string-width@5.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@isaacs/cliui/node_modules/string-width/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "string-width@5.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "be92c5f6-466b-4649-bc8d-87739cca5d83",
                "type": "library",
                "name": "safe-buffer",
                "version": "5.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "bf9a046dba09dcce1bd474ff0f84c39cb57dc5b4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/safe-buffer@5.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/string_decoder/node_modules/safe-buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "safe-buffer@5.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "c261f2e1-8e21-4445-868a-e80f3ff13222",
                "type": "library",
                "name": "color-name",
                "version": "1.1.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "411d7c87d5b1dec0d479aa13e3406b5c38ac34f5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/color-name@1.1.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/color-name/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "color-name@1.1.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "c278a423-02f3-4fbe-9c23-4357d615d389",
                "type": "library",
                "name": "safe-buffer",
                "version": "5.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "bf9a046dba09dcce1bd474ff0f84c39cb57dc5b4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/safe-buffer@5.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/readable-stream/node_modules/safe-buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "safe-buffer@5.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "c64b49e7-961f-4ab5-8ef2-28fd8e755489",
                "type": "library",
                "name": "strip-ansi",
                "version": "6.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "892d549c672831716abe655f087946d2644f2852"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/strip-ansi@6.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/strip-ansi/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "strip-ansi@6.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "d04c3303-e2b3-4e73-a943-f4f269412a8c",
                "type": "library",
                "name": "strip-ansi",
                "version": "6.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "892d549c672831716abe655f087946d2644f2852"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/strip-ansi@6.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/strip-ansi/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "strip-ansi@6.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "d06f2224-ed86-4b35-bda8-86b6bcf1ad63",
                "type": "library",
                "name": "safer-buffer",
                "version": "2.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5ed0fab8e5cac53e4d072acbd82fca9be08f5e67"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/safer-buffer@2.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/safer-buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "safer-buffer@2.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "d306c067-0c04-4c37-a3ac-98429ed8d17d",
                "type": "library",
                "name": "emoji-regex",
                "version": "9.2.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "238c48183550d02ab5c0dd37e13d57006dce640a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/emoji-regex@9.2.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/wrap-ansi/node_modules/emoji-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "emoji-regex@9.2.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "d691211e-1aa3-4aa2-ade5-0e3ccbbbc64d",
                "type": "library",
                "name": "string-width",
                "version": "4.2.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a5306c15bba6cb123d9f061ca85eb56576c6638f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/string-width@4.2.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/string-width/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "string-width@4.2.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "d965c9e6-eebf-4ebb-a8b2-73f139fd5699",
                "type": "library",
                "name": "minizlib",
                "version": "3.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "84d8d3aa79f268476fb7904393588b04eead52ed"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/minizlib@3.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-fetch/node_modules/minizlib/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minizlib@3.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "ddecb881-2ff7-4825-8568-ef6e5114fef4",
                "type": "library",
                "name": "safe-buffer",
                "version": "5.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "bf9a046dba09dcce1bd474ff0f84c39cb57dc5b4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/safe-buffer@5.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mysql/node_modules/safe-buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "safe-buffer@5.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "debcff8e-fd4f-496e-94dc-b326f9d3fb04",
                "type": "library",
                "name": "ansi-regex",
                "version": "6.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4f79e15ed0166e8a475f997546059bfc88beb90e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-regex@6.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/wrap-ansi/node_modules/ansi-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-regex@6.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "e43b57b2-5ec4-46c3-9929-9f9204b9b2c1",
                "type": "library",
                "name": "ansi-regex",
                "version": "5.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f1b78e043012e1ab5689d57377093e88f1400677"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-regex@5.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ansi-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-regex@5.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "e5ec64b6-f5d9-49d1-b91a-6e552c68ec06",
                "type": "library",
                "name": "emoji-regex",
                "version": "8.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c26fe90da5886724a2676b8e3d5890beeacaad20"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/emoji-regex@8.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/emoji-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "emoji-regex@8.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "ebf503a9-5f91-40e5-8db8-15e1421d8737",
                "type": "library",
                "name": "graceful-fs",
                "version": "4.2.11",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "21a733b3f7e2ee153041de90fb03d5596934f346"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/graceful-fs@4.2.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/graceful-fs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "graceful-fs@4.2.11"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "efc54036-bd43-4ce5-98e9-1b411ae6ea08",
                "type": "library",
                "name": "util-deprecate",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2e69081e7bab6e09d3dcfd680716fdeea577431d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/util-deprecate@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/util-deprecate/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "util-deprecate@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "f28cb214-8017-4fa7-b514-5d401ff92adc",
                "type": "library",
                "name": "color-convert",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "03f26ab8597e0117b7ad15bcfa9f0b31c8375ea9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/color-convert@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/color-convert/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "color-convert@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "f769a5e2-d5b5-4519-b0ea-bc64d3da391a",
                "type": "library",
                "name": "iconv-lite",
                "version": "0.6.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a3d90badf75db503f5dd3ff3fb76d120d1424978"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/iconv-lite@0.6.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/iconv-lite/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "iconv-lite@0.6.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "fa758864-5a82-4563-8e39-3bc5f439b37b",
                "type": "library",
                "name": "ansi-styles",
                "version": "4.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3c9ef7bd0a1c3d805814c654c457cc315c48c116"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-styles@4.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/wrap-ansi-cjs/node_modules/ansi-styles/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-styles@4.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "fa7be9e3-d7f7-4af3-bc76-b94886a616ef",
                "type": "library",
                "name": "minipass",
                "version": "3.3.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc79b496665e2cdfc4bdaac9c7d7c4b2f4645f2c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass@3.3.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-pipeline/node_modules/minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass@3.3.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "ffc21f4e-d8f1-4829-b77a-9328445d6d7f",
                "type": "library",
                "name": "minizlib",
                "version": "3.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "84d8d3aa79f268476fb7904393588b04eead52ed"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/minizlib@3.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cacache/node_modules/minizlib/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minizlib@3.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/adduser@3.134?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Adduser Developers <adduser@packages.debian.org>"
                },
                "name": "adduser",
                "version": "3.134",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/adduser@3.134?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "adduser@3.134"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "adduser"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.134"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/apt@2.6.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "APT Development Team <deity@lists.debian.org>"
                },
                "name": "apt",
                "version": "2.6.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/apt@2.6.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "apt@2.6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "apt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.6.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/autoconf@2.71-3?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian QA Group <packages@qa.debian.org>"
                },
                "name": "autoconf",
                "version": "2.71-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-short-disclaimer"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-long-disclaimer"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-without-disclaimer"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-without-notices-or-disclaimer"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-X-Consortium"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Texinfo exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    },
                    {
                        "license": {
                            "name": "no-modification"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "other"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/autoconf@2.71-3?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "autoconf@2.71-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "autoconf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.71"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/automake@1.16.5-1.3?arch=all&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Eric Dorland <eric@debian.org>"
                },
                "name": "automake",
                "version": "1:1.16.5-1.3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/automake@1.16.5-1.3?arch=all&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "automake@1:1.16.5-1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "automake-1.16"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.16.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/autotools-dev@20220109.1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Henrique de Moraes Holschuh <hmh@debian.org>"
                },
                "name": "autotools-dev",
                "version": "20220109.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/autotools-dev@20220109.1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "autotools-dev@20220109.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "autotools-dev"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "20220109.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/base-files@12.4%2Bdeb12u11?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Santiago Vila <sanvila@debian.org>"
                },
                "name": "base-files",
                "version": "12.4+deb12u11",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/base-files@12.4%2Bdeb12u11?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "base-files@12.4+deb12u11"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "base-files"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.4+deb12u11"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/base-passwd@3.6.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Colin Watson <cjwatson@debian.org>"
                },
                "name": "base-passwd",
                "version": "3.6.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/base-passwd@3.6.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "base-passwd@3.6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "base-passwd"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.6.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/bash@5.2.15-2%2Bb8?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "bash",
                "version": "5.2.15-2+b8",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Latex2e"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/bash@5.2.15-2%2Bb8?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bash@5.2.15-2+b8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "bash"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.2.15"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/binutils-common@2.40-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "binutils-common",
                "version": "2.40-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/binutils-common@2.40-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "binutils-common@2.40-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "binutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/binutils-x86-64-linux-gnu@2.40-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "binutils-x86-64-linux-gnu",
                "version": "2.40-2",
                "purl": "pkg:deb/debian/binutils-x86-64-linux-gnu@2.40-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "binutils-x86-64-linux-gnu@2.40-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "binutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/binutils@2.40-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "binutils",
                "version": "2.40-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/binutils@2.40-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "binutils@2.40-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "binutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/bsdutils@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "bsdutils",
                "version": "1:2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/bsdutils@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bsdutils@1:2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/bzip2@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Anibal Monsalve Salazar <anibal@debian.org>"
                },
                "name": "bzip2",
                "version": "1.0.8-5+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/bzip2@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bzip2@1.0.8-5+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "bzip2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.8"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/ca-certificates@20230311%2Bdeb12u1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Julien Cristau <jcristau@debian.org>"
                },
                "name": "ca-certificates",
                "version": "20230311+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/ca-certificates@20230311%2Bdeb12u1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ca-certificates@20230311+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ca-certificates"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "20230311+deb12u1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/comerr-dev@2.1-1.47.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theodore Y. Ts'o <tytso@mit.edu>"
                },
                "name": "comerr-dev",
                "version": "2.1-1.47.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-US-export"
                        }
                    },
                    {
                        "license": {
                            "name": "Kazlib"
                        }
                    },
                    {
                        "license": {
                            "name": "Latex2e"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Texinfo exception"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/comerr-dev@2.1-1.47.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "comerr-dev@2.1-1.47.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "e2fsprogs"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.47.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/coreutils@9.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Michael Stone <mstone@debian.org>"
                },
                "name": "coreutils",
                "version": "9.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/coreutils@9.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "coreutils@9.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "coreutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "9.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/cpp-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "cpp-12",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/cpp-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cpp-12@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/cpp@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "cpp",
                "version": "4:12.2.0-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/cpp@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cpp@4:12.2.0-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.203"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/curl@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alessandro Ghedini <ghedo@debian.org>"
                },
                "name": "curl",
                "version": "7.88.1-10+deb12u12",
                "licenses": [
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "OLDAP-2.8"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Libtool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/curl@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "curl@7.88.1-10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "curl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "7.88.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/dash@0.5.12-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Andrej Shadura <andrewsh@debian.org>"
                },
                "name": "dash",
                "version": "0.5.12-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/dash@0.5.12-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "dash@0.5.12-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "dash"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.5.12"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debconf Developers <debconf-devel@lists.alioth.debian.org>"
                },
                "name": "debconf",
                "version": "1.5.82",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "debconf@1.5.82"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "debconf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.5.82"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/debian-archive-keyring@2023.3%2Bdeb12u2?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Release Team <packages@release.debian.org>"
                },
                "name": "debian-archive-keyring",
                "version": "2023.3+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/debian-archive-keyring@2023.3%2Bdeb12u2?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "debian-archive-keyring@2023.3+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "debian-archive-keyring"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2023.3+deb12u2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/debianutils@5.7-0.5~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Clint Adams <clint@debian.org>"
                },
                "name": "debianutils",
                "version": "5.7-0.5~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "SMAIL-GPL"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/debianutils@5.7-0.5~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "debianutils@5.7-0.5~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "debianutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0.5~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.7"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/default-libmysqlclient-dev@1.1.0?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian MySQL Maintainers <pkg-mysql-maint@lists.alioth.debian.org>"
                },
                "name": "default-libmysqlclient-dev",
                "version": "1.1.0",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/default-libmysqlclient-dev@1.1.0?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "default-libmysqlclient-dev@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mysql-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.1.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/diffutils@3.8-4?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Santiago Vila <sanvila@debian.org>"
                },
                "name": "diffutils",
                "version": "1:3.8-4",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with texinfo exception"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/diffutils@3.8-4?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "diffutils@1:3.8-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "diffutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.8"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/dirmngr@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "dirmngr",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/dirmngr@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "dirmngr@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/dpkg-dev@1.21.22?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Dpkg Developers <debian-dpkg@lists.debian.org>"
                },
                "name": "dpkg-dev",
                "version": "1.21.22",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-s-s-d"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/dpkg-dev@1.21.22?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "dpkg-dev@1.21.22"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "dpkg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.21.22"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Dpkg Developers <debian-dpkg@lists.debian.org>"
                },
                "name": "dpkg",
                "version": "1.21.22",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-s-s-d"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "dpkg@1.21.22"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "dpkg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.21.22"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/e2fsprogs@1.47.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theodore Y. Ts'o <tytso@mit.edu>"
                },
                "name": "e2fsprogs",
                "version": "1.47.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-US-export"
                        }
                    },
                    {
                        "license": {
                            "name": "Kazlib"
                        }
                    },
                    {
                        "license": {
                            "name": "Latex2e"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Texinfo exception"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/e2fsprogs@1.47.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "e2fsprogs@1.47.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "e2fsprogs"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.47.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/file@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Christoph Biedl <debian.axhn@manchmal.in-ulm.de>"
                },
                "name": "file",
                "version": "1:5.44-3",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause-alike"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-NetBSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-regents"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-Old-Style-with-legal-disclaimer-2"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/file@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "file@1:5.44-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "file"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.44"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/findutils@4.9.0-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Andreas Metzler <ametzler@debian.org>"
                },
                "name": "findutils",
                "version": "4.9.0-4",
                "licenses": [
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL with automake exception"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause and/or GPL-3+"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison-2.2 exception"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC and/or LGPL-2.1+"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/findutils@4.9.0-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "findutils@4.9.0-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "findutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.9.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/fontconfig-config@2.14.1-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian freedesktop.org maintainers <pkg-freedesktop-maintainers@lists.alioth.debian.org>"
                },
                "name": "fontconfig-config",
                "version": "2.14.1-4",
                "purl": "pkg:deb/debian/fontconfig-config@2.14.1-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fontconfig-config@2.14.1-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "fontconfig"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.14.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/fontconfig@2.14.1-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian freedesktop.org maintainers <pkg-freedesktop-maintainers@lists.alioth.debian.org>"
                },
                "name": "fontconfig",
                "version": "2.14.1-4",
                "purl": "pkg:deb/debian/fontconfig@2.14.1-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fontconfig@2.14.1-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "fontconfig"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.14.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/fonts-dejavu-core@2.37-6?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Fonts Task Force <debian-fonts@lists.debian.org>"
                },
                "name": "fonts-dejavu-core",
                "version": "2.37-6",
                "licenses": [
                    {
                        "license": {
                            "name": "bitstream-vera"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/fonts-dejavu-core@2.37-6?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fonts-dejavu-core@2.37-6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "fonts-dejavu"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.37"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/g%2B%2B-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "g++-12",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/g%2B%2B-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "g++-12@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/g%2B%2B@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "g++",
                "version": "4:12.2.0-3",
                "purl": "pkg:deb/debian/g%2B%2B@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "g++@4:12.2.0-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.203"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "gcc-12-base",
                "version": "12.2.0-14+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.2-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gcc-12-base@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gcc-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "gcc-12",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/gcc-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gcc-12@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gcc@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "gcc",
                "version": "4:12.2.0-3",
                "purl": "pkg:deb/debian/gcc@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gcc@4:12.2.0-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.203"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gir1.2-freedesktop@1.74.0-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "gir1.2-freedesktop",
                "version": "1.74.0-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gir1.2-freedesktop@1.74.0-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gir1.2-freedesktop@1.74.0-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gobject-introspection"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.74.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gir1.2-gdkpixbuf-2.0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "gir1.2-gdkpixbuf-2.0",
                "version": "2.42.10+dfsg-1+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gir1.2-gdkpixbuf-2.0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gir1.2-gdkpixbuf-2.0@2.42.10+dfsg-1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdk-pixbuf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.42.10+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gir1.2-glib-2.0@1.74.0-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "gir1.2-glib-2.0",
                "version": "1.74.0-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gir1.2-glib-2.0@1.74.0-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gir1.2-glib-2.0@1.74.0-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gobject-introspection"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.74.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gir1.2-rsvg-2.0@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "gir1.2-rsvg-2.0",
                "version": "2.54.7+dfsg-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "0BSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unlicense"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Sun-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-zero-waive-1.0-us"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gir1.2-rsvg-2.0@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gir1.2-rsvg-2.0@2.54.7+dfsg-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "librsvg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.54.7+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/git-man@2.39.5-0%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Jonathan Nieder <jrnieder@gmail.com>"
                },
                "name": "git-man",
                "version": "1:2.39.5-0+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-1"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "mingw-runtime"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "dlmalloc"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/git-man@2.39.5-0%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "git-man@1:2.39.5-0+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "git"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.39.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/git@2.39.5-0%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Jonathan Nieder <jrnieder@gmail.com>"
                },
                "name": "git",
                "version": "1:2.39.5-0+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-1"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "mingw-runtime"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "dlmalloc"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/git@2.39.5-0%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "git@1:2.39.5-0+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "git"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.39.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gnupg-l10n@2.2.40-1.1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gnupg-l10n",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gnupg-l10n@2.2.40-1.1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gnupg-l10n@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gnupg-utils@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gnupg-utils",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gnupg-utils@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gnupg-utils@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gnupg@2.2.40-1.1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gnupg",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gnupg@2.2.40-1.1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gnupg@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gpg-agent@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gpg-agent",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gpg-agent@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gpg-agent@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gpg-wks-client@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gpg-wks-client",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gpg-wks-client@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gpg-wks-client@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gpg-wks-server@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gpg-wks-server",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gpg-wks-server@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gpg-wks-server@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gpg@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gpg",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gpg@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gpg@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gpgconf@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gpgconf",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gpgconf@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gpgconf@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gpgsm@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gpgsm",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gpgsm@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gpgsm@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gpgv@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "gpgv",
                "version": "2.2.40-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RFC-Reference"
                        }
                    },
                    {
                        "license": {
                            "name": "TinySCHEME"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gpgv@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gpgv@2.2.40-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnupg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/grep@3.8-5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Anibal Monsalve Salazar <anibal@debian.org>"
                },
                "name": "grep",
                "version": "3.8-5",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/grep@3.8-5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "grep@3.8-5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "grep"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.8"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/gzip@1.12-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Milan Kupcevic <milan@debian.org>"
                },
                "name": "gzip",
                "version": "1.12-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3+-no-invariant"
                        }
                    },
                    {
                        "license": {
                            "name": "FSF-manpages"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-3"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/gzip@1.12-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gzip@1.12-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gzip"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.12"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/hicolor-icon-theme@0.17-2?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "hicolor-icon-theme",
                "version": "0.17-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/hicolor-icon-theme@0.17-2?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "hicolor-icon-theme@0.17-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "hicolor-icon-theme"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.17"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/hostname@3.23%2Bnmu1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Michael Meskes <meskes@debian.org>"
                },
                "name": "hostname",
                "version": "3.23+nmu1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/hostname@3.23%2Bnmu1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "hostname@3.23+nmu1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "hostname"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.23+nmu1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/icu-devtools@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "icu-devtools",
                "version": "72.1-3+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/icu-devtools@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "icu-devtools@72.1-3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "icu"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "72.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "imagemagick-6-common",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "imagemagick-6-common@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/imagemagick-6.q16@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "imagemagick-6.q16",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/imagemagick-6.q16@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "imagemagick-6.q16@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/imagemagick@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "imagemagick",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/imagemagick@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "imagemagick@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/init-system-helpers@1.65.2?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian systemd Maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>"
                },
                "name": "init-system-helpers",
                "version": "1.65.2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/init-system-helpers@1.65.2?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "init-system-helpers@1.65.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "init-system-helpers"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.65.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/krb5-multidev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "krb5-multidev",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/krb5-multidev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "krb5-multidev@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libacl1@2.3.1-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Guillem Jover <guillem@debian.org>"
                },
                "name": "libacl1",
                "version": "2.3.1-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libacl1@2.3.1-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libacl1@2.3.1-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "acl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.3.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libaom3@3.6.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Multimedia Maintainers <debian-multimedia@lists.debian.org>"
                },
                "name": "libaom3",
                "version": "3.6.0-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-md5"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libaom3@3.6.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libaom3@3.6.0-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "aom"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.6.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libapr1@1.7.2-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Apache Maintainers <debian-apache@lists.debian.org>"
                },
                "name": "libapr1",
                "version": "1.7.2-3+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libapr1@1.7.2-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libapr1@1.7.2-3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "apr"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.7.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libaprutil1@1.6.3-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Apache Maintainers <debian-apache@lists.debian.org>"
                },
                "name": "libaprutil1",
                "version": "1.6.3-1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libaprutil1@1.6.3-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libaprutil1@1.6.3-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "apr-util"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.6.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libapt-pkg6.0@2.6.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "APT Development Team <deity@lists.debian.org>"
                },
                "name": "libapt-pkg6.0",
                "version": "2.6.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libapt-pkg6.0@2.6.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libapt-pkg6.0@2.6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "apt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.6.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libasan8@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libasan8",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libasan8@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libasan8@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG-Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "libassuan0",
                "version": "2.5.5-5",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GAP~FSF"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with libtool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GAP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libassuan0@2.5.5-5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libassuan"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libatomic1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libatomic1",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libatomic1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libatomic1@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libattr1@2.5.1-4?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Guillem Jover <guillem@debian.org>"
                },
                "name": "libattr1",
                "version": "1:2.5.1-4",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libattr1@2.5.1-4?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libattr1@1:2.5.1-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "attr"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libaudit-common@3.0.9-1?arch=all&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Laurent Bigonville <bigon@debian.org>"
                },
                "name": "libaudit-common",
                "version": "1:3.0.9-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libaudit-common@3.0.9-1?arch=all&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libaudit-common@1:3.0.9-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "audit"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.0.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Laurent Bigonville <bigon@debian.org>"
                },
                "name": "libaudit1",
                "version": "1:3.0.9-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libaudit1@1:3.0.9-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "audit"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.0.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libbinutils@2.40-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libbinutils",
                "version": "2.40-2",
                "purl": "pkg:deb/debian/libbinutils@2.40-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libbinutils@2.40-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "binutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libblkid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "libblkid-dev",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libblkid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libblkid-dev@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libblkid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "libblkid1",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libblkid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libblkid1@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libbrotli-dev@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Tomasz Buchert <tomasz@debian.org>"
                },
                "name": "libbrotli-dev",
                "version": "1.0.9-2+b6",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libbrotli-dev@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libbrotli-dev@1.0.9-2+b6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "brotli"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libbrotli1@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Tomasz Buchert <tomasz@debian.org>"
                },
                "name": "libbrotli1",
                "version": "1.0.9-2+b6",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libbrotli1@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libbrotli1@1.0.9-2+b6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "brotli"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libbsd0@0.11.7-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Guillem Jover <guillem@debian.org>"
                },
                "name": "libbsd0",
                "version": "0.11.7-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-Niels-Provos"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-Regents"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-NetBSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-author"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-John-Birrell"
                        }
                    },
                    {
                        "license": {
                            "name": "libutil-David-Nugent"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-clause-verbatim"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-clause-author"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC-Original"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Beerware"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libbsd0@0.11.7-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libbsd0@0.11.7-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libbsd"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.11.7"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Anibal Monsalve Salazar <anibal@debian.org>"
                },
                "name": "libbz2-1.0",
                "version": "1.0.8-5+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libbz2-1.0@1.0.8-5+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "bzip2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.8"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libbz2-dev@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Anibal Monsalve Salazar <anibal@debian.org>"
                },
                "name": "libbz2-dev",
                "version": "1.0.8-5+b1",
                "purl": "pkg:deb/debian/libbz2-dev@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libbz2-dev@1.0.8-5+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "bzip2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.8"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libc-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "libc-bin",
                "version": "2.36-9+deb12u10",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libc-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libc-bin@2.36-9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glibc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.36"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libc-dev-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "libc-dev-bin",
                "version": "2.36-9+deb12u10",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libc-dev-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libc-dev-bin@2.36-9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glibc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.36"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "libc6-dev",
                "version": "2.36-9+deb12u10",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libc6-dev@2.36-9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glibc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.36"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "libc6",
                "version": "2.36-9+deb12u10",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libc6@2.36-9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glibc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "9+deb12u10"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.36"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcairo-gobject2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libcairo-gobject2",
                "version": "1.16.0-7",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcairo-gobject2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcairo-gobject2@1.16.0-7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "cairo"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.16.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcairo-script-interpreter2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libcairo-script-interpreter2",
                "version": "1.16.0-7",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcairo-script-interpreter2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcairo-script-interpreter2@1.16.0-7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "cairo"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.16.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcairo2-dev@1.16.0-7?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libcairo2-dev",
                "version": "1.16.0-7",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcairo2-dev@1.16.0-7?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcairo2-dev@1.16.0-7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "cairo"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.16.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libcairo2",
                "version": "1.16.0-7",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcairo2@1.16.0-7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "cairo"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.16.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcap-ng0@0.8.3-1%2Bb3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "H\u00e5vard F. Aasen <havard.f.aasen@pfft.no>"
                },
                "name": "libcap-ng0",
                "version": "0.8.3-1+b3",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcap-ng0@0.8.3-1%2Bb3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcap-ng0@0.8.3-1+b3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libcap-ng"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.8.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcap2@2.66-4%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Christian Kastner <ckk@debian.org>"
                },
                "name": "libcap2",
                "version": "1:2.66-4+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcap2@2.66-4%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcap2@1:2.66-4+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libcap2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.66"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcbor0.8@0.8.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Vincent Bernat <bernat@debian.org>"
                },
                "name": "libcbor0.8",
                "version": "0.8.0-2+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcbor0.8@0.8.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcbor0.8@0.8.0-2+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libcbor"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.8.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcc1-0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libcc1-0",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libcc1-0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcc1-0@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theodore Y. Ts'o <tytso@mit.edu>"
                },
                "name": "libcom-err2",
                "version": "1.47.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-US-export"
                        }
                    },
                    {
                        "license": {
                            "name": "Kazlib"
                        }
                    },
                    {
                        "license": {
                            "name": "Latex2e"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Texinfo exception"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcom-err2@1.47.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "e2fsprogs"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.47.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcrypt-dev@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Marco d'Itri <md@linux.it>"
                },
                "name": "libcrypt-dev",
                "version": "1:4.4.33-2",
                "purl": "pkg:deb/debian/libcrypt-dev@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcrypt-dev@1:4.4.33-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcrypt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.4.33"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Marco d'Itri <md@linux.it>"
                },
                "name": "libcrypt1",
                "version": "1:4.4.33-2",
                "purl": "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcrypt1@1:4.4.33-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcrypt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.4.33"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libctf-nobfd0@2.40-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libctf-nobfd0",
                "version": "2.40-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libctf-nobfd0@2.40-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libctf-nobfd0@2.40-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "binutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libctf0@2.40-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libctf0",
                "version": "2.40-2",
                "purl": "pkg:deb/debian/libctf0@2.40-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libctf0@2.40-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "binutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcurl3-gnutls@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alessandro Ghedini <ghedo@debian.org>"
                },
                "name": "libcurl3-gnutls",
                "version": "7.88.1-10+deb12u12",
                "licenses": [
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "OLDAP-2.8"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Libtool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcurl3-gnutls@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcurl3-gnutls@7.88.1-10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "curl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "7.88.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcurl4-openssl-dev@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alessandro Ghedini <ghedo@debian.org>"
                },
                "name": "libcurl4-openssl-dev",
                "version": "7.88.1-10+deb12u12",
                "licenses": [
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "OLDAP-2.8"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Libtool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcurl4-openssl-dev@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcurl4-openssl-dev@7.88.1-10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "curl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "7.88.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libcurl4@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alessandro Ghedini <ghedo@debian.org>"
                },
                "name": "libcurl4",
                "version": "7.88.1-10+deb12u12",
                "licenses": [
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "OLDAP-2.8"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Autoconf-data exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Libtool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libcurl4@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libcurl4@7.88.1-10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "curl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "10+deb12u12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "7.88.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdatrie1@0.2.13-2%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theppitak Karoonboonyanan <thep@debian.org>"
                },
                "name": "libdatrie1",
                "version": "0.2.13-2+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdatrie1@0.2.13-2%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdatrie1@0.2.13-2+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libdatrie"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.2.13"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdav1d6@1.0.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Multimedia Maintainers <debian-multimedia@lists.debian.org>"
                },
                "name": "libdav1d6",
                "version": "1.0.0-2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdav1d6@1.0.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdav1d6@1.0.0-2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "dav1d"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdb-dev@5.3.2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Bastian Germann <bage@debian.org>"
                },
                "name": "libdb-dev",
                "version": "5.3.2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdb-dev@5.3.2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdb-dev@5.3.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "db-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.3.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdb5.3-dev@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Bastian Germann <bage@debian.org>"
                },
                "name": "libdb5.3-dev",
                "version": "5.3.28+dfsg2-1",
                "purl": "pkg:deb/debian/libdb5.3-dev@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdb5.3-dev@5.3.28+dfsg2-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "db5.3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.3.28+dfsg2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Bastian Germann <bage@debian.org>"
                },
                "name": "libdb5.3",
                "version": "5.3.28+dfsg2-1",
                "licenses": [
                    {
                        "license": {
                            "name": "Sleepycat"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MS-PL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-old"
                        }
                    },
                    {
                        "license": {
                            "name": "TCL-like"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-fjord"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdb5.3@5.3.28+dfsg2-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "db5.3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.3.28+dfsg2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libde265-0@1.0.11-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Multimedia Maintainers <debian-multimedia@lists.debian.org>"
                },
                "name": "libde265-0",
                "version": "1.0.11-1+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-1"
                        }
                    },
                    {
                        "license": {
                            "name": "other-1"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libde265-0@1.0.11-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libde265-0@1.0.11-1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libde265"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.11"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdebconfclient0@0.270?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Install System Team <debian-boot@lists.debian.org>"
                },
                "name": "libdebconfclient0",
                "version": "0.270",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdebconfclient0@0.270?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdebconfclient0@0.270"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "cdebconf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.270"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdeflate-dev@1.14-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Med Packaging Team <debian-med-packaging@lists.alioth.debian.org>"
                },
                "name": "libdeflate-dev",
                "version": "1.14-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdeflate-dev@1.14-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdeflate-dev@1.14-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libdeflate"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.14"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdeflate0@1.14-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Med Packaging Team <debian-med-packaging@lists.alioth.debian.org>"
                },
                "name": "libdeflate0",
                "version": "1.14-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdeflate0@1.14-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdeflate0@1.14-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libdeflate"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.14"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdjvulibre-dev@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Barak A. Pearlmutter <bap@debian.org>"
                },
                "name": "libdjvulibre-dev",
                "version": "3.5.28-2+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdjvulibre-dev@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdjvulibre-dev@3.5.28-2+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "djvulibre"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.5.28"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdjvulibre-text@3.5.28-2?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Barak A. Pearlmutter <bap@debian.org>"
                },
                "name": "libdjvulibre-text",
                "version": "3.5.28-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdjvulibre-text@3.5.28-2?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdjvulibre-text@3.5.28-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "djvulibre"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.5.28"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdjvulibre21@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Barak A. Pearlmutter <bap@debian.org>"
                },
                "name": "libdjvulibre21",
                "version": "3.5.28-2+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdjvulibre21@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdjvulibre21@3.5.28-2+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "djvulibre"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.5.28"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libdpkg-perl@1.21.22?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Dpkg Developers <debian-dpkg@lists.debian.org>"
                },
                "name": "libdpkg-perl",
                "version": "1.21.22",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-s-s-d"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libdpkg-perl@1.21.22?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libdpkg-perl@1.21.22"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "dpkg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.21.22"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libedit2@3.1-20221030-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "LLVM Packaging Team <pkg-llvm-team@lists.alioth.debian.org>"
                },
                "name": "libedit2",
                "version": "3.1-20221030-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libedit2@3.1-20221030-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libedit2@3.1-20221030-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libedit"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.1-20221030"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libelf1@0.188-2.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Elfutils Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libelf1",
                "version": "0.188-2.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libelf1@0.188-2.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libelf1@0.188-2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "elfutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.188"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liberror-perl@0.17029-2?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>"
                },
                "name": "liberror-perl",
                "version": "0.17029-2",
                "licenses": [
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT/X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liberror-perl@0.17029-2?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liberror-perl@0.17029-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "liberror-perl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.17029"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libevent-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libevent-2.1-7",
                "version": "2.1.12-stable-8",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR-No-Warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libevent-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libevent-2.1-7@2.1.12-stable-8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libevent"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.12-stable"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libevent-core-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libevent-core-2.1-7",
                "version": "2.1.12-stable-8",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR-No-Warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libevent-core-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libevent-core-2.1-7@2.1.12-stable-8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libevent"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.12-stable"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libevent-dev@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libevent-dev",
                "version": "2.1.12-stable-8",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR-No-Warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libevent-dev@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libevent-dev@2.1.12-stable-8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libevent"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.12-stable"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libevent-extra-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libevent-extra-2.1-7",
                "version": "2.1.12-stable-8",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR-No-Warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libevent-extra-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libevent-extra-2.1-7@2.1.12-stable-8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libevent"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.12-stable"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libevent-openssl-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libevent-openssl-2.1-7",
                "version": "2.1.12-stable-8",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR-No-Warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libevent-openssl-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libevent-openssl-2.1-7@2.1.12-stable-8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libevent"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.12-stable"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libevent-pthreads-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libevent-pthreads-2.1-7",
                "version": "2.1.12-stable-8",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR-No-Warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "curl"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libevent-pthreads-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libevent-pthreads-2.1-7@2.1.12-stable-8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libevent"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.12-stable"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libexif-dev@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libexif-dev",
                "version": "0.6.24-1+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libexif-dev@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libexif-dev@0.6.24-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libexif"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.6.24"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libexif12@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libexif12",
                "version": "0.6.24-1+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libexif12@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libexif12@0.6.24-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libexif"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.6.24"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libexpat1-dev@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libexpat1-dev",
                "version": "2.5.0-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libexpat1-dev@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libexpat1-dev@2.5.0-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "expat"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libexpat1",
                "version": "2.5.0-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libexpat1@2.5.0-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "expat"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libext2fs2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theodore Y. Ts'o <tytso@mit.edu>"
                },
                "name": "libext2fs2",
                "version": "1.47.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-US-export"
                        }
                    },
                    {
                        "license": {
                            "name": "Kazlib"
                        }
                    },
                    {
                        "license": {
                            "name": "Latex2e"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Texinfo exception"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libext2fs2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libext2fs2@1.47.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "e2fsprogs"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.47.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libffi-dev@3.4.4-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libffi-dev",
                "version": "3.4.4-1",
                "purl": "pkg:deb/debian/libffi-dev@3.4.4-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libffi-dev@3.4.4-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libffi"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libffi8",
                "version": "3.4.4-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libffi8@3.4.4-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libffi"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfftw3-double3@3.3.10-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Science Maintainers <debian-science-maintainers@lists.alioth.debian.org>"
                },
                "name": "libfftw3-double3",
                "version": "3.3.10-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libfftw3-double3@3.3.10-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfftw3-double3@3.3.10-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "fftw3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.3.10"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfido2-1@1.12.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Authentication Maintainers <pkg-auth-maintainers@lists.alioth.debian.org>"
                },
                "name": "libfido2-1",
                "version": "1.12.0-2+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libfido2-1@1.12.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfido2-1@1.12.0-2+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libfido2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.12.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfontconfig-dev@2.14.1-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian freedesktop.org maintainers <pkg-freedesktop-maintainers@lists.alioth.debian.org>"
                },
                "name": "libfontconfig-dev",
                "version": "2.14.1-4",
                "purl": "pkg:deb/debian/libfontconfig-dev@2.14.1-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfontconfig-dev@2.14.1-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "fontconfig"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.14.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian freedesktop.org maintainers <pkg-freedesktop-maintainers@lists.alioth.debian.org>"
                },
                "name": "libfontconfig1",
                "version": "2.14.1-4",
                "purl": "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfontconfig1@2.14.1-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "fontconfig"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.14.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfreetype-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Hugh McMaster <hugh.mcmaster@outlook.com>"
                },
                "name": "libfreetype-dev",
                "version": "2.12.1+dfsg-5+deb12u4",
                "licenses": [
                    {
                        "license": {
                            "name": "FTL"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Public-Domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "OpenGroup-BSD-like"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libfreetype-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfreetype-dev@2.12.1+dfsg-5+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "freetype"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.12.1+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfreetype6-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Hugh McMaster <hugh.mcmaster@outlook.com>"
                },
                "name": "libfreetype6-dev",
                "version": "2.12.1+dfsg-5+deb12u4",
                "licenses": [
                    {
                        "license": {
                            "name": "FTL"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Public-Domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "OpenGroup-BSD-like"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libfreetype6-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfreetype6-dev@2.12.1+dfsg-5+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "freetype"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.12.1+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Hugh McMaster <hugh.mcmaster@outlook.com>"
                },
                "name": "libfreetype6",
                "version": "2.12.1+dfsg-5+deb12u4",
                "licenses": [
                    {
                        "license": {
                            "name": "FTL"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Public-Domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "OpenGroup-BSD-like"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfreetype6@2.12.1+dfsg-5+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "freetype"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.12.1+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libfribidi0@1.0.8-2.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Hebrew Packaging Team <team+hebrew@tracker.debian.org>"
                },
                "name": "libfribidi0",
                "version": "1.0.8-2.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libfribidi0@1.0.8-2.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libfribidi0@1.0.8-2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "fribidi"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.8"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgcc-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libgcc-12-dev",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libgcc-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgcc-12-dev@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libgcc-s1",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgcc-s1@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>"
                },
                "name": "libgcrypt20",
                "version": "1.10.1-3",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgcrypt20@1.10.1-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libgcrypt20"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.10.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgdbm-compat4@1.23-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libgdbm-compat4",
                "version": "1.23-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgdbm-compat4@1.23-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgdbm-compat4@1.23-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdbm"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.23"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgdbm-dev@1.23-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libgdbm-dev",
                "version": "1.23-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgdbm-dev@1.23-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgdbm-dev@1.23-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdbm"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.23"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgdbm6@1.23-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libgdbm6",
                "version": "1.23-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgdbm6@1.23-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgdbm6@1.23-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdbm"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.23"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgdk-pixbuf-2.0-0",
                "version": "2.42.10+dfsg-1+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgdk-pixbuf-2.0-0@2.42.10+dfsg-1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdk-pixbuf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.42.10+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgdk-pixbuf-2.0-dev@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgdk-pixbuf-2.0-dev",
                "version": "2.42.10+dfsg-1+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgdk-pixbuf-2.0-dev@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgdk-pixbuf-2.0-dev@2.42.10+dfsg-1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdk-pixbuf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.42.10+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgdk-pixbuf2.0-bin@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgdk-pixbuf2.0-bin",
                "version": "2.42.10+dfsg-1+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgdk-pixbuf2.0-bin@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgdk-pixbuf2.0-bin@2.42.10+dfsg-1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdk-pixbuf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.42.10+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgdk-pixbuf2.0-common@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgdk-pixbuf2.0-common",
                "version": "2.42.10+dfsg-1+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgdk-pixbuf2.0-common@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgdk-pixbuf2.0-common@2.42.10+dfsg-1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gdk-pixbuf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.42.10+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgirepository-1.0-1@1.74.0-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgirepository-1.0-1",
                "version": "1.74.0-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgirepository-1.0-1@1.74.0-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgirepository-1.0-1@1.74.0-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gobject-introspection"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.74.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libglib2.0-0",
                "version": "2.74.6-2+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Janik-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Iconv-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Mingw-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Old-GLib-Tests-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libglib2.0-0@2.74.6-2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glib2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.74.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libglib2.0-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libglib2.0-bin",
                "version": "2.74.6-2+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Janik-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Iconv-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Mingw-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Old-GLib-Tests-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libglib2.0-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libglib2.0-bin@2.74.6-2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glib2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.74.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libglib2.0-data@2.74.6-2%2Bdeb12u6?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libglib2.0-data",
                "version": "2.74.6-2+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Janik-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Iconv-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Mingw-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Old-GLib-Tests-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libglib2.0-data@2.74.6-2%2Bdeb12u6?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libglib2.0-data@2.74.6-2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glib2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.74.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libglib2.0-dev-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libglib2.0-dev-bin",
                "version": "2.74.6-2+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Janik-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Iconv-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Mingw-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Old-GLib-Tests-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libglib2.0-dev-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libglib2.0-dev-bin@2.74.6-2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glib2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.74.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libglib2.0-dev@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libglib2.0-dev",
                "version": "2.74.6-2+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Janik-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Iconv-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Mingw-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Old-GLib-Tests-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-DFS-2016"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0 with LLVM exception"
                        }
                    },
                    {
                        "license": {
                            "name": "Kuchling-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "Plumb-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-pcre"
                        }
                    },
                    {
                        "license": {
                            "name": "bzip2-1.0.6"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libglib2.0-dev@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libglib2.0-dev@2.74.6-2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "glib2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.74.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgmp-dev@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian Science Team <debian-science-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgmp-dev",
                "version": "2:6.2.1+dfsg1-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgmp-dev@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgmp-dev@2:6.2.1+dfsg1-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gmp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.2.1+dfsg1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian Science Team <debian-science-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgmp10",
                "version": "2:6.2.1+dfsg1-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgmp10@2:6.2.1+dfsg1-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gmp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.2.1+dfsg1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgmpxx4ldbl@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian Science Team <debian-science-maintainers@lists.alioth.debian.org>"
                },
                "name": "libgmpxx4ldbl",
                "version": "2:6.2.1+dfsg1-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgmpxx4ldbl@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgmpxx4ldbl@2:6.2.1+dfsg1-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gmp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.2.1+dfsg1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>"
                },
                "name": "libgnutls30",
                "version": "3.7.9-2+deb12u4",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgnutls30@3.7.9-2+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gnutls28"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.7.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgomp1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libgomp1",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libgomp1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgomp1@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "libgpg-error0",
                "version": "1.46-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "g10-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgpg-error0@1.46-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libgpg-error"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.46"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgprofng0@2.40-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libgprofng0",
                "version": "2.40-2",
                "purl": "pkg:deb/debian/libgprofng0@2.40-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgprofng0@2.40-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "binutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.40"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgraphite2-3@1.3.14-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian LibreOffice Maintainers <debian-openoffice@lists.debian.org>"
                },
                "name": "libgraphite2-3",
                "version": "1.3.14-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "custom-sil-open-font-license"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgraphite2-3@1.3.14-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgraphite2-3@1.3.14-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "graphite2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.14"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libgssapi-krb5-2",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgssapi-krb5-2@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libgssrpc4@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libgssrpc4",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libgssrpc4@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libgssrpc4@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libharfbuzz0b@6.0.0%2Bdfsg-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "\u0623\u062d\u0645\u062f \u0627\u0644\u0645\u062d\u0645\u0648\u062f\u064a (Ahmed El-Mahmoudy) <aelmahmoudy@users.sourceforge.net>"
                },
                "name": "libharfbuzz0b",
                "version": "6.0.0+dfsg-3",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "Monotype"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Font exception"
                        }
                    },
                    {
                        "license": {
                            "name": "UFL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with LibTool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libharfbuzz0b@6.0.0%2Bdfsg-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libharfbuzz0b@6.0.0+dfsg-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "harfbuzz"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.0.0+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libheif1@1.15.1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Multimedia Maintainers <debian-multimedia@lists.debian.org>"
                },
                "name": "libheif1",
                "version": "1.15.1-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libheif1@1.15.1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libheif1@1.15.1-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libheif"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.15.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libhogweed6@3.8.1-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Magnus Holmgren <holmgren@debian.org>"
                },
                "name": "libhogweed6",
                "version": "3.8.1-2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GAP"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libhogweed6@3.8.1-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libhogweed6@3.8.1-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "nettle"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.8.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libice-dev@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libice-dev",
                "version": "2:1.0.10-1",
                "purl": "pkg:deb/debian/libice-dev@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libice-dev@2:1.0.10-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libice"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.10"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libice6@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libice6",
                "version": "2:1.0.10-1",
                "purl": "pkg:deb/debian/libice6@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libice6@2:1.0.10-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libice"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.10"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libicu-dev@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libicu-dev",
                "version": "72.1-3+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libicu-dev@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libicu-dev@72.1-3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "icu"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "72.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libicu72@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libicu72",
                "version": "72.1-3+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libicu72@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libicu72@72.1-3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "icu"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "72.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Libidn team <help-libidn@gnu.org>"
                },
                "name": "libidn2-0",
                "version": "2.3.3-1+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libidn2-0@2.3.3-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libidn2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.3.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libimath-3-1-29@3.1.6-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libimath-3-1-29",
                "version": "3.1.6-1",
                "licenses": [
                    {
                        "license": {
                            "name": "imath"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libimath-3-1-29@3.1.6-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libimath-3-1-29@3.1.6-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imath"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.1.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libimath-dev@3.1.6-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libimath-dev",
                "version": "3.1.6-1",
                "licenses": [
                    {
                        "license": {
                            "name": "imath"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libimath-dev@3.1.6-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libimath-dev@3.1.6-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imath"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.1.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libisl23@0.25-1.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libisl23",
                "version": "0.25-1.1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libisl23@0.25-1.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libisl23@0.25-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "isl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.25"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libitm1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libitm1",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libitm1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libitm1@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libjansson4@2.14-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alessandro Ghedini <ghedo@debian.org>"
                },
                "name": "libjansson4",
                "version": "2.14-2",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libjansson4@2.14-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libjansson4@2.14-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "jansson"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.14"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libjbig-dev@2.1-6.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Michael van der Kolff <mvanderkolff@gmail.com>"
                },
                "name": "libjbig-dev",
                "version": "2.1-6.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libjbig-dev@2.1-6.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libjbig-dev@2.1-6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "jbigkit"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libjbig0@2.1-6.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Michael van der Kolff <mvanderkolff@gmail.com>"
                },
                "name": "libjbig0",
                "version": "2.1-6.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libjbig0@2.1-6.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libjbig0@2.1-6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "jbigkit"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libjpeg-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Ond\u0159ej Sur\u00fd <ondrej@debian.org>"
                },
                "name": "libjpeg-dev",
                "version": "1:2.1.5-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-BY-LC-NE"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "NTP"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libjpeg-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libjpeg-dev@1:2.1.5-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libjpeg-turbo"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libjpeg62-turbo-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Ond\u0159ej Sur\u00fd <ondrej@debian.org>"
                },
                "name": "libjpeg62-turbo-dev",
                "version": "1:2.1.5-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-BY-LC-NE"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "NTP"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libjpeg62-turbo-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libjpeg62-turbo-dev@1:2.1.5-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libjpeg-turbo"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Ond\u0159ej Sur\u00fd <ondrej@debian.org>"
                },
                "name": "libjpeg62-turbo",
                "version": "1:2.1.5-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-BY-LC-NE"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "NTP"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libjpeg62-turbo@1:2.1.5-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libjpeg-turbo"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libk5crypto3",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libk5crypto3@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libkadm5clnt-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libkadm5clnt-mit12",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libkadm5clnt-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libkadm5clnt-mit12@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libkadm5srv-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libkadm5srv-mit12",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libkadm5srv-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libkadm5srv-mit12@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libkdb5-10@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libkdb5-10",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libkdb5-10@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libkdb5-10@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libkeyutils1@1.6.3-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Christian Kastner <ckk@debian.org>"
                },
                "name": "libkeyutils1",
                "version": "1.6.3-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libkeyutils1@1.6.3-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libkeyutils1@1.6.3-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "keyutils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.6.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libkrb5-3",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libkrb5-3@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libkrb5-dev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libkrb5-dev",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libkrb5-dev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libkrb5-dev@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libkrb5support0",
                "version": "1.20.1-2+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libkrb5support0@1.20.1-2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "krb5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.20.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libksba8@1.6.3-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>"
                },
                "name": "libksba8",
                "version": "1.6.3-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFUL"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libksba8@1.6.3-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libksba8@1.6.3-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libksba"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.6.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblcms2-2@2.14-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Thomas Weber <tweber@debian.org>"
                },
                "name": "liblcms2-2",
                "version": "2.14-2",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "IJG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblcms2-2@2.14-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblcms2-2@2.14-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "lcms2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.14"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblcms2-dev@2.14-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Thomas Weber <tweber@debian.org>"
                },
                "name": "liblcms2-dev",
                "version": "2.14-2",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "IJG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblcms2-dev@2.14-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblcms2-dev@2.14-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "lcms2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.14"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libldap-2.5-0@2.5.13%2Bdfsg-5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian OpenLDAP Maintainers <pkg-openldap-devel@lists.alioth.debian.org>"
                },
                "name": "libldap-2.5-0",
                "version": "2.5.13+dfsg-5",
                "licenses": [
                    {
                        "license": {
                            "name": "OpenLDAP-2.8"
                        }
                    },
                    {
                        "license": {
                            "name": "FSF-unlimited"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Libtool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Libtool exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "UMich"
                        }
                    },
                    {
                        "license": {
                            "name": "F5"
                        }
                    },
                    {
                        "license": {
                            "name": "JCG"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-XC"
                        }
                    },
                    {
                        "license": {
                            "name": "NeoSoft-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Beerware"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-California"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-variant"
                        }
                    },
                    {
                        "license": {
                            "name": "Expat-ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "Expat-UNM"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-California"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libldap-2.5-0@2.5.13%2Bdfsg-5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libldap-2.5-0@2.5.13+dfsg-5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openldap"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.13+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblerc-dev@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GIS Project <pkg-grass-devel@lists.alioth.debian.org>"
                },
                "name": "liblerc-dev",
                "version": "4.0.0+ds-2",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblerc-dev@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblerc-dev@4.0.0+ds-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "lerc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.0.0+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblerc4@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GIS Project <pkg-grass-devel@lists.alioth.debian.org>"
                },
                "name": "liblerc4",
                "version": "4.0.0+ds-2",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblerc4@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblerc4@4.0.0+ds-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "lerc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.0.0+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblqr-1-0-dev@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Bernd Zeimetz <bzed@debian.org>"
                },
                "name": "liblqr-1-0-dev",
                "version": "0.4.2-2.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblqr-1-0-dev@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblqr-1-0-dev@0.4.2-2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "liblqr"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.4.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblqr-1-0@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Bernd Zeimetz <bzed@debian.org>"
                },
                "name": "liblqr-1-0",
                "version": "0.4.2-2.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblqr-1-0@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblqr-1-0@0.4.2-2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "liblqr"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.4.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblsan0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "liblsan0",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/liblsan0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblsan0@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libltdl-dev@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alastair McKinstry <mckinstry@debian.org>"
                },
                "name": "libltdl-dev",
                "version": "2.4.7-7~deb12u1",
                "purl": "pkg:deb/debian/libltdl-dev@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libltdl-dev@2.4.7-7~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libtool"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.4.7"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libltdl7@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alastair McKinstry <mckinstry@debian.org>"
                },
                "name": "libltdl7",
                "version": "2.4.7-7~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libltdl7@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libltdl7@2.4.7-7~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libtool"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.4.7"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblz4-1@1.9.4-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nobuhiro Iwamatsu <iwamatsu@debian.org>"
                },
                "name": "liblz4-1",
                "version": "1.9.4-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblz4-1@1.9.4-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblz4-1@1.9.4-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "lz4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.9.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblzma-dev@5.4.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sebastian Andrzej Siewior <sebastian@breakpoint.cc>"
                },
                "name": "liblzma-dev",
                "version": "5.4.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "PD"
                        }
                    },
                    {
                        "license": {
                            "name": "probably-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-fsf"
                        }
                    },
                    {
                        "license": {
                            "name": "Autoconf"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-nowarranty"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "none"
                        }
                    },
                    {
                        "license": {
                            "name": "config-h"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "noderivs"
                        }
                    },
                    {
                        "license": {
                            "name": "PD-debian"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblzma-dev@5.4.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblzma-dev@5.4.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xz-utils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.4.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sebastian Andrzej Siewior <sebastian@breakpoint.cc>"
                },
                "name": "liblzma5",
                "version": "5.4.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "PD"
                        }
                    },
                    {
                        "license": {
                            "name": "probably-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-fsf"
                        }
                    },
                    {
                        "license": {
                            "name": "Autoconf"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-nowarranty"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "none"
                        }
                    },
                    {
                        "license": {
                            "name": "config-h"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "noderivs"
                        }
                    },
                    {
                        "license": {
                            "name": "PD-debian"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblzma5@5.4.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xz-utils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.4.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/liblzo2-2@2.10-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Stephen Kitt <skitt@debian.org>"
                },
                "name": "liblzo2-2",
                "version": "2.10-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/liblzo2-2@2.10-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liblzo2-2@2.10-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "lzo2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.10"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagic-mgc@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Christoph Biedl <debian.axhn@manchmal.in-ulm.de>"
                },
                "name": "libmagic-mgc",
                "version": "1:5.44-3",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause-alike"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-NetBSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-regents"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-Old-Style-with-legal-disclaimer-2"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagic-mgc@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagic-mgc@1:5.44-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "file"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.44"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagic1@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Christoph Biedl <debian.axhn@manchmal.in-ulm.de>"
                },
                "name": "libmagic1",
                "version": "1:5.44-3",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause-alike"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-NetBSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-regents"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-Old-Style-with-legal-disclaimer-2"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagic1@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagic1@1:5.44-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "file"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.44"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickcore-6-arch-config@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickcore-6-arch-config",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagickcore-6-arch-config@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickcore-6-arch-config@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickcore-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickcore-6-headers",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "purl": "pkg:deb/debian/libmagickcore-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickcore-6-headers@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickcore-6.q16-6-extra@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickcore-6.q16-6-extra",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagickcore-6.q16-6-extra@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickcore-6.q16-6-extra@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickcore-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickcore-6.q16-6",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagickcore-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickcore-6.q16-6@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickcore-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickcore-6.q16-dev",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagickcore-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickcore-6.q16-dev@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickcore-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickcore-dev",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "purl": "pkg:deb/debian/libmagickcore-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickcore-dev@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickwand-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickwand-6-headers",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "purl": "pkg:deb/debian/libmagickwand-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickwand-6-headers@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickwand-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickwand-6.q16-6",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagickwand-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickwand-6.q16-6@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickwand-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickwand-6.q16-dev",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "ImageMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "aclocal"
                        }
                    },
                    {
                        "license": {
                            "name": "Makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibsquish"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartGraphicsMagick"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickPartlibjpeg"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartFIG"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-with-FSF-change-public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartGsview"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartOpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Magick++"
                        }
                    },
                    {
                        "license": {
                            "name": "TatcherUlrichPublicDomain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception-GNU"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL3+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL2+-with-Autoconf-Macros-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GNU-All-Permissive-License"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ImageMagickLicensePartEZXML"
                        }
                    },
                    {
                        "license": {
                            "name": "Perllikelicence"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmagickwand-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickwand-6.q16-dev@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmagickwand-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "type": "library",
                "supplier": {
                    "name": "ImageMagick Packaging Team <pkg-gmagick-im-team@lists.alioth.debian.org>"
                },
                "name": "libmagickwand-dev",
                "version": "8:6.9.11.60+dfsg-1.6+deb12u3",
                "purl": "pkg:deb/debian/libmagickwand-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmagickwand-dev@8:6.9.11.60+dfsg-1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "8"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "imagemagick"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.6+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.9.11.60+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmariadb-dev-compat@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian MySQL Maintainers <pkg-mysql-maint@lists.alioth.debian.org>"
                },
                "name": "libmariadb-dev-compat",
                "version": "1:10.11.11-0+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "unlimited-free-doc"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "SWsoft"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "zlib-acknowledgement"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmariadb-dev-compat@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmariadb-dev-compat@1:10.11.11-0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mariadb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.11.11"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmariadb-dev@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian MySQL Maintainers <pkg-mysql-maint@lists.alioth.debian.org>"
                },
                "name": "libmariadb-dev",
                "version": "1:10.11.11-0+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "unlimited-free-doc"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "SWsoft"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "zlib-acknowledgement"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmariadb-dev@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmariadb-dev@1:10.11.11-0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mariadb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.11.11"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmariadb3@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian MySQL Maintainers <pkg-mysql-maint@lists.alioth.debian.org>"
                },
                "name": "libmariadb3",
                "version": "1:10.11.11-0+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "unlimited-free-doc"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "SWsoft"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "zlib-acknowledgement"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmariadb3@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmariadb3@1:10.11.11-0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mariadb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.11.11"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmaxminddb-dev@1.7.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Faidon Liambotis <paravoid@debian.org>"
                },
                "name": "libmaxminddb-dev",
                "version": "1.7.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmaxminddb-dev@1.7.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmaxminddb-dev@1.7.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libmaxminddb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.7.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmaxminddb0@1.7.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Faidon Liambotis <paravoid@debian.org>"
                },
                "name": "libmaxminddb0",
                "version": "1.7.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-SA-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmaxminddb0@1.7.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmaxminddb0@1.7.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libmaxminddb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.7.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmd0@1.0.4-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Guillem Jover <guillem@debian.org>"
                },
                "name": "libmd0",
                "version": "1.0.4-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-Aaron-D-Gifford"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause-NetBSD"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "Beerware"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-md4"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-md5"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain-sha1"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmd0@1.0.4-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmd0@1.0.4-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libmd"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmount-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "libmount-dev",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmount-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmount-dev@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmount1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "libmount1",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmount1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmount1@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmpc3@1.3.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libmpc3",
                "version": "1.3.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmpc3@1.3.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmpc3@1.3.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mpclib3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libmpfr6@4.2.0-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libmpfr6",
                "version": "4.2.0-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libmpfr6@4.2.0-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libmpfr6@4.2.0-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mpfr4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libncurses-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "libncurses-dev",
                "version": "6.4-4",
                "purl": "pkg:deb/debian/libncurses-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libncurses-dev@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libncurses5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "libncurses5-dev",
                "version": "6.4-4",
                "purl": "pkg:deb/debian/libncurses5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libncurses5-dev@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libncurses6@6.4-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "libncurses6",
                "version": "6.4-4",
                "purl": "pkg:deb/debian/libncurses6@6.4-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libncurses6@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libncursesw5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "libncursesw5-dev",
                "version": "6.4-4",
                "purl": "pkg:deb/debian/libncursesw5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libncursesw5-dev@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libncursesw6@6.4-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "libncursesw6",
                "version": "6.4-4",
                "purl": "pkg:deb/debian/libncursesw6@6.4-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libncursesw6@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Magnus Holmgren <holmgren@debian.org>"
                },
                "name": "libnettle8",
                "version": "3.8.1-2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GAP"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnettle8@3.8.1-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "nettle"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.8.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libnghttp2-14@1.52.0-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Tomasz Buchert <tomasz@debian.org>"
                },
                "name": "libnghttp2-14",
                "version": "1.52.0-1+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "all-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-with-autoconf-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libnghttp2-14@1.52.0-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnghttp2-14@1.52.0-1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "nghttp2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.52.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libnpth0@1.6-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Eric Dorland <eric@debian.org>"
                },
                "name": "libnpth0",
                "version": "1.6-3",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libnpth0@1.6-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpth0@1.6-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "npth"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libnsl-dev@1.3.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "libnsl-dev",
                "version": "1.3.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-fsf"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-autoconf-m4-no-warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+-autoconf-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-configure"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+-autoconf-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+-libtool-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-autoconf-m4"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libnsl-dev@1.3.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnsl-dev@1.3.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libnsl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libnsl2@1.3.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "libnsl2",
                "version": "1.3.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-fsf"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-autoconf-m4-no-warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+-autoconf-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-configure"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+-autoconf-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+-libtool-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-autoconf-m4"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libnsl2@1.3.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnsl2@1.3.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libnsl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libnuma1@2.0.16-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Ian Wienand <ianw@debian.org>"
                },
                "name": "libnuma1",
                "version": "2.0.16-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libnuma1@2.0.16-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnuma1@2.0.16-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "numactl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.0.16"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libopenexr-3-1-30@3.1.5-5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libopenexr-3-1-30",
                "version": "3.1.5-5",
                "licenses": [
                    {
                        "license": {
                            "name": "openexr"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libopenexr-3-1-30@3.1.5-5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libopenexr-3-1-30@3.1.5-5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openexr"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.1.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libopenexr-dev@3.1.5-5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libopenexr-dev",
                "version": "3.1.5-5",
                "licenses": [
                    {
                        "license": {
                            "name": "openexr"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libopenexr-dev@3.1.5-5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libopenexr-dev@3.1.5-5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openexr"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.1.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libopenjp2-7-dev@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libopenjp2-7-dev",
                "version": "2.5.0-2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Libpng"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "LIBTIFF"
                        }
                    },
                    {
                        "license": {
                            "name": "LIBTIFF-PIXAR"
                        }
                    },
                    {
                        "license": {
                            "name": "LIBTIFF-GLARSON"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libopenjp2-7-dev@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libopenjp2-7-dev@2.5.0-2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openjpeg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libopenjp2-7@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PhotoTools Maintainers <pkg-phototools-devel@lists.alioth.debian.org>"
                },
                "name": "libopenjp2-7",
                "version": "2.5.0-2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Libpng"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "LIBTIFF"
                        }
                    },
                    {
                        "license": {
                            "name": "LIBTIFF-PIXAR"
                        }
                    },
                    {
                        "license": {
                            "name": "LIBTIFF-GLARSON"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libopenjp2-7@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libopenjp2-7@2.5.0-2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openjpeg2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libp11-kit0@0.24.1-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>"
                },
                "name": "libp11-kit0",
                "version": "0.24.1-2",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-like-automake-output"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC+IBM"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "same-as-rest-of-p11kit"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libp11-kit0@0.24.1-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libp11-kit0@0.24.1-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "p11-kit"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.24.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpam-modules-bin@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libpam-modules-bin",
                "version": "1.5.2-6+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-tcp_wrappers"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Beerware"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpam-modules-bin@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpam-modules-bin@1.5.2-6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pam"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.5.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpam-modules@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libpam-modules",
                "version": "1.5.2-6+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-tcp_wrappers"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Beerware"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpam-modules@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpam-modules@1.5.2-6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pam"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.5.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpam-runtime@1.5.2-6%2Bdeb12u1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libpam-runtime",
                "version": "1.5.2-6+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-tcp_wrappers"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Beerware"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpam-runtime@1.5.2-6%2Bdeb12u1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpam-runtime@1.5.2-6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pam"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.5.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpam0g@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sam Hartman <hartmans@debian.org>"
                },
                "name": "libpam0g",
                "version": "1.5.2-6+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-tcp_wrappers"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "Beerware"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpam0g@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpam0g@1.5.2-6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pam"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.5.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpango-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libpango-1.0-0",
                "version": "1.50.12+ds-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Example"
                        }
                    },
                    {
                        "license": {
                            "name": "TCL"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "ICU"
                        }
                    },
                    {
                        "license": {
                            "name": "Chromium-BSD-style"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Bitstream-Vera"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpango-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpango-1.0-0@1.50.12+ds-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pango1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.50.12+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpangocairo-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libpangocairo-1.0-0",
                "version": "1.50.12+ds-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Example"
                        }
                    },
                    {
                        "license": {
                            "name": "TCL"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "ICU"
                        }
                    },
                    {
                        "license": {
                            "name": "Chromium-BSD-style"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Bitstream-Vera"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpangocairo-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpangocairo-1.0-0@1.50.12+ds-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pango1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.50.12+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpangoft2-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "libpangoft2-1.0-0",
                "version": "1.50.12+ds-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Example"
                        }
                    },
                    {
                        "license": {
                            "name": "TCL"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "ICU"
                        }
                    },
                    {
                        "license": {
                            "name": "Chromium-BSD-style"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Bitstream-Vera"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpangoft2-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpangoft2-1.0-0@1.50.12+ds-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pango1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.50.12+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpcre2-16-0@10.42-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthew Vernon <matthew@debian.org>"
                },
                "name": "libpcre2-16-0",
                "version": "10.42-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-clause-Cambridge with BINARY LIBRARY-LIKE PACKAGES exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpcre2-16-0@10.42-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpcre2-16-0@10.42-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pcre2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.42"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpcre2-32-0@10.42-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthew Vernon <matthew@debian.org>"
                },
                "name": "libpcre2-32-0",
                "version": "10.42-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-clause-Cambridge with BINARY LIBRARY-LIKE PACKAGES exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpcre2-32-0@10.42-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpcre2-32-0@10.42-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pcre2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.42"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthew Vernon <matthew@debian.org>"
                },
                "name": "libpcre2-8-0",
                "version": "10.42-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-clause-Cambridge with BINARY LIBRARY-LIKE PACKAGES exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpcre2-8-0@10.42-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pcre2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.42"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpcre2-dev@10.42-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthew Vernon <matthew@debian.org>"
                },
                "name": "libpcre2-dev",
                "version": "10.42-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-clause-Cambridge with BINARY LIBRARY-LIKE PACKAGES exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpcre2-dev@10.42-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpcre2-dev@10.42-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pcre2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.42"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpcre2-posix3@10.42-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthew Vernon <matthew@debian.org>"
                },
                "name": "libpcre2-posix3",
                "version": "10.42-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-clause-Cambridge with BINARY LIBRARY-LIKE PACKAGES exception"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpcre2-posix3@10.42-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpcre2-posix3@10.42-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pcre2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.42"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libperl5.36@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Niko Tyni <ntyni@debian.org>"
                },
                "name": "libperl5.36",
                "version": "5.36.0-7+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "REGCOMP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "BZIP"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RRA-KEEP-THIS-NOTICE"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-with-weird-numbering"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "TEXT-TABS"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-POWERDOG"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-GENERIC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "SDBM-PUBLIC-DOMAIN"
                        }
                    },
                    {
                        "license": {
                            "name": "DONT-CHANGE-THE-GPL"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-dist"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-DERIVATIVE"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-BSD"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libperl5.36@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libperl5.36@5.36.0-7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "perl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.36.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpixman-1-0@0.42.2-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libpixman-1-0",
                "version": "0.42.2-1",
                "purl": "pkg:deb/debian/libpixman-1-0@0.42.2-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpixman-1-0@0.42.2-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pixman"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.42.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpixman-1-dev@0.42.2-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libpixman-1-dev",
                "version": "0.42.2-1",
                "purl": "pkg:deb/debian/libpixman-1-dev@0.42.2-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpixman-1-dev@0.42.2-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pixman"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.42.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpkgconf3@1.8.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Andrej Shadura <andrewsh@debian.org>"
                },
                "name": "libpkgconf3",
                "version": "1.8.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpkgconf3@1.8.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpkgconf3@1.8.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pkgconf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.8.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpng-dev@1.6.39-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Maintainers of libpng1.6 packages <libpng1.6@packages.debian.org>"
                },
                "name": "libpng-dev",
                "version": "1.6.39-2",
                "licenses": [
                    {
                        "license": {
                            "name": "Libpng"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-like-with-advertising-clause"
                        }
                    },
                    {
                        "license": {
                            "name": "libpng OR Apache-2.0 OR BSD-3-clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpng-dev@1.6.39-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpng-dev@1.6.39-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libpng1.6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.6.39"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Maintainers of libpng1.6 packages <libpng1.6@packages.debian.org>"
                },
                "name": "libpng16-16",
                "version": "1.6.39-2",
                "licenses": [
                    {
                        "license": {
                            "name": "Libpng"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-like-with-advertising-clause"
                        }
                    },
                    {
                        "license": {
                            "name": "libpng OR Apache-2.0 OR BSD-3-clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpng16-16@1.6.39-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libpng1.6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.6.39"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpq-dev@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PostgreSQL Maintainers <team+postgresql@tracker.debian.org>"
                },
                "name": "libpq-dev",
                "version": "15.13-0+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "PostgreSQL"
                        }
                    },
                    {
                        "license": {
                            "name": "Custom-regex"
                        }
                    },
                    {
                        "license": {
                            "name": "Tcl"
                        }
                    },
                    {
                        "license": {
                            "name": "Custom-pg_dump"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Custom-Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "double-metaphone"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "nagaysau-ishii"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpq-dev@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpq-dev@15.13-0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "postgresql-15"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "15.13"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpq5@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian PostgreSQL Maintainers <team+postgresql@tracker.debian.org>"
                },
                "name": "libpq5",
                "version": "15.13-0+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "PostgreSQL"
                        }
                    },
                    {
                        "license": {
                            "name": "Custom-regex"
                        }
                    },
                    {
                        "license": {
                            "name": "Tcl"
                        }
                    },
                    {
                        "license": {
                            "name": "Custom-pg_dump"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Custom-Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "double-metaphone"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "nagaysau-ishii"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpq5@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpq5@15.13-0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "postgresql-15"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "15.13"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libproc2-0@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "libproc2-0",
                "version": "2:4.0.2-3",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libproc2-0@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libproc2-0@2:4.0.2-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "procps"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.0.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpsl5@0.21.2-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Tim R\u00fchsen <tim.ruehsen@gmx.de>"
                },
                "name": "libpsl5",
                "version": "0.21.2-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "gnulib"
                        }
                    },
                    {
                        "license": {
                            "name": "Chromium"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpsl5@0.21.2-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpsl5@0.21.2-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libpsl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.21.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpthread-stubs0-dev@0.4-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libpthread-stubs0-dev",
                "version": "0.4-1",
                "purl": "pkg:deb/debian/libpthread-stubs0-dev@0.4-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpthread-stubs0-dev@0.4-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libpthread-stubs"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpython3-stdlib@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libpython3-stdlib",
                "version": "3.11.2-1+b1",
                "purl": "pkg:deb/debian/libpython3-stdlib@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpython3-stdlib@3.11.2-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpython3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libpython3.11-minimal",
                "version": "3.11.2-6+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Redistribution and use in source and binary forms, with or without"
                        }
                    },
                    {
                        "license": {
                            "name": "text://By obtaining, using, and/or copying this software and/or its"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software and"
                        }
                    },
                    {
                        "license": {
                            "name": "text://This software is provided 'as-is', without any express or implied"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission  is  hereby granted,  free  of charge,  to  any person"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission is hereby granted, free of charge, to any person obtaining"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software and its"
                        }
                    },
                    {
                        "license": {
                            "name": "text://This software is provided as-is, without express or implied"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software for any"
                        }
                    },
                    {
                        "license": {
                            "name": "text://* Permission to use this software in any way is granted without"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libpython3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpython3.11-minimal@3.11.2-6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3.11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libpython3.11-stdlib@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libpython3.11-stdlib",
                "version": "3.11.2-6+deb12u6",
                "purl": "pkg:deb/debian/libpython3.11-stdlib@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libpython3.11-stdlib@3.11.2-6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3.11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libquadmath0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libquadmath0",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libquadmath0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libquadmath0@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libreadline-dev@8.2-1.3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libreadline-dev",
                "version": "8.2-1.3",
                "purl": "pkg:deb/debian/libreadline-dev@8.2-1.3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libreadline-dev@8.2-1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "readline"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "8.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "libreadline8",
                "version": "8.2-1.3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC-no-attribution"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libreadline8@8.2-1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "readline"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "8.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/librsvg2-2@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "librsvg2-2",
                "version": "2.54.7+dfsg-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "0BSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unlicense"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Sun-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-zero-waive-1.0-us"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/librsvg2-2@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "librsvg2-2@2.54.7+dfsg-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "librsvg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.54.7+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/librsvg2-common@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "librsvg2-common",
                "version": "2.54.7+dfsg-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "0BSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unlicense"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Sun-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-zero-waive-1.0-us"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/librsvg2-common@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "librsvg2-common@2.54.7+dfsg-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "librsvg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.54.7+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/librsvg2-dev@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GNOME Maintainers <pkg-gnome-maintainers@lists.alioth.debian.org>"
                },
                "name": "librsvg2-dev",
                "version": "2.54.7+dfsg-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFAP"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "0BSD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Unlicense"
                        }
                    },
                    {
                        "license": {
                            "name": "MPL-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Sun-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-3.0"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-zero-waive-1.0-us"
                        }
                    },
                    {
                        "license": {
                            "name": "OFL-1.1"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/librsvg2-dev@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "librsvg2-dev@2.54.7+dfsg-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "librsvg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.54.7+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/librtmp1@2.4%2B20151223.gitfa8646d.1-2%2Bb2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Multimedia Maintainers <debian-multimedia@lists.debian.org>"
                },
                "name": "librtmp1",
                "version": "2.4+20151223.gitfa8646d.1-2+b2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/librtmp1@2.4%2B20151223.gitfa8646d.1-2%2Bb2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "librtmp1@2.4+20151223.gitfa8646d.1-2+b2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "rtmpdump"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.4+20151223.gitfa8646d.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsasl2-2@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Cyrus Team <team+cyrus@tracker.debian.org>"
                },
                "name": "libsasl2-2",
                "version": "2.1.28+dfsg-10",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "OpenSSL"
                        }
                    },
                    {
                        "license": {
                            "name": "SSLeay"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "RSA-MD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-KTH"
                        }
                    },
                    {
                        "license": {
                            "name": "text://BSD-4-clause and IBM-as-is"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-JANET"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-PADL"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-OpenVision"
                        }
                    },
                    {
                        "license": {
                            "name": "OpenLDAP"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-CMU"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-Export"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2.2-clause"
                        }
                    },
                    {
                        "license": {
                            "name": "text://IBM-as-is"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsasl2-2@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsasl2-2@2.1.28+dfsg-10"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "cyrus-sasl2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "10"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.28+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsasl2-modules-db@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Cyrus Team <team+cyrus@tracker.debian.org>"
                },
                "name": "libsasl2-modules-db",
                "version": "2.1.28+dfsg-10",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "OpenSSL"
                        }
                    },
                    {
                        "license": {
                            "name": "SSLeay"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "RSA-MD"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-KTH"
                        }
                    },
                    {
                        "license": {
                            "name": "text://BSD-4-clause and IBM-as-is"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-JANET"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-PADL"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-OpenVision"
                        }
                    },
                    {
                        "license": {
                            "name": "OpenLDAP"
                        }
                    },
                    {
                        "license": {
                            "name": "FSFULLR"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-CMU"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-Export"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2.2-clause"
                        }
                    },
                    {
                        "license": {
                            "name": "text://IBM-as-is"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsasl2-modules-db@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsasl2-modules-db@2.1.28+dfsg-10"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "cyrus-sasl2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "10"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.1.28+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libseccomp2@2.5.4-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Kees Cook <kees@debian.org>"
                },
                "name": "libseccomp2",
                "version": "2.5.4-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libseccomp2@2.5.4-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libseccomp2@2.5.4-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libseccomp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.5.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libselinux1-dev@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>"
                },
                "name": "libselinux1-dev",
                "version": "3.4-1+b6",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libselinux1-dev@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libselinux1-dev@3.4-1+b6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libselinux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>"
                },
                "name": "libselinux1",
                "version": "3.4-1+b6",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libselinux1@3.4-1+b6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libselinux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsemanage-common@3.4-1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>"
                },
                "name": "libsemanage-common",
                "version": "3.4-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsemanage-common@3.4-1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsemanage-common@3.4-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libsemanage"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsemanage2@3.4-1%2Bb5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>"
                },
                "name": "libsemanage2",
                "version": "3.4-1+b5",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsemanage2@3.4-1%2Bb5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsemanage2@3.4-1+b5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libsemanage"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsepol-dev@3.4-2.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>"
                },
                "name": "libsepol-dev",
                "version": "3.4-2.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsepol-dev@3.4-2.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsepol-dev@3.4-2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libsepol"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsepol2@3.4-2.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian SELinux maintainers <selinux-devel@lists.alioth.debian.org>"
                },
                "name": "libsepol2",
                "version": "3.4-2.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsepol2@3.4-2.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsepol2@3.4-2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libsepol"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libserf-1-1@1.3.9-11?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "James McCoy <jamessan@debian.org>"
                },
                "name": "libserf-1-1",
                "version": "1.3.9-11",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libserf-1-1@1.3.9-11?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libserf-1-1@1.3.9-11"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "serf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsm-dev@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libsm-dev",
                "version": "2:1.2.3-1",
                "purl": "pkg:deb/debian/libsm-dev@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsm-dev@2:1.2.3-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libsm"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsm6@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libsm6",
                "version": "2:1.2.3-1",
                "purl": "pkg:deb/debian/libsm6@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsm6@2:1.2.3-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libsm"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsmartcols1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "libsmartcols1",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsmartcols1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsmartcols1@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsqlite3-0@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libsqlite3-0",
                "version": "3.40.1-2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsqlite3-0@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsqlite3-0@3.40.1-2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "sqlite3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.40.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsqlite3-dev@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libsqlite3-dev",
                "version": "3.40.1-2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsqlite3-dev@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsqlite3-dev@3.40.1-2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "sqlite3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.40.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libss2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theodore Y. Ts'o <tytso@mit.edu>"
                },
                "name": "libss2",
                "version": "1.47.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-US-export"
                        }
                    },
                    {
                        "license": {
                            "name": "Kazlib"
                        }
                    },
                    {
                        "license": {
                            "name": "Latex2e"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Texinfo exception"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libss2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libss2@1.47.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "e2fsprogs"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.47.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libssh2-1@1.10.0-3%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Nicolas Mora <babelouest@debian.org>"
                },
                "name": "libssh2-1",
                "version": "1.10.0-3+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libssh2-1@1.10.0-3%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libssh2-1@1.10.0-3+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libssh2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.10.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libssl-dev@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian OpenSSL Team <pkg-openssl-devel@alioth-lists.debian.net>"
                },
                "name": "libssl-dev",
                "version": "3.0.16-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libssl-dev@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libssl-dev@3.0.16-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openssl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.0.16"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian OpenSSL Team <pkg-openssl-devel@alioth-lists.debian.net>"
                },
                "name": "libssl3",
                "version": "3.0.16-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libssl3@3.0.16-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openssl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.0.16"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libstdc%2B%2B-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libstdc++-12-dev",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libstdc%2B%2B-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libstdc++-12-dev@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libstdc++6",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libstdc++6@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsvn1@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "James McCoy <jamessan@debian.org>"
                },
                "name": "libsvn1",
                "version": "1.14.2-4+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Utfwidth"
                        }
                    },
                    {
                        "license": {
                            "name": "Svnwrap"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-3"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BoostAcMacros"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsvn1@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsvn1@1.14.2-4+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "subversion"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.14.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libsystemd0@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian systemd Maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>"
                },
                "name": "libsystemd0",
                "version": "252.38-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2 with Linux-syscall-note exception"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libsystemd0@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libsystemd0@252.38-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "systemd"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "252.38"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtasn1-6@4.19.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuTLS Maintainers <pkg-gnutls-maint@lists.alioth.debian.org>"
                },
                "name": "libtasn1-6",
                "version": "4.19.0-2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtasn1-6@4.19.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtasn1-6@4.19.0-2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libtasn1-6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.19.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libthai-data@0.1.29-1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theppitak Karoonboonyanan <thep@debian.org>"
                },
                "name": "libthai-data",
                "version": "0.1.29-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libthai-data@0.1.29-1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libthai-data@0.1.29-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libthai"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.1.29"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libthai0@0.1.29-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theppitak Karoonboonyanan <thep@debian.org>"
                },
                "name": "libthai0",
                "version": "0.1.29-1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libthai0@0.1.29-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libthai0@0.1.29-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libthai"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.1.29"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtiff-dev@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libtiff-dev",
                "version": "4.5.0-6+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "Hylafax"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtiff-dev@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtiff-dev@4.5.0-6+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "tiff"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.5.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtiff6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libtiff6",
                "version": "4.5.0-6+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "Hylafax"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtiff6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtiff6@4.5.0-6+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "tiff"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.5.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtiffxx6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "libtiffxx6",
                "version": "4.5.0-6+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "Hylafax"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtiffxx6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtiffxx6@4.5.0-6+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "tiff"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.5.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "libtinfo6",
                "version": "6.4-4",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT/X11"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtinfo6@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtirpc-common@1.3.3%2Bds-1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Josue Ortega <josue@debian.org>"
                },
                "name": "libtirpc-common",
                "version": "1.3.3+ds-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "__AUTO_PERMISSIVE__"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "PERMISSIVE"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtirpc-common@1.3.3%2Bds-1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtirpc-common@1.3.3+ds-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libtirpc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.3+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtirpc-dev@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Josue Ortega <josue@debian.org>"
                },
                "name": "libtirpc-dev",
                "version": "1.3.3+ds-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "__AUTO_PERMISSIVE__"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "PERMISSIVE"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtirpc-dev@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtirpc-dev@1.3.3+ds-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libtirpc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.3+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtirpc3@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Josue Ortega <josue@debian.org>"
                },
                "name": "libtirpc3",
                "version": "1.3.3+ds-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "__AUTO_PERMISSIVE__"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "PERMISSIVE"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtirpc3@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtirpc3@1.3.3+ds-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libtirpc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.3+ds"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtool@2.4.7-7~deb12u1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Alastair McKinstry <mckinstry@debian.org>"
                },
                "name": "libtool",
                "version": "2.4.7-7~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libtool@2.4.7-7~deb12u1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtool@2.4.7-7~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libtool"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.4.7"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libtsan2@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libtsan2",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libtsan2@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libtsan2@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libubsan1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GCC Maintainers <debian-gcc@lists.debian.org>"
                },
                "name": "libubsan1",
                "version": "12.2.0-14+deb12u1",
                "purl": "pkg:deb/debian/libubsan1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libubsan1@12.2.0-14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "gcc-12"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "14+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "12.2.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libudev1@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian systemd Maintainers <pkg-systemd-maintainers@lists.alioth.debian.org>"
                },
                "name": "libudev1",
                "version": "252.38-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2 with Linux-syscall-note exception"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libudev1@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libudev1@252.38-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "systemd"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "252.38"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libunistring2@1.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "J\u00f6rg Frings-F\u00fcrst <debian@jff.email>"
                },
                "name": "libunistring2",
                "version": "1.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "FreeSoftware"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.2-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with distribution exception"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.2-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libunistring2@1.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libunistring2@1.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libunistring"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libutf8proc2@2.8.0-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Julia Team <pkg-julia-devel@lists.alioth.debian.org>"
                },
                "name": "libutf8proc2",
                "version": "2.8.0-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libutf8proc2@2.8.0-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libutf8proc2@2.8.0-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "utf8proc"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.8.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "libuuid1",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libuuid1@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libwebp-dev@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Jeff Breidenbach <jab@debian.org>"
                },
                "name": "libwebp-dev",
                "version": "1.2.4-0.2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libwebp-dev@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libwebp-dev@1.2.4-0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libwebp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Jeff Breidenbach <jab@debian.org>"
                },
                "name": "libwebp7",
                "version": "1.2.4-0.2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libwebp7@1.2.4-0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libwebp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libwebpdemux2@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Jeff Breidenbach <jab@debian.org>"
                },
                "name": "libwebpdemux2",
                "version": "1.2.4-0.2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libwebpdemux2@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libwebpdemux2@1.2.4-0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libwebp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libwebpmux3@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Jeff Breidenbach <jab@debian.org>"
                },
                "name": "libwebpmux3",
                "version": "1.2.4-0.2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libwebpmux3@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libwebpmux3@1.2.4-0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libwebp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libwmf-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Yangfl <mmyangfl@gmail.com>"
                },
                "name": "libwmf-0.2-7",
                "version": "0.2.12-5.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "AGPL-3 with Font exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GD"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "AGPL-3"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libwmf-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libwmf-0.2-7@0.2.12-5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libwmf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.2.12"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libwmf-dev@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Yangfl <mmyangfl@gmail.com>"
                },
                "name": "libwmf-dev",
                "version": "0.2.12-5.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "AGPL-3 with Font exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GD"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "AGPL-3"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libwmf-dev@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libwmf-dev@0.2.12-5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libwmf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.2.12"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libwmflite-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Yangfl <mmyangfl@gmail.com>"
                },
                "name": "libwmflite-0.2-7",
                "version": "0.2.12-5.1",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "AGPL-3 with Font exception"
                        }
                    },
                    {
                        "license": {
                            "name": "GD"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "AGPL-3"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libwmflite-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libwmflite-0.2-7@0.2.12-5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libwmf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.2.12"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libx11-6",
                "version": "2:1.8.4-2+deb12u2",
                "purl": "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libx11-6@2:1.8.4-2+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libx11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.8.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libx11-data@1.8.4-2%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libx11-data",
                "version": "2:1.8.4-2+deb12u2",
                "purl": "pkg:deb/debian/libx11-data@1.8.4-2%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libx11-data@2:1.8.4-2+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libx11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.8.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libx11-dev",
                "version": "2:1.8.4-2+deb12u2",
                "purl": "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libx11-dev@2:1.8.4-2+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libx11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.8.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libx265-199@3.5-2%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Multimedia Maintainers <debian-multimedia@lists.debian.org>"
                },
                "name": "libx265-199",
                "version": "3.5-2+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libx265-199@3.5-2%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libx265-199@3.5-2+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "x265"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxau-dev@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxau-dev",
                "version": "1:1.0.9-1",
                "purl": "pkg:deb/debian/libxau-dev@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxau-dev@1:1.0.9-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxau"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxau6@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxau6",
                "version": "1:1.0.9-1",
                "purl": "pkg:deb/debian/libxau6@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxau6@1:1.0.9-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxau"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.0.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxcb-render0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxcb-render0-dev",
                "version": "1.15-1",
                "purl": "pkg:deb/debian/libxcb-render0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxcb-render0-dev@1.15-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.15"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxcb-render0@1.15-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxcb-render0",
                "version": "1.15-1",
                "purl": "pkg:deb/debian/libxcb-render0@1.15-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxcb-render0@1.15-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.15"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxcb-shm0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxcb-shm0-dev",
                "version": "1.15-1",
                "purl": "pkg:deb/debian/libxcb-shm0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxcb-shm0-dev@1.15-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.15"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxcb-shm0@1.15-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxcb-shm0",
                "version": "1.15-1",
                "purl": "pkg:deb/debian/libxcb-shm0@1.15-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxcb-shm0@1.15-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.15"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxcb1-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxcb1-dev",
                "version": "1.15-1",
                "purl": "pkg:deb/debian/libxcb1-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxcb1-dev@1.15-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.15"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxcb1",
                "version": "1.15-1",
                "purl": "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxcb1@1.15-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxcb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.15"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxdmcp-dev@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxdmcp-dev",
                "version": "1:1.1.2-3",
                "purl": "pkg:deb/debian/libxdmcp-dev@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxdmcp-dev@1:1.1.2-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxdmcp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.1.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxdmcp6@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxdmcp6",
                "version": "1:1.1.2-3",
                "purl": "pkg:deb/debian/libxdmcp6@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxdmcp6@1:1.1.2-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxdmcp"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.1.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxext-dev@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxext-dev",
                "version": "2:1.3.4-1+b1",
                "purl": "pkg:deb/debian/libxext-dev@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxext-dev@2:1.3.4-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxext"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxext6@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxext6",
                "version": "2:1.3.4-1+b1",
                "purl": "pkg:deb/debian/libxext6@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxext6@2:1.3.4-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxext"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxml2-dev@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian XML/SGML Group <debian-xml-sgml-pkgs@lists.alioth.debian.org>"
                },
                "name": "libxml2-dev",
                "version": "2.9.14+dfsg-1.3~deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT-1"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libxml2-dev@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxml2-dev@2.9.14+dfsg-1.3~deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxml2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.3~deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.9.14+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian XML/SGML Group <debian-xml-sgml-pkgs@lists.alioth.debian.org>"
                },
                "name": "libxml2",
                "version": "2.9.14+dfsg-1.3~deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT-1"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxml2@2.9.14+dfsg-1.3~deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxml2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.3~deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.9.14+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxrender-dev@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxrender-dev",
                "version": "1:0.9.10-1.1",
                "purl": "pkg:deb/debian/libxrender-dev@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxrender-dev@1:0.9.10-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxrender"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.9.10"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxrender1@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxrender1",
                "version": "1:0.9.10-1.1",
                "purl": "pkg:deb/debian/libxrender1@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxrender1@1:0.9.10-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxrender"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.9.10"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxslt1-dev@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian XML/SGML Group <debian-xml-sgml-pkgs@lists.alioth.debian.org>"
                },
                "name": "libxslt1-dev",
                "version": "1.1.35-1+deb12u1",
                "purl": "pkg:deb/debian/libxslt1-dev@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxslt1-dev@1.1.35-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxslt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.1.35"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxslt1.1@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian XML/SGML Group <debian-xml-sgml-pkgs@lists.alioth.debian.org>"
                },
                "name": "libxslt1.1",
                "version": "1.1.35-1+deb12u1",
                "purl": "pkg:deb/debian/libxslt1.1@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxslt1.1@1.1.35-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxslt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.1.35"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxt-dev@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxt-dev",
                "version": "1:1.2.1-1.1",
                "purl": "pkg:deb/debian/libxt-dev@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxt-dev@1:1.2.1-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxt6@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "libxt6",
                "version": "1:1.2.1-1.1",
                "purl": "pkg:deb/debian/libxt6@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxt6@1:1.2.1-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libxt"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libxxhash0@0.8.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Josue Ortega <josue@debian.org>"
                },
                "name": "libxxhash0",
                "version": "0.8.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libxxhash0@0.8.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libxxhash0@0.8.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xxhash"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.8.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libyaml-0-2@0.2.5-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Florian Ernst <florian@debian.org>"
                },
                "name": "libyaml-0-2",
                "version": "0.2.5-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libyaml-0-2@0.2.5-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libyaml-0-2@0.2.5-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libyaml"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.2.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libyaml-dev@0.2.5-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Florian Ernst <florian@debian.org>"
                },
                "name": "libyaml-dev",
                "version": "0.2.5-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libyaml-dev@0.2.5-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libyaml-dev@0.2.5-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libyaml"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.2.5"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libzstd-dev@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "RPM packaging team <team+pkg-rpm@tracker.debian.org>"
                },
                "name": "libzstd-dev",
                "version": "1.5.4+dfsg2-5",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libzstd-dev@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libzstd-dev@1.5.4+dfsg2-5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libzstd"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.5.4+dfsg2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "RPM packaging team <team+pkg-rpm@tracker.debian.org>"
                },
                "name": "libzstd1",
                "version": "1.5.4+dfsg2-5",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libzstd1@1.5.4+dfsg2-5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "libzstd"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.5.4+dfsg2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/linux-libc-dev@6.1.140-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Kernel Team <debian-kernel@lists.debian.org>"
                },
                "name": "linux-libc-dev",
                "version": "6.1.140-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+-or-X11"
                        }
                    },
                    {
                        "license": {
                            "name": "CRYPTOGAMS"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode-data"
                        }
                    },
                    {
                        "license": {
                            "name": "Xen-interface"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/linux-libc-dev@6.1.140-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "linux-libc-dev@6.1.140-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.1.140"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/login@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Shadow package maintainers <pkg-shadow-devel@lists.alioth.debian.org>"
                },
                "name": "login",
                "version": "1:4.13+dfsg1-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/login@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "login@1:4.13+dfsg1-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "shadow"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.13+dfsg1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/logsave@1.47.0-2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Theodore Y. Ts'o <tytso@mit.edu>"
                },
                "name": "logsave",
                "version": "1.47.0-2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT-US-export"
                        }
                    },
                    {
                        "license": {
                            "name": "Kazlib"
                        }
                    },
                    {
                        "license": {
                            "name": "Latex2e"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+ with Texinfo exception"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/logsave@1.47.0-2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "logsave@1.47.0-2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "e2fsprogs"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.47.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/m4@1.4.19-3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Santiago Vila <sanvila@debian.org>"
                },
                "name": "m4",
                "version": "1.4.19-3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/m4@1.4.19-3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "m4@1.4.19-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "m4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.4.19"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/make@4.3-4.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Manoj Srivastava <srivasta@debian.org>"
                },
                "name": "make",
                "version": "4.3-4.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/make@4.3-4.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "make@4.3-4.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "make-dfsg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/mariadb-common@10.11.11-0%2Bdeb12u1?arch=all&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian MySQL Maintainers <pkg-mysql-maint@lists.alioth.debian.org>"
                },
                "name": "mariadb-common",
                "version": "1:10.11.11-0+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "unlimited-free-doc"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "SWsoft"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "zlib-acknowledgement"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/mariadb-common@10.11.11-0%2Bdeb12u1?arch=all&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mariadb-common@1:10.11.11-0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mariadb"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.11.11"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/mawk@1.3.4.20200120-3.1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Boyuan Yang <byang@debian.org>"
                },
                "name": "mawk",
                "version": "1.3.4.20200120-3.1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "CC-BY-3.0"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/mawk@1.3.4.20200120-3.1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mawk@1.3.4.20200120-3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mawk"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.3.4.20200120"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/media-types@10.0.0?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Mime-Support Packagers <team+debian-mimesupport-packagers@tracker.debian.org>"
                },
                "name": "media-types",
                "version": "10.0.0",
                "licenses": [
                    {
                        "license": {
                            "name": "ad-hoc"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/media-types@10.0.0?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "media-types@10.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "media-types"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "10.0.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/mercurial-common@6.3.2-1%2Bdeb12u1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Python Team <team+python@tracker.debian.org>"
                },
                "name": "mercurial-common",
                "version": "6.3.2-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/mercurial-common@6.3.2-1%2Bdeb12u1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mercurial-common@6.3.2-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mercurial"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.3.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/mercurial@6.3.2-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Python Team <team+python@tracker.debian.org>"
                },
                "name": "mercurial",
                "version": "6.3.2-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/mercurial@6.3.2-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mercurial@6.3.2-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mercurial"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.3.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/mount@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "mount",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/mount@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mount@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/mysql-common@5.8%2B1.1.0?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian MySQL Maintainers <pkg-mysql-maint@lists.alioth.debian.org>"
                },
                "name": "mysql-common",
                "version": "5.8+1.1.0",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/mysql-common@5.8%2B1.1.0?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mysql-common@5.8+1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "mysql-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.1.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/ncurses-base@6.4-4?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "ncurses-base",
                "version": "6.4-4",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT/X11"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/ncurses-base@6.4-4?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ncurses-base@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/ncurses-bin@6.4-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "ncurses-bin",
                "version": "6.4-4",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT/X11"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/ncurses-bin@6.4-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ncurses-bin@6.4-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ncurses"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/netbase@6.4?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Marco d'Itri <md@linux.it>"
                },
                "name": "netbase",
                "version": "6.4",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/netbase@6.4?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "netbase@6.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "netbase"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.4"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/openssh-client@9.2p1-2%2Bdeb12u6?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian OpenSSH Maintainers <debian-ssh@lists.debian.org>"
                },
                "name": "openssh-client",
                "version": "1:9.2p1-2+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "OpenSSH"
                        }
                    },
                    {
                        "license": {
                            "name": "Mazieres-BSD-style"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Powell-BSD-style"
                        }
                    },
                    {
                        "license": {
                            "name": "Expat-with-advertising-restriction"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/openssh-client@9.2p1-2%2Bdeb12u6?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "openssh-client@1:9.2p1-2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openssh"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "9.2p1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/openssl@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian OpenSSL Team <pkg-openssl-devel@alioth-lists.debian.net>"
                },
                "name": "openssl",
                "version": "3.0.16-1~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/openssl@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "openssl@3.0.16-1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "openssl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.0.16"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/passwd@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Shadow package maintainers <pkg-shadow-devel@lists.alioth.debian.org>"
                },
                "name": "passwd",
                "version": "1:4.13+dfsg1-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/passwd@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "passwd@1:4.13+dfsg1-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "shadow"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.13+dfsg1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/patch@2.7.6-7?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Laszlo Boszormenyi (GCS) <gcs@debian.org>"
                },
                "name": "patch",
                "version": "2.7.6-7",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/patch@2.7.6-7?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "patch@2.7.6-7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "patch"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.7.6"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/perl-base@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Niko Tyni <ntyni@debian.org>"
                },
                "name": "perl-base",
                "version": "5.36.0-7+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "REGCOMP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "BZIP"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RRA-KEEP-THIS-NOTICE"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-with-weird-numbering"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "TEXT-TABS"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-POWERDOG"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-GENERIC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "SDBM-PUBLIC-DOMAIN"
                        }
                    },
                    {
                        "license": {
                            "name": "DONT-CHANGE-THE-GPL"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-dist"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-DERIVATIVE"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-BSD"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/perl-base@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "perl-base@5.36.0-7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "perl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.36.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/perl-modules-5.36@5.36.0-7%2Bdeb12u2?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Niko Tyni <ntyni@debian.org>"
                },
                "name": "perl-modules-5.36",
                "version": "5.36.0-7+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "REGCOMP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "BZIP"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RRA-KEEP-THIS-NOTICE"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-with-weird-numbering"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "TEXT-TABS"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-POWERDOG"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-GENERIC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "SDBM-PUBLIC-DOMAIN"
                        }
                    },
                    {
                        "license": {
                            "name": "DONT-CHANGE-THE-GPL"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-dist"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-DERIVATIVE"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-BSD"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/perl-modules-5.36@5.36.0-7%2Bdeb12u2?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "perl-modules-5.36@5.36.0-7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "perl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.36.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/perl@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Niko Tyni <ntyni@debian.org>"
                },
                "name": "perl",
                "version": "5.36.0-7+deb12u2",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-1.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "REGCOMP"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-with-bison-exception+"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "BZIP"
                        }
                    },
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "RRA-KEEP-THIS-NOTICE"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-with-weird-numbering"
                        }
                    },
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    },
                    {
                        "license": {
                            "name": "TEXT-TABS"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-clause-POWERDOG"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-clause-GENERIC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "SDBM-PUBLIC-DOMAIN"
                        }
                    },
                    {
                        "license": {
                            "name": "DONT-CHANGE-THE-GPL"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-dist"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-1.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "Artistic-2"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-DERIVATIVE"
                        }
                    },
                    {
                        "license": {
                            "name": "HSIEH-BSD"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/perl@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "perl@5.36.0-7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "perl"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "7+deb12u2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.36.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/pinentry-curses@1.2.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian GnuPG Maintainers <pkg-gnupg-maint@lists.alioth.debian.org>"
                },
                "name": "pinentry-curses",
                "version": "1.2.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/pinentry-curses@1.2.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "pinentry-curses@1.2.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pinentry"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/pkg-config@1.8.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Andrej Shadura <andrewsh@debian.org>"
                },
                "name": "pkg-config",
                "version": "1.8.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/pkg-config@1.8.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "pkg-config@1.8.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pkgconf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.8.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/pkgconf-bin@1.8.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Andrej Shadura <andrewsh@debian.org>"
                },
                "name": "pkgconf-bin",
                "version": "1.8.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/pkgconf-bin@1.8.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "pkgconf-bin@1.8.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pkgconf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.8.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/pkgconf@1.8.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Andrej Shadura <andrewsh@debian.org>"
                },
                "name": "pkgconf",
                "version": "1.8.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/pkgconf@1.8.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "pkgconf@1.8.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "pkgconf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.8.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/procps@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                "type": "library",
                "supplier": {
                    "name": "Craig Small <csmall@debian.org>"
                },
                "name": "procps",
                "version": "2:4.0.2-3",
                "licenses": [
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/procps@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "procps@2:4.0.2-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "procps"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.0.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/python3-distutils@3.11.2-3?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "python3-distutils",
                "version": "3.11.2-3",
                "purl": "pkg:deb/debian/python3-distutils@3.11.2-3?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "python3-distutils@3.11.2-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3-stdlib-extensions"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/python3-lib2to3@3.11.2-3?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "python3-lib2to3",
                "version": "3.11.2-3",
                "purl": "pkg:deb/debian/python3-lib2to3@3.11.2-3?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "python3-lib2to3@3.11.2-3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3-stdlib-extensions"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/python3-minimal@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "python3-minimal",
                "version": "3.11.2-1+b1",
                "purl": "pkg:deb/debian/python3-minimal@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "python3-minimal@3.11.2-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/python3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "python3.11-minimal",
                "version": "3.11.2-6+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Redistribution and use in source and binary forms, with or without"
                        }
                    },
                    {
                        "license": {
                            "name": "text://By obtaining, using, and/or copying this software and/or its"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software and"
                        }
                    },
                    {
                        "license": {
                            "name": "text://This software is provided 'as-is', without any express or implied"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission  is  hereby granted,  free  of charge,  to  any person"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission is hereby granted, free of charge, to any person obtaining"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software and its"
                        }
                    },
                    {
                        "license": {
                            "name": "text://This software is provided as-is, without express or implied"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software for any"
                        }
                    },
                    {
                        "license": {
                            "name": "text://* Permission to use this software in any way is granted without"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/python3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "python3.11-minimal@3.11.2-6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3.11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/python3.11@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "python3.11",
                "version": "3.11.2-6+deb12u6",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Redistribution and use in source and binary forms, with or without"
                        }
                    },
                    {
                        "license": {
                            "name": "text://By obtaining, using, and/or copying this software and/or its"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software and"
                        }
                    },
                    {
                        "license": {
                            "name": "text://This software is provided 'as-is', without any express or implied"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission  is  hereby granted,  free  of charge,  to  any person"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission is hereby granted, free of charge, to any person obtaining"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software and its"
                        }
                    },
                    {
                        "license": {
                            "name": "text://This software is provided as-is, without express or implied"
                        }
                    },
                    {
                        "license": {
                            "name": "text://Permission to use, copy, modify, and distribute this software for any"
                        }
                    },
                    {
                        "license": {
                            "name": "text://* Permission to use this software in any way is granted without"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/python3.11@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "python3.11@3.11.2-6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3.11"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "6+deb12u6"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/python3@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "python3",
                "version": "3.11.2-1+b1",
                "purl": "pkg:deb/debian/python3@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "python3@3.11.2-1+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "python3-defaults"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.11.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/readline-common@8.2-1.3?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Matthias Klose <doko@debian.org>"
                },
                "name": "readline-common",
                "version": "8.2-1.3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC-no-attribution"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/readline-common@8.2-1.3?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "readline-common@8.2-1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "readline"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "8.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/rpcsvc-proto@1.4.3-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "rpcsvc-proto",
                "version": "1.4.3-1",
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-fsf"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-makefile-in"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-autoconf-m4-no-warranty"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+-autoconf-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-configure"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2+-autoconf-exception"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-autoconf-m4"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/rpcsvc-proto@1.4.3-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "rpcsvc-proto@1.4.3-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "rpcsvc-proto"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.4.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/sed@4.9-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Clint Adams <clint@debian.org>"
                },
                "name": "sed",
                "version": "4.9-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "X11"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-no-invariants-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.3-only"
                        }
                    },
                    {
                        "license": {
                            "name": "ISC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause-UC"
                        }
                    },
                    {
                        "license": {
                            "name": "BSL-1"
                        }
                    },
                    {
                        "license": {
                            "name": "pcre"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/sed@4.9-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sed@4.9-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "sed"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "4.9"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/sensible-utils@0.0.17%2Bnmu1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Anibal Monsalve Salazar <anibal@debian.org>"
                },
                "name": "sensible-utils",
                "version": "0.0.17+nmu1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "All-permissive"
                        }
                    },
                    {
                        "license": {
                            "name": "configure"
                        }
                    },
                    {
                        "license": {
                            "name": "installsh"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/sensible-utils@0.0.17%2Bnmu1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sensible-utils@0.0.17+nmu1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "sensible-utils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.0.17+nmu1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/shared-mime-info@2.2-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian freedesktop.org maintainers <pkg-freedesktop-maintainers@lists.alioth.debian.org>"
                },
                "name": "shared-mime-info",
                "version": "2.2-1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/shared-mime-info@2.2-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "shared-mime-info@2.2-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "shared-mime-info"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/sq@0.27.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian Rust Maintainers <pkg-rust-maintainers@alioth-lists.debian.net>"
                },
                "name": "sq",
                "version": "0.27.0-2+b1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/sq@0.27.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sq@0.27.0-2+b1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "rust-sequoia-sq"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "2"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "0.27.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/subversion@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "James McCoy <jamessan@debian.org>"
                },
                "name": "subversion",
                "version": "1.14.2-4+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "Utfwidth"
                        }
                    },
                    {
                        "license": {
                            "name": "Svnwrap"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "AFL-3"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "Unicode"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BoostAcMacros"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/subversion@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "subversion@1.14.2-4+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "subversion"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.14.2"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/sysvinit-utils@3.06-4?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian sysvinit maintainers <debian-init-diversity@chiark.greenend.org.uk>"
                },
                "name": "sysvinit-utils",
                "version": "3.06-4",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/sysvinit-utils@3.06-4?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sysvinit-utils@3.06-4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "sysvinit"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "4"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.06"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/tar@1.34%2Bdfsg-1.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Janos Lenart <ocsi@debian.org>"
                },
                "name": "tar",
                "version": "1.34+dfsg-1.2+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3+ with Bison exception"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/tar@1.34%2Bdfsg-1.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tar@1.34+dfsg-1.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "tar"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.2+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.34+dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/tzdata@2025b-0%2Bdeb12u1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "GNU Libc Maintainers <debian-glibc@lists.debian.org>"
                },
                "name": "tzdata",
                "version": "2025b-0+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/tzdata@2025b-0%2Bdeb12u1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tzdata@2025b-0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "tzdata"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "0+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2025b"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/ucf@3.0043%2Bnmu1%2Bdeb12u1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Manoj Srivastava <srivasta@debian.org>"
                },
                "name": "ucf",
                "version": "3.0043+nmu1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/ucf@3.0043%2Bnmu1%2Bdeb12u1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:8bc405ffff1cd23ede9fdfd9feda89adff154ee83ca967aae653c1e2e6f68011"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ucf@3.0043+nmu1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "ucf"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "3.0043+nmu1+deb12u1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/unzip@6.0-28?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Santiago Vila <sanvila@debian.org>"
                },
                "name": "unzip",
                "version": "6.0-28",
                "purl": "pkg:deb/debian/unzip@6.0-28?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "unzip@6.0-28"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "unzip"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "28"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "6.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/usr-is-merged@37~deb12u1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Marco d'Itri <md@linux.it>"
                },
                "name": "usr-is-merged",
                "version": "37~deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/usr-is-merged@37~deb12u1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "usr-is-merged@37~deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "usrmerge"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "37~deb12u1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/util-linux-extra@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "util-linux-extra",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/util-linux-extra@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "util-linux-extra@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/util-linux@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "util-linux",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/util-linux@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "util-linux@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/uuid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "util-linux packagers <util-linux@packages.debian.org>"
                },
                "name": "uuid-dev",
                "version": "2.38.1-5+deb12u3",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "public-domain"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-4-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    },
                    {
                        "license": {
                            "name": "BSLA"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/uuid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "uuid-dev@2.38.1-5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "util-linux"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "5+deb12u3"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2.38.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/wget@1.21.3-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "No\u00ebl K\u00f6the <noel@debian.org>"
                },
                "name": "wget",
                "version": "1.21.3-1+deb12u1",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "GFDL-1.2-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/wget@1.21.3-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:c878d283e64a0ef7ddb31614dd7b9aa8ea15e80da6489496121a81cfa594a979"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "wget@1.21.3-1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "wget"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1+deb12u1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.21.3"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/x11-common@7.7%2B23?arch=all&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "x11-common",
                "version": "1:7.7+23",
                "licenses": [
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/x11-common@7.7%2B23?arch=all&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "x11-common@1:7.7+23"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xorg"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "7.7+23"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/x11proto-core-dev@2022.1-1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "x11proto-core-dev",
                "version": "2022.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "SGI"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/x11proto-core-dev@2022.1-1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "x11proto-core-dev@2022.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xorgproto"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2022.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "x11proto-dev",
                "version": "2022.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    },
                    {
                        "license": {
                            "name": "SGI"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "x11proto-dev@2022.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xorgproto"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "2022.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/xorg-sgml-doctools@1.11-1.1?arch=all&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "xorg-sgml-doctools",
                "version": "1:1.11-1.1",
                "purl": "pkg:deb/debian/xorg-sgml-doctools@1.11-1.1?arch=all&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "xorg-sgml-doctools@1:1.11-1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xorg-sgml-doctools"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.11"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/xtrans-dev@1.4.0-1?arch=all&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Debian X Strike Force <debian-x@lists.debian.org>"
                },
                "name": "xtrans-dev",
                "version": "1.4.0-1",
                "purl": "pkg:deb/debian/xtrans-dev@1.4.0-1?arch=all&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "xtrans-dev@1.4.0-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xtrans"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.4.0"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/xz-utils@5.4.1-1?arch=amd64&distro=debian-12.11",
                "type": "library",
                "supplier": {
                    "name": "Sebastian Andrzej Siewior <sebastian@breakpoint.cc>"
                },
                "name": "xz-utils",
                "version": "5.4.1-1",
                "licenses": [
                    {
                        "license": {
                            "name": "PD"
                        }
                    },
                    {
                        "license": {
                            "name": "probably-PD"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-or-later"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-fsf"
                        }
                    },
                    {
                        "license": {
                            "name": "Autoconf"
                        }
                    },
                    {
                        "license": {
                            "name": "permissive-nowarranty"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "none"
                        }
                    },
                    {
                        "license": {
                            "name": "config-h"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.0-only"
                        }
                    },
                    {
                        "license": {
                            "name": "LGPL-2.1-only"
                        }
                    },
                    {
                        "license": {
                            "name": "noderivs"
                        }
                    },
                    {
                        "license": {
                            "name": "PD-debian"
                        }
                    },
                    {
                        "license": {
                            "name": "GPL-3.0-only"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/xz-utils@5.4.1-1?arch=amd64&distro=debian-12.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "xz-utils@5.4.1-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "xz-utils"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "5.4.1"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Mark Brown <broonie@debian.org>"
                },
                "name": "zlib1g-dev",
                "version": "1:1.2.13.dfsg-1",
                "licenses": [
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:0a3d3e4103433f9d9d5bea08e0211b379fc962ba86d222b7c7c587317380216c"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "zlib1g-dev@1:1.2.13.dfsg-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "zlib"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.13.dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1",
                "type": "library",
                "supplier": {
                    "name": "Mark Brown <broonie@debian.org>"
                },
                "name": "zlib1g",
                "version": "1:1.2.13.dfsg-1",
                "licenses": [
                    {
                        "license": {
                            "name": "Zlib"
                        }
                    }
                ],
                "purl": "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:385eb556134e17ef23cfd59b33526dddab1776f743b3713ff9a08a484ece4aaa"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "zlib1g@1:1.2.13.dfsg-1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "debian"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcEpoch",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcName",
                        "value": "zlib"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcRelease",
                        "value": "1"
                    },
                    {
                        "name": "aquasecurity:trivy:SrcVersion",
                        "value": "1.2.13.dfsg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40gulpjs/messages@1.1.0",
                "type": "library",
                "group": "@gulpjs",
                "name": "messages",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "8c33ab745ebb9167c1e82f25861eb97aaa3c5042"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40gulpjs/messages@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/@gulpjs/messages/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@gulpjs/messages@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40gulpjs/to-absolute-glob@4.0.0",
                "type": "library",
                "group": "@gulpjs",
                "name": "to-absolute-glob",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1b2471897a37c2de51c99634d044ad06e1e85f32"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40gulpjs/to-absolute-glob@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/@gulpjs/to-absolute-glob/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@gulpjs/to-absolute-glob@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40idena/vrf-js@1.0.1",
                "type": "library",
                "group": "@idena",
                "name": "vrf-js",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7c45a52ae1f27ea87ee5d5641a25458930d24554"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40idena/vrf-js@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/@idena/vrf-js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@idena/vrf-js@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40isaacs/cliui@8.0.2",
                "type": "library",
                "group": "@isaacs",
                "name": "cliui",
                "version": "8.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5f8f4c1e3bf1144f3a52c51bf040d843bb2a8b90"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40isaacs/cliui@8.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@isaacs/cliui/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@isaacs/cliui@8.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40isaacs/fs-minipass@4.0.1",
                "type": "library",
                "group": "@isaacs",
                "name": "fs-minipass",
                "version": "4.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "504edba0a95630e08edf150335c2fe914825fc5a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40isaacs/fs-minipass@4.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@isaacs/fs-minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@isaacs/fs-minipass@4.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40isaacs/string-locale-compare@1.1.0",
                "type": "library",
                "group": "@isaacs",
                "name": "string-locale-compare",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9dc38644ea6f125e3b06825ff04df5ea22f56094"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40isaacs/string-locale-compare@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@isaacs/string-locale-compare/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@isaacs/string-locale-compare@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40my-scope/package-a@0.0.0",
                "type": "library",
                "group": "@my-scope",
                "name": "package-a",
                "version": "0.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3926c908fd9627cc3e3094edf3a7fc547d4871a6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40my-scope/package-a@0.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/resolve/test/resolver/multirepo/packages/package-a/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@my-scope/package-a@0.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40my-scope/package-b@0.0.0",
                "type": "library",
                "group": "@my-scope",
                "name": "package-b",
                "version": "0.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9e0fcac261c4f4c0e6cbd05fd95ed904a9fe4b5b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40my-scope/package-b@0.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/resolve/test/resolver/multirepo/packages/package-b/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@my-scope/package-b@0.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/agent@3.0.0",
                "type": "library",
                "group": "@npmcli",
                "name": "agent",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ca472993ec88d2b98a488f843d480575f24092f7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/agent@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/agent/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/agent@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/arborist@9.1.2",
                "type": "library",
                "group": "@npmcli",
                "name": "arborist",
                "version": "9.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3d84a21f755d7f4c42d3fc47621dca5a2f1ef86b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/arborist@9.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/arborist/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/arborist@9.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/config@10.3.0",
                "type": "library",
                "group": "@npmcli",
                "name": "config",
                "version": "10.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9cb2da50e3bd8f8ac3f3862eb1d6a430123aeb72"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/config@10.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/config/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/config@10.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/fs@4.0.0",
                "type": "library",
                "group": "@npmcli",
                "name": "fs",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "cf0302511d637d6a1f8b5e49b3d9b42210c7b8f0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/fs@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/fs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/fs@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/git@6.0.3",
                "type": "library",
                "group": "@npmcli",
                "name": "git",
                "version": "6.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9434389dbc936cc741909392696d9bd3caa60fbc"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/git@6.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/git/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/git@6.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/installed-package-contents@3.0.0",
                "type": "library",
                "group": "@npmcli",
                "name": "installed-package-contents",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "eb7509c6d4a24822861ce30d6906b6bba7ea40c1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/installed-package-contents@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/installed-package-contents/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/installed-package-contents@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/map-workspaces@4.0.2",
                "type": "library",
                "group": "@npmcli",
                "name": "map-workspaces",
                "version": "4.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "30a51027e1083e29fae1690174ad0bfb28bb9933"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/map-workspaces@4.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/map-workspaces/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/map-workspaces@4.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/metavuln-calculator@9.0.0",
                "type": "library",
                "group": "@npmcli",
                "name": "metavuln-calculator",
                "version": "9.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1d1b876435193cabd634f6f1985e8bd6adf1a743"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/metavuln-calculator@9.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/metavuln-calculator/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/metavuln-calculator@9.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/name-from-folder@3.0.0",
                "type": "library",
                "group": "@npmcli",
                "name": "name-from-folder",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2b6a54a8d10c9125e653dbe6f740e380324b61ba"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/name-from-folder@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/name-from-folder/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/name-from-folder@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/node-gyp@4.0.0",
                "type": "library",
                "group": "@npmcli",
                "name": "node-gyp",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a91f3ca2b970fb8453035a15ea7ae5a2c68859c1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/node-gyp@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/node-gyp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/node-gyp@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/package-json@6.2.0",
                "type": "library",
                "group": "@npmcli",
                "name": "package-json",
                "version": "6.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "307108d5bed2e687715ff27e8f53573fa8d61e1f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/package-json@6.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/package-json/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/package-json@6.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/promise-spawn@8.0.2",
                "type": "library",
                "group": "@npmcli",
                "name": "promise-spawn",
                "version": "8.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a949e7d630ad703e1a3c2582d9bab4d0754ffb42"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/promise-spawn@8.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/promise-spawn/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/promise-spawn@8.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/query@4.0.1",
                "type": "library",
                "group": "@npmcli",
                "name": "query",
                "version": "4.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "71d09c79da76d695099a90a592415e9c1440c5a1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/query@4.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/query/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/query@4.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/redact@3.2.2",
                "type": "library",
                "group": "@npmcli",
                "name": "redact",
                "version": "3.2.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6f100bba733fae433b3156bd6a8a90249ffc5ecb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/redact@3.2.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/redact/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/redact@3.2.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40npmcli/run-script@9.1.0",
                "type": "library",
                "group": "@npmcli",
                "name": "run-script",
                "version": "9.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ffec0879fef291bcae044f79513b00cc551561be"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40npmcli/run-script@9.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@npmcli/run-script/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@npmcli/run-script@9.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40pkgjs/parseargs@0.11.0",
                "type": "library",
                "group": "@pkgjs",
                "name": "parseargs",
                "version": "0.11.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0dd3949ab9157869b8d3387f50a149bca2638d73"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40pkgjs/parseargs@0.11.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@pkgjs/parseargs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@pkgjs/parseargs@0.11.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40sigstore/bundle@3.1.0",
                "type": "library",
                "group": "@sigstore",
                "name": "bundle",
                "version": "3.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "607a75285a4e43555469f6dc19bb77c5a3a5707f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/%40sigstore/bundle@3.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@sigstore/bundle/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@sigstore/bundle@3.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40sigstore/core@2.0.0",
                "type": "library",
                "group": "@sigstore",
                "name": "core",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4d29ad9671fbb053b90bf22211b690c2314f916b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/%40sigstore/core@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@sigstore/core/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@sigstore/core@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40sigstore/protobuf-specs@0.4.3",
                "type": "library",
                "group": "@sigstore",
                "name": "protobuf-specs",
                "version": "0.4.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "72ae8293430d5a3fbbe70be96ff5e74b7e14d89c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/%40sigstore/protobuf-specs@0.4.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@sigstore/protobuf-specs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@sigstore/protobuf-specs@0.4.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40sigstore/sign@3.1.0",
                "type": "library",
                "group": "@sigstore",
                "name": "sign",
                "version": "3.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a2722e3cb0d4c034077c734745ddc1c358d5c865"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/%40sigstore/sign@3.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@sigstore/sign/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@sigstore/sign@3.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40sigstore/tuf@3.1.1",
                "type": "library",
                "group": "@sigstore",
                "name": "tuf",
                "version": "3.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "67d0e0b053c762d52f3cf74a899551dfc12a1af4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/%40sigstore/tuf@3.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@sigstore/tuf/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@sigstore/tuf@3.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40sigstore/verify@2.1.1",
                "type": "library",
                "group": "@sigstore",
                "name": "verify",
                "version": "2.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ca84707923dfec4109843b6dcfd82412eb7c245c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/%40sigstore/verify@2.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@sigstore/verify/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@sigstore/verify@2.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40tufjs/canonical-json@2.0.0",
                "type": "library",
                "group": "@tufjs",
                "name": "canonical-json",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5af11d14b15be3f1dc8a1195100ea60de40325c9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40tufjs/canonical-json@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@tufjs/canonical-json/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@tufjs/canonical-json@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40tufjs/models@3.0.1",
                "type": "library",
                "group": "@tufjs",
                "name": "models",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "27eeceaf2215dc82cc6308a66c6bf2f9cc0005c4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/%40tufjs/models@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/@tufjs/models/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@tufjs/models@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/%40ungap/promise-all-settled@1.1.2",
                "type": "library",
                "group": "@ungap",
                "name": "promise-all-settled",
                "version": "1.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0aecb8570a1e11ea832c3ffe36672afb62eec421"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/%40ungap/promise-all-settled@1.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/@ungap/promise-all-settled/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "@ungap/promise-all-settled@1.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/abbrev@3.0.1",
                "type": "library",
                "name": "abbrev",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "58ff9d74c88270726b05e383ba4d2641a18438f3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/abbrev@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/abbrev/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "abbrev@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/accepts@2.0.0",
                "type": "library",
                "name": "accepts",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fd857ae03bf3a5a5763474aa25ee8b75f706f3fd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/accepts@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/accepts/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "accepts@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/agent-base@7.1.3",
                "type": "library",
                "name": "agent-base",
                "version": "7.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "299a7241ba8fd986e5145046581a1a9ae115af56"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/agent-base@7.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/agent-base/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "agent-base@7.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ansi-colors@4.1.1",
                "type": "library",
                "name": "ansi-colors",
                "version": "4.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "08ab0f8d3245f4b24103e4b8ca458974d45c9ed0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-colors@4.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mocha/node_modules/ansi-colors/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-colors@4.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ansi-colors@4.1.3",
                "type": "library",
                "name": "ansi-colors",
                "version": "4.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "620dd1004449a8339e63d530c72c1ad8154eea35"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-colors@4.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ansi-colors/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-colors@4.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ansi-regex@3.0.1",
                "type": "library",
                "name": "ansi-regex",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4c7437872b679c9cb6df8a53d4928c07c36a18dd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-regex@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/wide-align/node_modules/ansi-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-regex@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ansi-styles@6.2.1",
                "type": "library",
                "name": "ansi-styles",
                "version": "6.2.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "605b3d8ab4008b6ba2378580c155d33362e80a6d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ansi-styles@6.2.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ansi-styles/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ansi-styles@6.2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/anymatch@3.1.3",
                "type": "library",
                "name": "anymatch",
                "version": "3.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4523871509997216d762edfc97cf9bc6400478a4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/anymatch@3.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/anymatch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "anymatch@3.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/aproba@2.0.0",
                "type": "library",
                "name": "aproba",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6ef09990f223572c66907d053a82fadd8ad8475e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/aproba@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/aproba/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "aproba@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/archy@1.0.0",
                "type": "library",
                "name": "archy",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3bd81e8f9d8e79057497b7473c6eac4f3d519149"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/archy@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/archy/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "archy@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/argparse@2.0.1",
                "type": "library",
                "name": "argparse",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "84bc2b346b0acbbe449637bc5f9b487edcf0e122"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Python-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/argparse@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/argparse/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "argparse@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/array-each@1.0.1",
                "type": "library",
                "name": "array-each",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ee5fd48cb545b4345405c98bbfa05dbbc9ae1623"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/array-each@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/array-each/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "array-each@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/array-slice@1.1.0",
                "type": "library",
                "name": "array-slice",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "498e1b0981039be5c67000ecb466f0b4ba520bd9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/array-slice@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/array-slice/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "array-slice@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/async-done@2.0.0",
                "type": "library",
                "name": "async-done",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3953760acf817b791649d14d640c38de43a777f3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/async-done@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/async-done/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "async-done@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/async-settle@2.0.0",
                "type": "library",
                "name": "async-settle",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f05c143e33f09e8170aba96c2e283f5376708ca6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/async-settle@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/async-settle/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "async-settle@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/aws-ssl-profiles@1.1.2",
                "type": "library",
                "name": "aws-ssl-profiles",
                "version": "1.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "feddb7867d8e62e2e9dfe0144655745c3057a687"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/aws-ssl-profiles@1.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/aws-ssl-profiles/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "aws-ssl-profiles@1.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/b4a@1.6.7",
                "type": "library",
                "name": "b4a",
                "version": "1.6.7",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2f0e47ae90d9dcf03019c8e3e50cfe0f8bd94bfe"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/b4a@1.6.7",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/b4a/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "b4a@1.6.7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bach@2.0.1",
                "type": "library",
                "name": "bach",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "42ee50a9691757bc9a641c0fab19c8f6db9baedb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/bach@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/bach/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bach@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bare-events@2.5.4",
                "type": "library",
                "name": "bare-events",
                "version": "2.5.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6beccc34c5f4006e438dcfef8c8535207761e2de"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/bare-events@2.5.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/bare-events/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bare-events@2.5.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/base64-js@1.5.1",
                "type": "library",
                "name": "base64-js",
                "version": "1.5.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e17d74f1f7f0fa4bca8ba3a2cff79b34f64718ea"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/base64-js@1.5.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/base64-js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "base64-js@1.5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/beeper@3.0.0",
                "type": "library",
                "name": "beeper",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "dd499cc20c2ab7ac791ab670f210296de7578838"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/beeper@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/beeper/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "beeper@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bignumber.js@9.0.0",
                "type": "library",
                "name": "bignumber.js",
                "version": "9.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0b4aa66278a23613d58e2bc4c8137305e5cf8fb3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/bignumber.js@9.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/bignumber.js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bignumber.js@9.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bin-links@5.0.0",
                "type": "library",
                "name": "bin-links",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7d183a1e12f89adf8e1b38038a8b34f9be897f40"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/bin-links@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/bin-links/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bin-links@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/binary-extensions@2.3.0",
                "type": "library",
                "name": "binary-extensions",
                "version": "2.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "09235a3c2fdebe7e975f19f4930e1fb7dec29410"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/binary-extensions@2.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/binary-extensions/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "binary-extensions@2.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/binary-extensions@3.1.0",
                "type": "library",
                "name": "binary-extensions",
                "version": "3.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fd41784d905c4769ecd7a2045234bf3336b20240"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/binary-extensions@3.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/binary-extensions/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "binary-extensions@3.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bl@5.1.0",
                "type": "library",
                "name": "bl",
                "version": "5.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fedbab9f92d8b13cfd6e340c1a66d9aa353ffa62"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/bl@5.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/bl/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bl@5.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bn.js@4.12.2",
                "type": "library",
                "name": "bn.js",
                "version": "4.12.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5ed471537da9dbfae9e3da245d4a4a553b3de65a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/bn.js@4.12.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/elliptic/node_modules/bn.js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bn.js@4.12.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bn.js@5.2.2",
                "type": "library",
                "name": "bn.js",
                "version": "5.2.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "33402fcba5dd8abad336398ee41b93322dfc29fe"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/bn.js@5.2.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/bn.js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bn.js@5.2.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/body-parser@2.2.0",
                "type": "library",
                "name": "body-parser",
                "version": "2.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "cb0eb2ef4f0da8d60e79dd49b9e3585374950dbd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/body-parser@2.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/body-parser/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "body-parser@2.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/brace-expansion@1.1.11",
                "type": "library",
                "name": "brace-expansion",
                "version": "1.1.11",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a3c20e6ee1cae1c72f9ac87e6f2d1fd2a4254b37"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/brace-expansion@1.1.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/brace-expansion/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "brace-expansion@1.1.11"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/brace-expansion@2.0.2",
                "type": "library",
                "name": "brace-expansion",
                "version": "2.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c2e8d8ccf674a808b63453e8432ae0f696375fbd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/brace-expansion@2.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/brace-expansion/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "brace-expansion@2.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/braces@3.0.3",
                "type": "library",
                "name": "braces",
                "version": "3.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "124d44a7e3c5fd1b2370ff51929158c7c39c46c2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/braces@3.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/braces/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "braces@3.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/brorand@1.1.0",
                "type": "library",
                "name": "brorand",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0282a404ec28606d7ca3837dd049f9fc7b74cba1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/brorand@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/brorand/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "brorand@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/browser-stdout@1.3.1",
                "type": "library",
                "name": "browser-stdout",
                "version": "1.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "019a7989d9586113151cc04fc5c3e54d29f27a08"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/browser-stdout@1.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/browser-stdout/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "browser-stdout@1.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/buffer-equal-constant-time@1.0.1",
                "type": "library",
                "name": "buffer-equal-constant-time",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3a3f4f93fac0040b6a34e7c37406e6af989b4138"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/buffer-equal-constant-time@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/buffer-equal-constant-time/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "buffer-equal-constant-time@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/buffer@6.0.3",
                "type": "library",
                "name": "buffer",
                "version": "6.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3156a9cd35dc750bebc2eaaf42a5933c8ee6b892"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/buffer@6.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "buffer@6.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/bytes@3.1.2",
                "type": "library",
                "name": "bytes",
                "version": "3.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d8fe3e70eb4ecf4bf58385e4b27f89b7ce656a28"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/bytes@3.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/bytes/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "bytes@3.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cacache@19.0.1",
                "type": "library",
                "name": "cacache",
                "version": "19.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4bfa58e7ac62a86d0f86b54faa34f063f3344a61"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/cacache@19.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cacache/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cacache@19.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/call-bind-apply-helpers@1.0.2",
                "type": "library",
                "name": "call-bind-apply-helpers",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ba7d54557351d8746e4d2f88e7d4106ca4d0d541"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/call-bind-apply-helpers@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/call-bind-apply-helpers/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "call-bind-apply-helpers@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/call-bound@1.0.4",
                "type": "library",
                "name": "call-bound",
                "version": "1.0.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7c7c20ff22ed55c0f73a9ca1e378190b9ab3ba29"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/call-bound@1.0.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/call-bound/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "call-bound@1.0.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/camelcase@6.3.0",
                "type": "library",
                "name": "camelcase",
                "version": "6.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0c5558f5587fffce70f6df99c2fe4b6fed155446"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/camelcase@6.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/camelcase/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "camelcase@6.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/chalk@4.1.2",
                "type": "library",
                "name": "chalk",
                "version": "4.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "651223fdfe370f7eeea056c8bb29f6303cabb3c1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/chalk@4.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/chalk/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "chalk@4.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/chalk@5.4.1",
                "type": "library",
                "name": "chalk",
                "version": "5.4.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c7d35bae7eda3d27ddbc941a81ce00f128ceae1e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/chalk@5.4.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/chalk/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "chalk@5.4.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/chokidar@3.5.1",
                "type": "library",
                "name": "chokidar",
                "version": "3.5.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "330eaeb3120e4066ddae2f62e9ead4199f02e615"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/chokidar@3.5.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mocha/node_modules/chokidar/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "chokidar@3.5.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/chokidar@3.6.0",
                "type": "library",
                "name": "chokidar",
                "version": "3.6.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9201128ab2082291cde8c78ba2ca322ac5ad1bf5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/chokidar@3.6.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/chokidar/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "chokidar@3.6.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/chownr@2.0.0",
                "type": "library",
                "name": "chownr",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a23947ade20a2757d5abf7f9fec197c2674c0a20"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/chownr@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/chownr/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "chownr@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ci-info@4.2.0",
                "type": "library",
                "name": "ci-info",
                "version": "4.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "71eeb8e84918854a8013256272b35a5b5d4918be"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ci-info@4.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ci-info/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ci-info@4.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cidr-regex@4.1.3",
                "type": "library",
                "name": "cidr-regex",
                "version": "4.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c43c34bca806fea312075f9ee18209a01906342c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/cidr-regex@4.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cidr-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cidr-regex@4.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cli-columns@4.0.0",
                "type": "library",
                "name": "cli-columns",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "06c7ce3d82ba512eafa34bab2566bcce77d4beb9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/cli-columns@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cli-columns/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cli-columns@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cliui@7.0.4",
                "type": "library",
                "name": "cliui",
                "version": "7.0.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7746d2c945196aa7c6f100c57bd8f9a43b9c384a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/cliui@7.0.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/cliui/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cliui@7.0.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/clone-stats@1.0.0",
                "type": "library",
                "name": "clone-stats",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f96d00de13ef4a969f295b718191ea91da89e83b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/clone-stats@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/clone-stats/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "clone-stats@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/clone@2.1.2",
                "type": "library",
                "name": "clone",
                "version": "2.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0fdce1636b3aa8c1df63be2fdb3e3b66066b82d4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/clone@2.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/clone/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "clone@2.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cmd-shim@7.0.0",
                "type": "library",
                "name": "cmd-shim",
                "version": "7.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "31d3d08612d9deeb670d074f68fd539f1bc62080"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/cmd-shim@7.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cmd-shim/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cmd-shim@7.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/common-ancestor-path@1.0.1",
                "type": "library",
                "name": "common-ancestor-path",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "164a1acbc7cc3127c78c5da7b26667bf93b8b8c3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/common-ancestor-path@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/common-ancestor-path/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "common-ancestor-path@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/concat-map@0.0.1",
                "type": "library",
                "name": "concat-map",
                "version": "0.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "10e204a14998c9e1d13bba6ab5243194a94d5d6a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/concat-map@0.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/concat-map/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "concat-map@0.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/content-disposition@1.0.0",
                "type": "library",
                "name": "content-disposition",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1dbbca237a9a7ffcc0637fc47b69028e5738c595"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/content-disposition@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/content-disposition/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "content-disposition@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/content-type@1.0.5",
                "type": "library",
                "name": "content-type",
                "version": "1.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1545c6d8538d7e59f375d4ae4b0e0d10471a6c1c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/content-type@1.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/content-type/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "content-type@1.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/convert-source-map@2.0.0",
                "type": "library",
                "name": "convert-source-map",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "bb03314643fce6451c7500bfe6c019721267ad8c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/convert-source-map@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/convert-source-map/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "convert-source-map@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cookie-parser@1.4.7",
                "type": "library",
                "name": "cookie-parser",
                "version": "1.4.7",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5e3c194dcb531a61c8dc8c6d97fc65f138d52a09"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/cookie-parser@1.4.7",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/cookie-parser/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cookie-parser@1.4.7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cookie-signature@1.0.6",
                "type": "library",
                "name": "cookie-signature",
                "version": "1.0.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "eb071423205fc35573e714baa755e3a9e900a979"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/cookie-signature@1.0.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/cookie-signature/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cookie-signature@1.0.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cookie-signature@1.2.2",
                "type": "library",
                "name": "cookie-signature",
                "version": "1.2.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1a62347d6999f7e4f3859f5172738a99f7305435"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/cookie-signature@1.2.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/express/node_modules/cookie-signature/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cookie-signature@1.2.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cookie@0.7.2",
                "type": "library",
                "name": "cookie",
                "version": "0.7.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "49ffb97b37b2a7b8b0967428ca088145d3483365"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/cookie@0.7.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/cookie/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cookie@0.7.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/copy-props@4.0.0",
                "type": "library",
                "name": "copy-props",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5e3c9e00666102eeceb9da0dd276582afb961b26"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/copy-props@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/copy-props/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "copy-props@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/core-util-is@1.0.3",
                "type": "library",
                "name": "core-util-is",
                "version": "1.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "af90028ef8ff5d55ba1d9978fb0a4d7092e82ddd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/core-util-is@1.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/core-util-is/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "core-util-is@1.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/corepack@0.33.0",
                "type": "library",
                "name": "corepack",
                "version": "0.33.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "02d31b72bcb388bf69e137ec03c3915ee7ea01e6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/corepack@0.33.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/corepack/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "corepack@0.33.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cross-spawn@7.0.6",
                "type": "library",
                "name": "cross-spawn",
                "version": "7.0.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9becaa8ecb51ad9b303dd62369423cb9f287163a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/cross-spawn@7.0.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cross-spawn/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cross-spawn@7.0.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/crypto-js@4.2.0",
                "type": "library",
                "name": "crypto-js",
                "version": "4.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7316c3382382dee4cc36236a13bf43543b8a855d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/crypto-js@4.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/crypto-js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "crypto-js@4.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/cssesc@3.0.0",
                "type": "library",
                "name": "cssesc",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3a37cece4f715e91ef0aed027baea0039bb20087"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/cssesc@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/cssesc/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "cssesc@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/debug@4.3.1",
                "type": "library",
                "name": "debug",
                "version": "4.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e7da1b38f28b50bb2c39f5ed329d8b2aabf7a6fa"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/debug@4.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mocha/node_modules/debug/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "debug@4.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/decamelize@4.0.0",
                "type": "library",
                "name": "decamelize",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "31d4d234a8ab5c5ccac4d40895558fb26806c25f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/decamelize@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/decamelize/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "decamelize@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/denque@2.1.0",
                "type": "library",
                "name": "denque",
                "version": "2.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "20f2d49a4ac0ba159df2cb0a30db23841ff167ef"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/denque@2.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/denque/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "denque@2.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/depd@2.0.0",
                "type": "library",
                "name": "depd",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3c10082c1464a6f589aa10cda88285e780ebf857"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/depd@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/depd/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "depd@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/detect-file@1.0.0",
                "type": "library",
                "name": "detect-file",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4bb909e6a4e96fae92a08102ea75db073df4348a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/detect-file@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/detect-file/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "detect-file@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/diff@5.0.0",
                "type": "library",
                "name": "diff",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "28d75e8df9937aa7b03a62fd68409af5cede0eae"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/diff@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/diff/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "diff@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/diff@7.0.0",
                "type": "library",
                "name": "diff",
                "version": "7.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4fe59c55dd387a03a98d22824231ef76673b18ce"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/diff@7.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/diff/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "diff@7.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/dotenv@16.5.0",
                "type": "library",
                "name": "dotenv",
                "version": "16.5.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "da9a5c743232b4bb9e6ff031544628d741457e22"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/dotenv@16.5.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/dotenv/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "dotenv@16.5.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/dunder-proto@1.0.1",
                "type": "library",
                "name": "dunder-proto",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d4f4da85fa9e51b4843d29d7e541991cf377b8d5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/dunder-proto@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/dunder-proto/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "dunder-proto@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/each-props@3.0.0",
                "type": "library",
                "name": "each-props",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "070c277758ad5e8e66f26073b3fce44dae68ecf2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/each-props@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/each-props/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "each-props@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/eastasianwidth@0.2.0",
                "type": "library",
                "name": "eastasianwidth",
                "version": "0.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c3bff6d91fcbc648b17edd5f8e37bac1f47485a4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/eastasianwidth@0.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/eastasianwidth/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "eastasianwidth@0.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ecdsa-sig-formatter@1.0.11",
                "type": "library",
                "name": "ecdsa-sig-formatter",
                "version": "1.0.11",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "27c8cfe348d302afe43e0c2b496c8e0747c326bb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/ecdsa-sig-formatter@1.0.11",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ecdsa-sig-formatter/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ecdsa-sig-formatter@1.0.11"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ee-first@1.1.1",
                "type": "library",
                "name": "ee-first",
                "version": "1.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7ffe61f87f94a558fabc177cad5c9b90b16481cf"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ee-first@1.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ee-first/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ee-first@1.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/elliptic@6.6.1",
                "type": "library",
                "name": "elliptic",
                "version": "6.6.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "18a636f54b0b099129731ad381c5c7048c2628b4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/elliptic@6.6.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/elliptic/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "elliptic@6.6.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/encodeurl@2.0.0",
                "type": "library",
                "name": "encodeurl",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "40228259bb4f106706490d0b0b73cd4f35d6db44"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/encodeurl@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/encodeurl/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "encodeurl@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/encoding@0.1.13",
                "type": "library",
                "name": "encoding",
                "version": "0.1.13",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "52b117f2bc3113970224b9dc97b7fc18f7df30ab"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/encoding@0.1.13",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/encoding/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "encoding@0.1.13"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/end-of-stream@1.4.4",
                "type": "library",
                "name": "end-of-stream",
                "version": "1.4.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f75f78ed2334fd21565016ce0572ace53b425df7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/end-of-stream@1.4.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/end-of-stream/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "end-of-stream@1.4.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/env-paths@2.2.1",
                "type": "library",
                "name": "env-paths",
                "version": "2.2.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b5b570f41c1d3e8f251fd06d075cefea4a3449a9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/env-paths@2.2.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/env-paths/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "env-paths@2.2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/err-code@2.0.3",
                "type": "library",
                "name": "err-code",
                "version": "2.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5c7bc63340bc312d1563bb2b369e333e1165ab04"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/err-code@2.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/err-code/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "err-code@2.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/es-define-property@1.0.1",
                "type": "library",
                "name": "es-define-property",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f1a35cb43fefef0d0e60920c4df5313ba630ee6d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/es-define-property@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/es-define-property/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "es-define-property@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/es-errors@1.3.0",
                "type": "library",
                "name": "es-errors",
                "version": "1.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d13bcb37ab6ab7f0911ce728148cb1c8485a81d1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/es-errors@1.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/es-errors/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "es-errors@1.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/es-object-atoms@1.1.1",
                "type": "library",
                "name": "es-object-atoms",
                "version": "1.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "623e510034cf39440e8692aa26c9473765981674"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/es-object-atoms@1.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/es-object-atoms/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "es-object-atoms@1.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/escalade@3.2.0",
                "type": "library",
                "name": "escalade",
                "version": "3.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5e49ab48d81ef3700c2cda40f9f45807fa116d0b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/escalade@3.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/escalade/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "escalade@3.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/escape-html@1.0.3",
                "type": "library",
                "name": "escape-html",
                "version": "1.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f9d3fd64a0196e77965489ce9b81fe4ce3a9ecb1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/escape-html@1.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/escape-html/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "escape-html@1.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/escape-string-regexp@4.0.0",
                "type": "library",
                "name": "escape-string-regexp",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c25c1856b436abaf5ae6b3af25d4c4de5f7d2f29"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/escape-string-regexp@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/escape-string-regexp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "escape-string-regexp@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/etag@1.8.1",
                "type": "library",
                "name": "etag",
                "version": "1.8.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e2debd5c6530254abe164bbd44f1e48b7c7c0018"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/etag@1.8.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/etag/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "etag@1.8.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/excid-cicd-demo@1.0.0",
                "type": "library",
                "name": "excid-cicd-demo",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "52eb64915bda0e1687f6fab05e0acd1f6c3c5ef6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/excid-cicd-demo@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:977a71e175f0d330035e06ba829705c0d0f01486bf06aac1dbd01f0e08790c19"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "excid-cicd-demo@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/expand-tilde@2.0.2",
                "type": "library",
                "name": "expand-tilde",
                "version": "2.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "89622a13cd2bfce8992324f0dd2331d2e59d5eb3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/expand-tilde@2.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/expand-tilde/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "expand-tilde@2.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/exponential-backoff@3.1.2",
                "type": "library",
                "name": "exponential-backoff",
                "version": "3.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "af54bb38a82b5a0d058c722fac83b3bf91fff3f5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/exponential-backoff@3.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/exponential-backoff/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "exponential-backoff@3.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/express@5.1.0",
                "type": "library",
                "name": "express",
                "version": "5.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "89ececd8f48e90f19bb17b65e659e0f5787a881e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/express@5.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/express/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "express@5.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/extend@3.0.2",
                "type": "library",
                "name": "extend",
                "version": "3.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b6cd42f3e1865fe04ed104d8798d40232f74702a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/extend@3.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/extend/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "extend@3.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fast-fifo@1.3.2",
                "type": "library",
                "name": "fast-fifo",
                "version": "1.3.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "24fff3443ac12865d7add9cf9710177893bf0f69"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fast-fifo@1.3.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fast-fifo/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fast-fifo@1.3.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fast-levenshtein@3.0.0",
                "type": "library",
                "name": "fast-levenshtein",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6dfc11d9bd46d8ca8b2c24784718e4ffe8856d1c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fast-levenshtein@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fast-levenshtein/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fast-levenshtein@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fastq@1.19.1",
                "type": "library",
                "name": "fastq",
                "version": "1.19.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f42ac67ee4c16636f8d9b686b6ee1f738b02df43"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/fastq@1.19.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fastq/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fastq@1.19.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fdir@6.4.6",
                "type": "library",
                "name": "fdir",
                "version": "6.4.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3fb6e2ebd1d7686eecf5d99da3e1800883c3bfbf"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fdir@6.4.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tinyglobby/node_modules/fdir/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fdir@6.4.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fill-range@7.1.1",
                "type": "library",
                "name": "fill-range",
                "version": "7.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1682e8ba503f3836b55fc5763adfd0605f0d1b6a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fill-range@7.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fill-range/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fill-range@7.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/finalhandler@2.1.0",
                "type": "library",
                "name": "finalhandler",
                "version": "2.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d575df1a7b4fe88a3b4dc8f55710c57d296e4e7b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/finalhandler@2.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/finalhandler/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "finalhandler@2.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/find-up@5.0.0",
                "type": "library",
                "name": "find-up",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1db71a4e6ce0cfde2e98ffde947a0078648d2033"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/find-up@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/find-up/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "find-up@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/findup-sync@5.0.0",
                "type": "library",
                "name": "findup-sync",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f68cd5a7999712c9082df2201062980e9b28fa16"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/findup-sync@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/findup-sync/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "findup-sync@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fined@2.0.0",
                "type": "library",
                "name": "fined",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3e4abb5a2c11c8a5bcab58afcd3ab48346e8d307"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fined@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fined/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fined@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/flagged-respawn@2.0.0",
                "type": "library",
                "name": "flagged-respawn",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "44d70bb982816bef7157a1652230f05484819e99"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/flagged-respawn@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/flagged-respawn/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "flagged-respawn@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/flat@5.0.2",
                "type": "library",
                "name": "flat",
                "version": "5.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "703c61e6abf9ab07be3e07a4374dbbd2e60acdbf"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/flat@5.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/flat/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "flat@5.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/for-in@1.0.2",
                "type": "library",
                "name": "for-in",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e68ca23447b0f106e434b1ca3071685929a40b7f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/for-in@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/for-in/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "for-in@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/for-own@1.0.0",
                "type": "library",
                "name": "for-own",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9e3f16c5c1c13709aca01bc598b74d6ebb48d447"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/for-own@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/for-own/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "for-own@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/foreground-child@3.3.1",
                "type": "library",
                "name": "foreground-child",
                "version": "3.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ca2af14071df0e6084e5797f9fbcf179d51f9e5d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/foreground-child@3.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/foreground-child/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "foreground-child@3.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/forwarded@0.2.0",
                "type": "library",
                "name": "forwarded",
                "version": "0.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5d558cad52024d41373ae030c0d7ff67e8dfd7fe"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/forwarded@0.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/forwarded/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "forwarded@0.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fresh@2.0.0",
                "type": "library",
                "name": "fresh",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "92119f5413f0979048447b57fc3d7e36f1ee7961"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fresh@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fresh/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fresh@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fs-minipass@2.1.0",
                "type": "library",
                "name": "fs-minipass",
                "version": "2.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "55871ab123b38e2af83fdab7b189a4a61ba46465"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/fs-minipass@2.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tar/node_modules/fs-minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fs-minipass@2.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fs-minipass@3.0.3",
                "type": "library",
                "name": "fs-minipass",
                "version": "3.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2e472ead48322dd560133d10f39db20ee5e3fae1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/fs-minipass@3.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/fs-minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fs-minipass@3.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fs-mkdirp-stream@2.0.1",
                "type": "library",
                "name": "fs-mkdirp-stream",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "584855fe211d36c4dc980d1dee48716208c77212"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/fs-mkdirp-stream@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fs-mkdirp-stream/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fs-mkdirp-stream@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/fs.realpath@1.0.0",
                "type": "library",
                "name": "fs.realpath",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2ec89eb99a2117211b3879fa1bf42a4aac964a32"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/fs.realpath@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/fs.realpath/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "fs.realpath@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/function-bind@1.1.2",
                "type": "library",
                "name": "function-bind",
                "version": "1.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1fdcd92c6ad33cfab1c556504198e29a38759a7c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/function-bind@1.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/function-bind/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "function-bind@1.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/generate-function@2.3.1",
                "type": "library",
                "name": "generate-function",
                "version": "2.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "52364e3507e1d442790a691b816f46bf4fc65394"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/generate-function@2.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/generate-function/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "generate-function@2.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/get-caller-file@2.0.5",
                "type": "library",
                "name": "get-caller-file",
                "version": "2.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "89c75b65b2c80b295b9544b2c99086a517380f86"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/get-caller-file@2.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/get-caller-file/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "get-caller-file@2.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/get-intrinsic@1.3.0",
                "type": "library",
                "name": "get-intrinsic",
                "version": "1.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "43046e9d01abc17bd97dcfc2dd8fa25bf8f8619c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/get-intrinsic@1.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/get-intrinsic/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "get-intrinsic@1.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/get-proto@1.0.1",
                "type": "library",
                "name": "get-proto",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6dbd8c5f598b42b9445a7958c5749122e09158d4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/get-proto@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/get-proto/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "get-proto@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/glob-parent@5.1.2",
                "type": "library",
                "name": "glob-parent",
                "version": "5.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e0c963215972bcd46dcb563560b4113ad5970b57"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/glob-parent@5.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/glob-parent/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "glob-parent@5.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/glob-parent@6.0.2",
                "type": "library",
                "name": "glob-parent",
                "version": "6.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e991d547d2f8cb4339d50e9452e46d95bf03b08d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/glob-parent@6.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/glob-stream/node_modules/glob-parent/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "glob-parent@6.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/glob-stream@8.0.2",
                "type": "library",
                "name": "glob-stream",
                "version": "8.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "93f2ed32cf0619f2374cf81125ea52f6af484260"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/glob-stream@8.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/glob-stream/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "glob-stream@8.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/glob-watcher@6.0.0",
                "type": "library",
                "name": "glob-watcher",
                "version": "6.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ffa1e15bb03e51ddb82f19e4b1bc75699dcdea71"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/glob-watcher@6.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/glob-watcher/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "glob-watcher@6.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/glob@10.4.5",
                "type": "library",
                "name": "glob",
                "version": "10.4.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fd815b4c5b195a178a7d55053a39c28202d6ce7c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/glob@10.4.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/glob/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "glob@10.4.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/glob@7.1.6",
                "type": "library",
                "name": "glob",
                "version": "7.1.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "792425577e441e09c508cdf71d890e32f7cf890d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/glob@7.1.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/glob/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "glob@7.1.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/global-modules@1.0.0",
                "type": "library",
                "name": "global-modules",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7eb8f441c47a7147a88af25e4b180c0b19c0756f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/global-modules@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/global-modules/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "global-modules@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/global-prefix@1.0.2",
                "type": "library",
                "name": "global-prefix",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b819052d9650e51974f6e39f57bf125175b9860d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/global-prefix@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/global-prefix/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "global-prefix@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/glogg@2.2.0",
                "type": "library",
                "name": "glogg",
                "version": "2.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "64cefa5f10a52fda327da0eefdc8ffd9c8b3d7d0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/glogg@2.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/glogg/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "glogg@2.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/gopd@1.2.0",
                "type": "library",
                "name": "gopd",
                "version": "1.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "682b4b77bd041501546a485298d662b1a54de702"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/gopd@1.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/gopd/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gopd@1.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/growl@1.10.5",
                "type": "library",
                "name": "growl",
                "version": "1.10.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0aea00868ad23f00fc192a6338f8bf37b5185b2a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/growl@1.10.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/growl/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "growl@1.10.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/gulp-cli@3.0.0",
                "type": "library",
                "name": "gulp-cli",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7963aeb7c54b3e9cec285ef4ad4df9c4a7d19712"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/gulp-cli@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/gulp-cli/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gulp-cli@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/gulp@5.0.0",
                "type": "library",
                "name": "gulp",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c7b2cf9d9cdea5486085acf9a5f812d558d7aca3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/gulp@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/gulp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gulp@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/gulplog@2.2.0",
                "type": "library",
                "name": "gulplog",
                "version": "2.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "180dec8ad2d453ddc24fff831d4ebd2780bbb1f4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/gulplog@2.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/gulplog/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "gulplog@2.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/has-flag@4.0.0",
                "type": "library",
                "name": "has-flag",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "688a5d7d9b58962757fdb849c4876e2ed534e12b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/has-flag@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/has-flag/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "has-flag@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/has-symbols@1.1.0",
                "type": "library",
                "name": "has-symbols",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "8e49a565463e9e23d9c32d8ccc18009321af19bf"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/has-symbols@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/has-symbols/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "has-symbols@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/hash.js@1.1.7",
                "type": "library",
                "name": "hash.js",
                "version": "1.1.7",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "47f7230425a057d684bbe5d7ef67ef399ab842bd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/hash.js@1.1.7",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/hash.js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "hash.js@1.1.7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/hasown@2.0.2",
                "type": "library",
                "name": "hasown",
                "version": "2.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2aab9e964e19edf340c8e8978d9bd7eacd6bfc4e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/hasown@2.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/hasown/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "hasown@2.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/he@1.2.0",
                "type": "library",
                "name": "he",
                "version": "1.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "42c6c05f5ba9576695cec7fe6169ccb0f45934f6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/he@1.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/he/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "he@1.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/hmac-drbg@1.0.1",
                "type": "library",
                "name": "hmac-drbg",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "31060e6f99a3a90385ea8a54da2dfb9e906572f0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/hmac-drbg@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/hmac-drbg/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "hmac-drbg@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/homedir-polyfill@1.0.3",
                "type": "library",
                "name": "homedir-polyfill",
                "version": "1.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "90510f253e4efff50c5b4abb632aabb3ece8a9ca"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/homedir-polyfill@1.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/homedir-polyfill/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "homedir-polyfill@1.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/hosted-git-info@8.1.0",
                "type": "library",
                "name": "hosted-git-info",
                "version": "8.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f99a0b77e56e3991768b302307d315a735c846d0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/hosted-git-info@8.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/hosted-git-info/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "hosted-git-info@8.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/http-cache-semantics@4.2.0",
                "type": "library",
                "name": "http-cache-semantics",
                "version": "4.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "563b0d8af1a9641083e8f6cefbf4259fa845e7ca"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/http-cache-semantics@4.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/http-cache-semantics/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "http-cache-semantics@4.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/http-errors@2.0.0",
                "type": "library",
                "name": "http-errors",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "bcb1768525f7f5e1af75c272867bfed66dd983c7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/http-errors@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/http-errors/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "http-errors@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/http-proxy-agent@7.0.2",
                "type": "library",
                "name": "http-proxy-agent",
                "version": "7.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f8b2b2bf2f3e2f8491496f9efe80b96442a803a9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/http-proxy-agent@7.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/http-proxy-agent/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "http-proxy-agent@7.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/https-proxy-agent@7.0.6",
                "type": "library",
                "name": "https-proxy-agent",
                "version": "7.0.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "17ea193ab8be5c579a2d10e9a13bff389858f7e8"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/https-proxy-agent@7.0.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/https-proxy-agent/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "https-proxy-agent@7.0.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ieee754@1.2.1",
                "type": "library",
                "name": "ieee754",
                "version": "1.2.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "19b82f401d4e2ef5db8528a35b2e12d1a2630d65"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/ieee754@1.2.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ieee754/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ieee754@1.2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ignore-walk@7.0.0",
                "type": "library",
                "name": "ignore-walk",
                "version": "7.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ca97830a191b05f6438a354ad2bb8f09b3a78ff6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/ignore-walk@7.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ignore-walk/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ignore-walk@7.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/imurmurhash@0.1.4",
                "type": "library",
                "name": "imurmurhash",
                "version": "0.1.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a28f2b413385af4188c4fc0ad1e0c38c2cd03cf4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/imurmurhash@0.1.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/imurmurhash/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "imurmurhash@0.1.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/inflight@1.0.6",
                "type": "library",
                "name": "inflight",
                "version": "1.0.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "40e50820beed8bfee8ce186d5be617a8c213e7e1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/inflight@1.0.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/inflight/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "inflight@1.0.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/inherits@2.0.4",
                "type": "library",
                "name": "inherits",
                "version": "2.0.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "62b11dd736a0047fbd8d2dc0406d2118a549a359"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/inherits@2.0.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/inherits/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "inherits@2.0.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ini@1.3.8",
                "type": "library",
                "name": "ini",
                "version": "1.3.8",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "14b52ea8911e4e9f89acb4d876e87755e54529e2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/ini@1.3.8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ini/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ini@1.3.8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ini@5.0.0",
                "type": "library",
                "name": "ini",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6f82de9e6ee727a4e745446e6687d6dc4a13bc0f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/ini@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ini/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ini@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/init-package-json@8.2.1",
                "type": "library",
                "name": "init-package-json",
                "version": "8.2.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e6b8e4d04ee610e03cefd12f8373da153614aea1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/init-package-json@8.2.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/init-package-json/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "init-package-json@8.2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/interpret@3.1.1",
                "type": "library",
                "name": "interpret",
                "version": "3.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1f4058d53b38e013e1c45a9a5fe63fd3b587c343"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/interpret@3.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/interpret/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "interpret@3.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ip-address@9.0.5",
                "type": "library",
                "name": "ip-address",
                "version": "9.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a25c4f1a49f808730888e74cca74079aa27c035a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ip-address@9.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ip-address/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ip-address@9.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ip-regex@5.0.0",
                "type": "library",
                "name": "ip-regex",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e3ebe61a5855188e86da90f29b0ea8c44793b9f0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ip-regex@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ip-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ip-regex@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ipaddr.js@1.9.1",
                "type": "library",
                "name": "ipaddr.js",
                "version": "1.9.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "532be044ce57a9f81fed35f3742767f587cfbc95"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ipaddr.js@1.9.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/ipaddr.js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ipaddr.js@1.9.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-absolute@1.0.0",
                "type": "library",
                "name": "is-absolute",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4bb791bb15f2343372fbbce4a46304777cd7704d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-absolute@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-absolute/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-absolute@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-binary-path@2.1.0",
                "type": "library",
                "name": "is-binary-path",
                "version": "2.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1d072ae15e9958d46909b3f3853dc2b17ca57f19"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-binary-path@2.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-binary-path/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-binary-path@2.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-cidr@5.1.1",
                "type": "library",
                "name": "is-cidr",
                "version": "5.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "84cbc27a942da86ba618ea3c2a3f46b9c510050b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/is-cidr@5.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/is-cidr/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-cidr@5.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-core-module@2.16.1",
                "type": "library",
                "name": "is-core-module",
                "version": "2.16.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "bc3dd6412950636f30edccd45de49f5ca359e890"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-core-module@2.16.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-core-module/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-core-module@2.16.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-extglob@2.1.1",
                "type": "library",
                "name": "is-extglob",
                "version": "2.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3f1247dc7f917eba16d9607c17eb9818d2bf43eb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-extglob@2.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-extglob/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-extglob@2.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-fullwidth-code-point@2.0.0",
                "type": "library",
                "name": "is-fullwidth-code-point",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "8b4b76c3bc63680159f5e97ff8e3a218f25e7c00"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-fullwidth-code-point@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/wide-align/node_modules/is-fullwidth-code-point/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-fullwidth-code-point@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-glob@4.0.3",
                "type": "library",
                "name": "is-glob",
                "version": "4.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "57a53965f8f746a1f0f29696ad6e770a8beff7e5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-glob@4.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-glob/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-glob@4.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-negated-glob@1.0.0",
                "type": "library",
                "name": "is-negated-glob",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "49d076f50551d57ac58ff743f0b88f90888b2463"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-negated-glob@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-negated-glob/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-negated-glob@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-number@7.0.0",
                "type": "library",
                "name": "is-number",
                "version": "7.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2bd4ba6c07c12d2b7af0035e57b46cbb7e133477"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-number@7.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-number/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-number@7.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-plain-obj@2.1.0",
                "type": "library",
                "name": "is-plain-obj",
                "version": "2.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b57cf52fe8084c00a47423a9486a25378b9f4cbe"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-plain-obj@2.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-plain-obj/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-plain-obj@2.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-plain-object@5.0.0",
                "type": "library",
                "name": "is-plain-object",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7d752040bd295be820ee1a8eef8276f04a9bb368"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-plain-object@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-plain-object/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-plain-object@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-promise@4.0.0",
                "type": "library",
                "name": "is-promise",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ef5c07f3b47437eb296ea914e2c1b546ab42f6c7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-promise@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-promise/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-promise@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-property@1.0.2",
                "type": "library",
                "name": "is-property",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "35d9023df9faf71091a4a8a3cc8cbd53f9aac9c7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-property@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-property/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-property@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-relative@1.0.0",
                "type": "library",
                "name": "is-relative",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "259ca538dacebc5458a1deef3600da0469f1f5de"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-relative@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-relative/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-relative@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-unc-path@1.0.0",
                "type": "library",
                "name": "is-unc-path",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "56e3e8226782aa420417222268679e375aea5155"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-unc-path@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-unc-path/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-unc-path@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-valid-glob@1.0.0",
                "type": "library",
                "name": "is-valid-glob",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3c8e15ce5768289ffc6872ec974ab994178f3de4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-valid-glob@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-valid-glob/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-valid-glob@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/is-windows@1.0.2",
                "type": "library",
                "name": "is-windows",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f452f4328f713c711a0e207be3d8a0958222c892"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/is-windows@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/is-windows/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "is-windows@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/isarray@1.0.0",
                "type": "library",
                "name": "isarray",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e4a5d79d5ea9366beb66cf993d11b88603e6333e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/isarray@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/isarray/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "isarray@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/isexe@3.1.1",
                "type": "library",
                "name": "isexe",
                "version": "3.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "33fc88b1f05370bb6518291c601cf96cfcafdc3b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/isexe@3.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/which/node_modules/isexe/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "isexe@3.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/isobject@3.0.1",
                "type": "library",
                "name": "isobject",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "dd20c4d536aa7a67fb5ed1eb4e5122ecd57534a9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/isobject@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/isobject/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "isobject@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/jackspeak@3.4.3",
                "type": "library",
                "name": "jackspeak",
                "version": "3.4.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "15e15f7f7565d0a355be813b2e68eb35e65102a5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BlueOak-1.0.0"
                        }
                    }
                ],
                "purl": "pkg:npm/jackspeak@3.4.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/jackspeak/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "jackspeak@3.4.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/js-sha256@0.9.0",
                "type": "library",
                "name": "js-sha256",
                "version": "0.9.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0cf421f2586a0b3161676e7d42ccb8523bf5658b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/js-sha256@0.9.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/js-sha256/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "js-sha256@0.9.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/js-sha512@0.8.0",
                "type": "library",
                "name": "js-sha512",
                "version": "0.8.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f9dff465fcb17f1c99802fe9d10603ebeba3c6a0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/js-sha512@0.8.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/js-sha512/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "js-sha512@0.8.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/js-yaml@4.0.0",
                "type": "library",
                "name": "js-yaml",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3f07d23433617ba924eeafd5cd0cb18e110fb6c7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/js-yaml@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/js-yaml/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "js-yaml@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/jsbn@1.1.0",
                "type": "library",
                "name": "jsbn",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "726b8f5826e87e0b86e50bb7c4a23cbae168868e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/jsbn@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/jsbn/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "jsbn@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/json-parse-even-better-errors@4.0.0",
                "type": "library",
                "name": "json-parse-even-better-errors",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6fb81ff6b422e2dd97dbd03d6095016aa7a4317e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/json-parse-even-better-errors@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/json-parse-even-better-errors/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "json-parse-even-better-errors@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/json-stringify-nice@1.1.4",
                "type": "library",
                "name": "json-stringify-nice",
                "version": "1.1.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "adef02a4345a493535ccb990b09f850508ae516f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/json-stringify-nice@1.1.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/json-stringify-nice/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "json-stringify-nice@1.1.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/jsonparse@1.3.1",
                "type": "library",
                "name": "jsonparse",
                "version": "1.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ec0bb766bf32ebd53d835393da006bb834a663fd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/jsonparse@1.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/jsonparse/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "jsonparse@1.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/jsonwebtoken@9.0.2",
                "type": "library",
                "name": "jsonwebtoken",
                "version": "9.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6cc4aa118280fe487845f7d7295143912744382c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/jsonwebtoken@9.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/jsonwebtoken/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "jsonwebtoken@9.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/just-diff-apply@5.5.0",
                "type": "library",
                "name": "just-diff-apply",
                "version": "5.5.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "26d39d00f0fc1ddfe4974dbe69691f9c09ad9036"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/just-diff-apply@5.5.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/just-diff-apply/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "just-diff-apply@5.5.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/just-diff@6.0.2",
                "type": "library",
                "name": "just-diff",
                "version": "6.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "396a274e87b3ad6a3704a76cf18fbb2a9dd45ada"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/just-diff@6.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/just-diff/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "just-diff@6.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/jwa@1.4.2",
                "type": "library",
                "name": "jwa",
                "version": "1.4.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "41815ed030addaab52fbaee0ea72cd04e7ffb4aa"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/jwa@1.4.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/jwa/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "jwa@1.4.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/jws@3.2.2",
                "type": "library",
                "name": "jws",
                "version": "3.2.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e7d7b964abd97e08366436e9302bf9a966f32349"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/jws@3.2.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/jws/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "jws@3.2.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/last-run@2.0.0",
                "type": "library",
                "name": "last-run",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "32232262a03018277466333c92d1e4adecf8b22b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/last-run@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/last-run/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "last-run@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lead@4.0.0",
                "type": "library",
                "name": "lead",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "24cee79db6471d9c9ea82ef1e3bc7857abe34251"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lead@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lead/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lead@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmaccess@10.0.1",
                "type": "library",
                "name": "libnpmaccess",
                "version": "10.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1bbb74e9404d53a09870be253bd0de0ba4053fe0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmaccess@10.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmaccess/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmaccess@10.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmdiff@8.0.5",
                "type": "library",
                "name": "libnpmdiff",
                "version": "8.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "cdc6846412d737e748ceeb1e2768ab0808cb2c9a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmdiff@8.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmdiff/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmdiff@8.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmexec@10.1.4",
                "type": "library",
                "name": "libnpmexec",
                "version": "10.1.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "affa8f8c9f4afe331b4e323d186b7bd69b55e7ad"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmexec@10.1.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmexec/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmexec@10.1.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmfund@7.0.5",
                "type": "library",
                "name": "libnpmfund",
                "version": "7.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9ae6ef1891f79637ef46f8cd2926d51fd00197a7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmfund@7.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmfund/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmfund@7.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmorg@8.0.0",
                "type": "library",
                "name": "libnpmorg",
                "version": "8.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "16fb0f41e2331aa66729fb8b67731267db272acd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmorg@8.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmorg/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmorg@8.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmpack@9.0.5",
                "type": "library",
                "name": "libnpmpack",
                "version": "9.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "586274b97e7ffdd00ade49ee3d6e05ba603a125f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmpack@9.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmpack/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmpack@9.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmpublish@11.0.1",
                "type": "library",
                "name": "libnpmpublish",
                "version": "11.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7e527e28899be4e0787d05c0e1ffdd302c138e18"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmpublish@11.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmpublish/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmpublish@11.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmsearch@9.0.0",
                "type": "library",
                "name": "libnpmsearch",
                "version": "9.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "45202c7091906cdf550a8de50c3b97333e3eb8f1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmsearch@9.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmsearch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmsearch@9.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmteam@8.0.1",
                "type": "library",
                "name": "libnpmteam",
                "version": "8.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9d2e5a1665c4d7a588d89b66e367d2852f3d89bc"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmteam@8.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmteam/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmteam@8.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/libnpmversion@8.0.1",
                "type": "library",
                "name": "libnpmversion",
                "version": "8.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c1c2358e3ba0af2601af76086e48d96002e8b1fb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/libnpmversion@8.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/libnpmversion/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "libnpmversion@8.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/liftoff@5.0.0",
                "type": "library",
                "name": "liftoff",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "58fc9217427145a575ba445faf5f010126136070"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/liftoff@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/liftoff/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "liftoff@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ljharb-monorepo-symlink-test@0.0.0",
                "type": "library",
                "name": "ljharb-monorepo-symlink-test",
                "version": "0.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b58a1b0588a1102572e64a4d2047ce8731de1a76"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ljharb-monorepo-symlink-test@0.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/resolve/test/resolver/multirepo/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ljharb-monorepo-symlink-test@0.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/locate-path@6.0.0",
                "type": "library",
                "name": "locate-path",
                "version": "6.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "100fe90ba6a0e0dc9ee645d159d4be633ded9c95"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/locate-path@6.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/locate-path/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "locate-path@6.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lodash.includes@4.3.0",
                "type": "library",
                "name": "lodash.includes",
                "version": "4.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6f588b9569a6f811ea6d01adc8e93ffb67816a61"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lodash.includes@4.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lodash.includes/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lodash.includes@4.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lodash.isboolean@3.0.3",
                "type": "library",
                "name": "lodash.isboolean",
                "version": "3.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fe84e45ad2699493e5c11f81a126c9740ada2af0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lodash.isboolean@3.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lodash.isboolean/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lodash.isboolean@3.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lodash.isinteger@4.0.4",
                "type": "library",
                "name": "lodash.isinteger",
                "version": "4.0.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ae54d3ab77e3dff45f4f1f9258fe5cbea7c5c482"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lodash.isinteger@4.0.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lodash.isinteger/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lodash.isinteger@4.0.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lodash.isnumber@3.0.3",
                "type": "library",
                "name": "lodash.isnumber",
                "version": "3.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "dc54adda0bbd00c611bfeb71bbaef7442d279574"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lodash.isnumber@3.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lodash.isnumber/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lodash.isnumber@3.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lodash.isplainobject@4.0.6",
                "type": "library",
                "name": "lodash.isplainobject",
                "version": "4.0.6",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6077efffe6d9447cc0c9d7b804f0b545b5b974fd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lodash.isplainobject@4.0.6",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lodash.isplainobject/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lodash.isplainobject@4.0.6"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lodash.isstring@4.0.1",
                "type": "library",
                "name": "lodash.isstring",
                "version": "4.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7533219e98c934743bf32bcaa0bcecf620e08e2d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lodash.isstring@4.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lodash.isstring/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lodash.isstring@4.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lodash.once@4.1.1",
                "type": "library",
                "name": "lodash.once",
                "version": "4.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "11b689c5a4124da0cb1a49c21475cefe8b5fd999"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lodash.once@4.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lodash.once/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lodash.once@4.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/log-symbols@4.0.0",
                "type": "library",
                "name": "log-symbols",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6d7f954e5cd859b5b11326a2ddda3453ceb6707f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/log-symbols@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/log-symbols/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "log-symbols@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/long@5.3.2",
                "type": "library",
                "name": "long",
                "version": "5.3.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d6567d1c9e8dd5bfb142d84de6bf02511a703b46"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/long@5.3.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/long/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "long@5.3.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lru-cache@10.4.3",
                "type": "library",
                "name": "lru-cache",
                "version": "10.4.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "eba45f816c43b1e505440b7a7f8392e38ba11306"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/lru-cache@10.4.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/lru-cache/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lru-cache@10.4.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lru-cache@7.18.3",
                "type": "library",
                "name": "lru-cache",
                "version": "7.18.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e44ec27349915d16c400b9d619c86770972e40a2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/lru-cache@7.18.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lru-cache/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lru-cache@7.18.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/lru.min@1.1.2",
                "type": "library",
                "name": "lru.min",
                "version": "1.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "af4e80e4fed3f4ec5890ff9cc918df5326bef38b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/lru.min@1.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/lru.min/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "lru.min@1.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/make-fetch-happen@14.0.3",
                "type": "library",
                "name": "make-fetch-happen",
                "version": "14.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4e321611ef7ad4a60c9b8db56a8e49c35f4624f5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/make-fetch-happen@14.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/make-fetch-happen/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "make-fetch-happen@14.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/map-cache@0.2.2",
                "type": "library",
                "name": "map-cache",
                "version": "0.2.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "59f4b9e44939cd98fa3853cd0437d509aed52b92"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/map-cache@0.2.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/map-cache/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "map-cache@0.2.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/math-intrinsics@1.1.0",
                "type": "library",
                "name": "math-intrinsics",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "017b2996c50a49f073f75e2cb92b61b9d4258bce"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/math-intrinsics@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/math-intrinsics/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "math-intrinsics@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/media-typer@1.1.0",
                "type": "library",
                "name": "media-typer",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0dde9b852eb283bcd0d7eaa2c4dddf632e0eb4b1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/media-typer@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/media-typer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "media-typer@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/merge-descriptors@2.0.0",
                "type": "library",
                "name": "merge-descriptors",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1e6268c8f49caeefb94aed3ce5b030bf746bcbd1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/merge-descriptors@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/merge-descriptors/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "merge-descriptors@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/micromatch@4.0.8",
                "type": "library",
                "name": "micromatch",
                "version": "4.0.8",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0ae8e81288771f32a5d752c97255f75cb2f48524"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/micromatch@4.0.8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/micromatch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "micromatch@4.0.8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mime-db@1.54.0",
                "type": "library",
                "name": "mime-db",
                "version": "1.54.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3b540054dd7a6dc367585ac631b02aa6f81e04a1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mime-db@1.54.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mime-db/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mime-db@1.54.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mime-types@3.0.1",
                "type": "library",
                "name": "mime-types",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "15d99f4acc0ea5b7bd7a26bf245176dca164c398"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mime-types@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mime-types/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mime-types@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minimalistic-assert@1.0.1",
                "type": "library",
                "name": "minimalistic-assert",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "156b05da05b4bc7c77d1d325846dcdfae350ee94"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minimalistic-assert@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/minimalistic-assert/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minimalistic-assert@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minimalistic-crypto-utils@1.0.1",
                "type": "library",
                "name": "minimalistic-crypto-utils",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e683fb7ceb8e7fd40135863e146ef6965e3bc20b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/minimalistic-crypto-utils@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/minimalistic-crypto-utils/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minimalistic-crypto-utils@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minimatch@3.0.4",
                "type": "library",
                "name": "minimatch",
                "version": "3.0.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "dea0c1fe32cff8a4b24dbb9ee00111c4a9161c43"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minimatch@3.0.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/minimatch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minimatch@3.0.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minimatch@9.0.5",
                "type": "library",
                "name": "minimatch",
                "version": "9.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fad71756ee05319a797b6ec51669df8e01e76379"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minimatch@9.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minimatch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minimatch@9.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minipass-collect@2.0.1",
                "type": "library",
                "name": "minipass-collect",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7ca3a77ca7b795148ecee5d9ebbe96e968dddb15"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass-collect@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-collect/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass-collect@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minipass-fetch@4.0.1",
                "type": "library",
                "name": "minipass-fetch",
                "version": "4.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "20a8b7cdd0d9df659a448aef3a4589ca2a95d39e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass-fetch@4.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-fetch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass-fetch@4.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minipass-flush@1.0.5",
                "type": "library",
                "name": "minipass-flush",
                "version": "1.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c89612a2a9c68141b8271bbc94bcc88067c29790"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass-flush@1.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-flush/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass-flush@1.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minipass-pipeline@1.2.4",
                "type": "library",
                "name": "minipass-pipeline",
                "version": "1.2.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e30c58465801deaceb4b81898e531c75679563b1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass-pipeline@1.2.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-pipeline/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass-pipeline@1.2.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minipass-sized@1.0.3",
                "type": "library",
                "name": "minipass-sized",
                "version": "1.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "615e0e93dfdbc65b217029380591abc9e9b64136"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass-sized@1.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass-sized/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass-sized@1.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minipass@5.0.0",
                "type": "library",
                "name": "minipass",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f351144cafb23a2e78d442708fcbcfdcd4c5420f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tar/node_modules/minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minipass@7.1.2",
                "type": "library",
                "name": "minipass",
                "version": "7.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "798df22ae1185484c372b4da30c4d75a0e7ea572"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/minipass@7.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minipass/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minipass@7.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/minizlib@2.1.2",
                "type": "library",
                "name": "minizlib",
                "version": "2.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5745585933310f7807eebd4e9bc01e2d83ba160d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/minizlib@2.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/minizlib/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "minizlib@2.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mkdirp@1.0.4",
                "type": "library",
                "name": "mkdirp",
                "version": "1.0.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "46da394a85c88f3288e19ccd89c03174e1360c52"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mkdirp@1.0.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/mkdirp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mkdirp@1.0.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mocha@8.4.0",
                "type": "library",
                "name": "mocha",
                "version": "8.4.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3ea07cd328dac5c6cd11edac241cb9abae1b59de"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mocha@8.4.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mocha/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mocha@8.4.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/moment@2.30.1",
                "type": "library",
                "name": "moment",
                "version": "2.30.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d32c71de37d4b9dffede0ee39dedd2eca5b4bb12"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/moment@2.30.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/moment/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "moment@2.30.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ms@2.1.2",
                "type": "library",
                "name": "ms",
                "version": "2.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fe112804e727b4f3489e9a52900349d0a4ed302c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/ms@2.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mocha/node_modules/debug/node_modules/ms/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ms@2.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mute-stdout@2.0.0",
                "type": "library",
                "name": "mute-stdout",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "968468b8f3232484d4210553e3f7c82942080e90"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mute-stdout@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mute-stdout/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mute-stdout@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mute-stream@2.0.0",
                "type": "library",
                "name": "mute-stream",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7f9eff4bc99d6d99dfa22506626bf4d2ec36530c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/mute-stream@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/mute-stream/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mute-stream@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mylib@0.0.0",
                "type": "library",
                "name": "mylib",
                "version": "0.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0803d5d30c2a6fec04f09b9969969a91743b28cf"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/mylib@0.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/resolve/test/resolver/nested_symlinks/mylib/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mylib@0.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mysql2@3.14.1",
                "type": "library",
                "name": "mysql2",
                "version": "3.14.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2b0654fbd45b91ab9309c692ddfb461833356fd0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mysql2@3.14.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mysql2/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mysql2@3.14.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/mysql@2.18.1",
                "type": "library",
                "name": "mysql",
                "version": "2.18.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1eeb939d7446f976721ec77281b74e4d91bb31fd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/mysql@2.18.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mysql/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "mysql@2.18.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/named-placeholders@1.1.3",
                "type": "library",
                "name": "named-placeholders",
                "version": "1.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2d50b56bde3e19d3374d90f8896d176b8d16ed18"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/named-placeholders@1.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/named-placeholders/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "named-placeholders@1.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/nanoid@3.1.20",
                "type": "library",
                "name": "nanoid",
                "version": "3.1.20",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d3e07fbff9003cf9f870b5f03010395f0e8e4c97"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/nanoid@3.1.20",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/nanoid/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "nanoid@3.1.20"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/node-gyp@11.2.0",
                "type": "library",
                "name": "node-gyp",
                "version": "11.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b854e13d0110b3c27cc2a56235fd1a785168a6ca"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/node-gyp@11.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/node-gyp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "node-gyp@11.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/nopt@8.1.0",
                "type": "library",
                "name": "nopt",
                "version": "8.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "317e51d1f350fa28d851280d460bebcd9154acca"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/nopt@8.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/nopt/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "nopt@8.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/normalize-package-data@7.0.0",
                "type": "library",
                "name": "normalize-package-data",
                "version": "7.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4c13bb844928d69f1986ce30b637b3bc5b6a8e60"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/normalize-package-data@7.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/normalize-package-data/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "normalize-package-data@7.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/normalize-path@3.0.0",
                "type": "library",
                "name": "normalize-path",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc704b76301681294309df4f3936e4e5e1657e55"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/normalize-path@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/normalize-path/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "normalize-path@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/now-and-later@3.0.0",
                "type": "library",
                "name": "now-and-later",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4eec378733d1d515bd05bc040922aa2b5057105a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/now-and-later@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/now-and-later/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "now-and-later@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-audit-report@6.0.0",
                "type": "library",
                "name": "npm-audit-report",
                "version": "6.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c6d99ebde23570472f511de67beedd2a9c0a21fb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-audit-report@6.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-audit-report/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-audit-report@6.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-bundled@4.0.0",
                "type": "library",
                "name": "npm-bundled",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "12ea20fbce124e65be448ec472b370cd1a4e4e9a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-bundled@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-bundled/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-bundled@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-install-checks@7.1.1",
                "type": "library",
                "name": "npm-install-checks",
                "version": "7.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c48a56a88fcffa90e9004a909e1b318976c12f02"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-install-checks@7.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-install-checks/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-install-checks@7.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-normalize-package-bin@4.0.0",
                "type": "library",
                "name": "npm-normalize-package-bin",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fd34d45c247025dea9a507fb9db4586afa05c732"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-normalize-package-bin@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-normalize-package-bin/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-normalize-package-bin@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-package-arg@12.0.2",
                "type": "library",
                "name": "npm-package-arg",
                "version": "12.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "aa45c18dcf8938fb83865df32f2e3ab785cb869b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-package-arg@12.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-package-arg/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-package-arg@12.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-packlist@10.0.0",
                "type": "library",
                "name": "npm-packlist",
                "version": "10.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "be8568cfcd03533b30d75c6426acc116e76ad572"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-packlist@10.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-packlist/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-packlist@10.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-pick-manifest@10.0.0",
                "type": "library",
                "name": "npm-pick-manifest",
                "version": "10.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c2cd4c78552c6245720d304febe3f8e2e55c8b6f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-pick-manifest@10.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-pick-manifest/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-pick-manifest@10.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-profile@11.0.1",
                "type": "library",
                "name": "npm-profile",
                "version": "11.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f1d46ef600b2b10d196d55ed3a680b40d5c92dd0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-profile@11.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-profile/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-profile@11.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-registry-fetch@18.0.2",
                "type": "library",
                "name": "npm-registry-fetch",
                "version": "18.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "28f373a5c4ba4d192b0d829af7e8004c4ec673f5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-registry-fetch@18.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-registry-fetch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-registry-fetch@18.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm-user-validate@3.0.0",
                "type": "library",
                "name": "npm-user-validate",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "cfea52638093ceccf3bea4e6f09bd9370943e8de"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/npm-user-validate@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/npm-user-validate/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm-user-validate@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/npm@11.4.2",
                "type": "library",
                "name": "npm",
                "version": "11.4.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0c3b25f0abf500e04c79f12b15c5259b29ee0e16"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Artistic-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/npm@11.4.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "npm@11.4.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/object-inspect@1.13.4",
                "type": "library",
                "name": "object-inspect",
                "version": "1.13.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f59a216249b68601d6e44515c4f9188a2110cc50"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/object-inspect@1.13.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/object-inspect/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "object-inspect@1.13.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/object.defaults@1.1.0",
                "type": "library",
                "name": "object.defaults",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e2e67e299fc4fc4f3a49c7d763bb40d9f8f952b3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/object.defaults@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/object.defaults/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "object.defaults@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/object.pick@1.3.0",
                "type": "library",
                "name": "object.pick",
                "version": "1.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7a553ddd8f24c96892437678a12c8a2cdd804312"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/object.pick@1.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/object.pick/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "object.pick@1.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/on-finished@2.4.1",
                "type": "library",
                "name": "on-finished",
                "version": "2.4.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "777e9cd400b42dee1199eacfb325876caeaff3cc"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/on-finished@2.4.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/on-finished/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "on-finished@2.4.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/once@1.4.0",
                "type": "library",
                "name": "once",
                "version": "1.4.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b2456f0417ad4f7dec058401908740c4da1ee7ba"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/once@1.4.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/once/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "once@1.4.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/p-limit@3.1.0",
                "type": "library",
                "name": "p-limit",
                "version": "3.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "23e524ae6cf145848e0f47074bcc08f04904392a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/p-limit@3.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/p-limit/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "p-limit@3.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/p-locate@5.0.0",
                "type": "library",
                "name": "p-locate",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c7419e153ef6f33b6c1efcf316b3ec1bf087e232"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/p-locate@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/p-locate/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "p-locate@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/p-map@7.0.3",
                "type": "library",
                "name": "p-map",
                "version": "7.0.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "95eec87c2f7ed9f31ccd295eb97b9ce9d98c58ed"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/p-map@7.0.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/p-map/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "p-map@7.0.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/package-json-from-dist@1.0.1",
                "type": "library",
                "name": "package-json-from-dist",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d93947bd52021bb5f785613249e0e198a3b48025"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BlueOak-1.0.0"
                        }
                    }
                ],
                "purl": "pkg:npm/package-json-from-dist@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/package-json-from-dist/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "package-json-from-dist@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/pacote@21.0.0",
                "type": "library",
                "name": "pacote",
                "version": "21.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "707d2b67e6198430629e8d14094eeb37bf936e51"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/pacote@21.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/pacote/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "pacote@21.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/parse-conflict-json@4.0.0",
                "type": "library",
                "name": "parse-conflict-json",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "8113361744ef993fc1945a13ab153adfe70513f8"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/parse-conflict-json@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/parse-conflict-json/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "parse-conflict-json@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/parse-filepath@1.0.2",
                "type": "library",
                "name": "parse-filepath",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a22d4709dc4be9310d39c64ec4f03233201f3d7d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/parse-filepath@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/parse-filepath/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "parse-filepath@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/parse-passwd@1.0.0",
                "type": "library",
                "name": "parse-passwd",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "25fb0f091c688a3376145c783fd823aa6fd93b82"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/parse-passwd@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/parse-passwd/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "parse-passwd@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/parseurl@1.3.3",
                "type": "library",
                "name": "parseurl",
                "version": "1.3.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "646dc756ff16c464fcb63e17b2cd5ee4ad4f8b66"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/parseurl@1.3.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/parseurl/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "parseurl@1.3.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-exists@4.0.0",
                "type": "library",
                "name": "path-exists",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "dc362acdf83f36298d8ea6c823ac1d0b3b2096ea"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/path-exists@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/path-exists/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-exists@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-is-absolute@1.0.1",
                "type": "library",
                "name": "path-is-absolute",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "51b80416ea8aff0f6f04b15ee2e114250ba1a14c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/path-is-absolute@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/path-is-absolute/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-is-absolute@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-key@3.1.1",
                "type": "library",
                "name": "path-key",
                "version": "3.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f330c46f59dbdd92dddf8a2cfc2c1569b469bdd2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/path-key@3.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/path-key/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-key@3.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-parse@1.0.7",
                "type": "library",
                "name": "path-parse",
                "version": "1.0.7",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6ea9437323546aaaeb28afa33d0c9c7ed03e93a5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/path-parse@1.0.7",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/path-parse/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-parse@1.0.7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-root-regex@0.1.2",
                "type": "library",
                "name": "path-root-regex",
                "version": "0.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "715724f361b739f0c9721f038f1bd8b2bcbe5d60"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/path-root-regex@0.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/path-root-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-root-regex@0.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-root@0.1.1",
                "type": "library",
                "name": "path-root",
                "version": "0.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0c48e82e37942bc5a594e8ddddf7f83ce3e0633a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/path-root@0.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/path-root/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-root@0.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-scurry@1.11.1",
                "type": "library",
                "name": "path-scurry",
                "version": "1.11.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "57ceeacc9d50abbd7e370e6a697520cc0784baa6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BlueOak-1.0.0"
                        }
                    }
                ],
                "purl": "pkg:npm/path-scurry@1.11.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/path-scurry/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-scurry@1.11.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/path-to-regexp@8.2.0",
                "type": "library",
                "name": "path-to-regexp",
                "version": "8.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2ca8039547072229d00350506b03135e510edaa6"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/path-to-regexp@8.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/path-to-regexp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "path-to-regexp@8.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/picomatch@2.3.1",
                "type": "library",
                "name": "picomatch",
                "version": "2.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "82a55c764518c102b45acb6b097bdfbc6ba874fa"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/picomatch@2.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/picomatch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "picomatch@2.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/picomatch@4.0.2",
                "type": "library",
                "name": "picomatch",
                "version": "4.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "19c0356dce9b493e2cfc2a4097317dfb44d42108"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/picomatch@4.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tinyglobby/node_modules/picomatch/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "picomatch@4.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/postcss-selector-parser@7.1.0",
                "type": "library",
                "name": "postcss-selector-parser",
                "version": "7.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f3dd4406c5202c089400fad7c71a0694fc8e85dc"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/postcss-selector-parser@7.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/postcss-selector-parser/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "postcss-selector-parser@7.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/proc-log@5.0.0",
                "type": "library",
                "name": "proc-log",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ef77e00bb180e2d474ef8ec427d3ddb2dffe8b60"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/proc-log@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/proc-log/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "proc-log@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/process-nextick-args@2.0.1",
                "type": "library",
                "name": "process-nextick-args",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "75936b9172e05098607a006de74399060a53a79c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/process-nextick-args@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/process-nextick-args/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "process-nextick-args@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/proggy@3.0.0",
                "type": "library",
                "name": "proggy",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6760b8196686e9576f1031286d5dcfda786943bd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/proggy@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/proggy/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "proggy@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/promise-all-reject-late@1.0.1",
                "type": "library",
                "name": "promise-all-reject-late",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c88aa929d83fb2bbf326f7c62103da6b8c48c4df"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/promise-all-reject-late@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/promise-all-reject-late/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "promise-all-reject-late@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/promise-call-limit@3.0.2",
                "type": "library",
                "name": "promise-call-limit",
                "version": "3.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "27f3261a15e6ace571c3ad192e878cec1d9358c9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/promise-call-limit@3.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/promise-call-limit/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "promise-call-limit@3.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/promise-retry@2.0.1",
                "type": "library",
                "name": "promise-retry",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fc649cbedea73287db37a431e5761e9c0b4abca9"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/promise-retry@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/promise-retry/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "promise-retry@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/promzard@2.0.0",
                "type": "library",
                "name": "promzard",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0907f5a36bfb56f2e11b39ed343ca6296e7a514d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/promzard@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/promzard/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "promzard@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/proxy-addr@2.0.7",
                "type": "library",
                "name": "proxy-addr",
                "version": "2.0.7",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a04c60d6b2441d6e2a6ebddcab75aa6efc2d1d9c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/proxy-addr@2.0.7",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/proxy-addr/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "proxy-addr@2.0.7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/qrcode-terminal@0.12.0",
                "type": "library",
                "name": "qrcode-terminal",
                "version": "0.12.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4a84ac3decfe9f31da851b98dedd698f935b83bc"
                    }
                ],
                "purl": "pkg:npm/qrcode-terminal@0.12.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/qrcode-terminal/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "qrcode-terminal@0.12.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/qs@6.14.0",
                "type": "library",
                "name": "qs",
                "version": "6.14.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "759b146e730bda8c3a5a711b475380d57d84130b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/qs@6.14.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/qs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "qs@6.14.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/randombytes@2.1.0",
                "type": "library",
                "name": "randombytes",
                "version": "2.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b65401310e748bc1051e8307cfd5d0d05d39697f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/randombytes@2.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/randombytes/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "randombytes@2.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/range-parser@1.2.1",
                "type": "library",
                "name": "range-parser",
                "version": "1.2.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e82a50d4be1c57ded40bf39a5232bf5c6dabb46d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/range-parser@1.2.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/range-parser/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "range-parser@1.2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/raw-body@3.0.0",
                "type": "library",
                "name": "raw-body",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0f407ab53766551872621a3f97f9433060599473"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/raw-body@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/raw-body/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "raw-body@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/read-cmd-shim@5.0.0",
                "type": "library",
                "name": "read-cmd-shim",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3ad7a2af8954f4df2e9ee3e8af8897fb9a49e894"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/read-cmd-shim@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/read-cmd-shim/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "read-cmd-shim@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/read-package-json-fast@4.0.0",
                "type": "library",
                "name": "read-package-json-fast",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a16c564fdedb8653369901d209d9962afe4e9604"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/read-package-json-fast@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/read-package-json-fast/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "read-package-json-fast@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/read@4.1.0",
                "type": "library",
                "name": "read",
                "version": "4.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "537319f6c0eeaf2b59bae777fbda32e5bbce89ff"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/read@4.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/read/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "read@4.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/readable-stream@2.3.7",
                "type": "library",
                "name": "readable-stream",
                "version": "2.3.7",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c3dbddddf2b5fecf8d39d02fa970feb1616f0aba"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/readable-stream@2.3.7",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/readable-stream/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "readable-stream@2.3.7"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/readable-stream@3.6.2",
                "type": "library",
                "name": "readable-stream",
                "version": "3.6.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6bc59e2d7a44059a5f86b25e3e8ef9b80a83fcac"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/readable-stream@3.6.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/bl/node_modules/readable-stream/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "readable-stream@3.6.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/readdirp@3.5.0",
                "type": "library",
                "name": "readdirp",
                "version": "3.5.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "157901809959f68777047aa6a020c6a7be323255"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/readdirp@3.5.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mocha/node_modules/readdirp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "readdirp@3.5.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/readdirp@3.6.0",
                "type": "library",
                "name": "readdirp",
                "version": "3.6.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d23449b6e35b17dd6c9056d402aee4b06976e94d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/readdirp@3.6.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/readdirp/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "readdirp@3.6.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/rechoir@0.8.0",
                "type": "library",
                "name": "rechoir",
                "version": "0.8.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "41dcea80d82b9083480711a5a8356f7d6b616c4d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/rechoir@0.8.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/rechoir/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "rechoir@0.8.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/remove-trailing-separator@1.1.0",
                "type": "library",
                "name": "remove-trailing-separator",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ca8ba920e17ef8348a3064c5705d3f90dac8b26f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/remove-trailing-separator@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/remove-trailing-separator/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "remove-trailing-separator@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/replace-ext@2.0.0",
                "type": "library",
                "name": "replace-ext",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "29a04accd9ce0b086d607da67b5a8103c1d343e2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/replace-ext@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/replace-ext/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "replace-ext@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/replace-homedir@2.0.0",
                "type": "library",
                "name": "replace-homedir",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a9ea77e6383085286490ba2a6b9177b1498cca1e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/replace-homedir@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/replace-homedir/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "replace-homedir@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/require-directory@2.1.1",
                "type": "library",
                "name": "require-directory",
                "version": "2.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a2e7fa658504a11868812ca0f9f8b08433bc2e3a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/require-directory@2.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/require-directory/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "require-directory@2.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/resolve-dir@1.0.1",
                "type": "library",
                "name": "resolve-dir",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "b6147edfc55437b27388119c5ff8ce89eb4208fc"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/resolve-dir@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/resolve-dir/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "resolve-dir@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/resolve-options@2.0.0",
                "type": "library",
                "name": "resolve-options",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "60be0f27b54e9bec2494d4041d9bef56b7fd028d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/resolve-options@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/resolve-options/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "resolve-options@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/resolve@1.22.10",
                "type": "library",
                "name": "resolve",
                "version": "1.22.10",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d6cd8dab72951fe86cc7178bc25e4eb68fa26587"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/resolve@1.22.10",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/resolve/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "resolve@1.22.10"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/retry@0.12.0",
                "type": "library",
                "name": "retry",
                "version": "0.12.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "10dd0941e4e65c436c4f7111efdb1679c966c478"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/retry@0.12.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/retry/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "retry@0.12.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/reusify@1.1.0",
                "type": "library",
                "name": "reusify",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2aa612001fb0674b2dfe5b66e5274df1f398393e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/reusify@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/reusify/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "reusify@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/router@2.2.0",
                "type": "library",
                "name": "router",
                "version": "2.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "18a05c654d8159843c6568ab9eeca24a7be6efc2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/router@2.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/router/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "router@2.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/safe-buffer@5.2.1",
                "type": "library",
                "name": "safe-buffer",
                "version": "5.2.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6ce1dddfb8739c577ae2ad84f1aba01427791f57"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/safe-buffer@5.2.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/safe-buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "safe-buffer@5.2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/semver-greatest-satisfied-range@2.0.0",
                "type": "library",
                "name": "semver-greatest-satisfied-range",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "bdc31d0c66ba3138934b13457c997c8a64be923a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/semver-greatest-satisfied-range@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/semver-greatest-satisfied-range/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "semver-greatest-satisfied-range@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/semver@6.3.1",
                "type": "library",
                "name": "semver",
                "version": "6.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d91947b266fe307993ed51d6a5abbcf5b275162c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/semver@6.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/sver/node_modules/semver/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "semver@6.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/semver@7.7.1",
                "type": "library",
                "name": "semver",
                "version": "7.7.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c015411691c123d0d46a7325b1825ec6bf7c3785"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/semver@7.7.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/semver/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "semver@7.7.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/semver@7.7.2",
                "type": "library",
                "name": "semver",
                "version": "7.7.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4828b73519e8746fc3d197d595acae81975cb4bc"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/semver@7.7.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/semver/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "semver@7.7.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/send@1.2.0",
                "type": "library",
                "name": "send",
                "version": "1.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0f2965a12cc210f9ad5b62215cc974ca79bd1b1d"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/send@1.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/send/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "send@1.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/seq-queue@0.0.5",
                "type": "library",
                "name": "seq-queue",
                "version": "0.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "dd90dd18485ee4ffaa3b5622d615436532de630c"
                    }
                ],
                "purl": "pkg:npm/seq-queue@0.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/seq-queue/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "seq-queue@0.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/serialize-javascript@5.0.1",
                "type": "library",
                "name": "serialize-javascript",
                "version": "5.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "8830965f9c90d6b879cdaca7eedb54d6780edc5c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/serialize-javascript@5.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/serialize-javascript/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "serialize-javascript@5.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/serve-static@2.2.0",
                "type": "library",
                "name": "serve-static",
                "version": "2.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f52a2ba658ba1f1a12062ae35090b57d8f0b7cee"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/serve-static@2.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/serve-static/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "serve-static@2.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/setprototypeof@1.2.0",
                "type": "library",
                "name": "setprototypeof",
                "version": "1.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "cbf2d7ae54256a7ab84245eb6d72c56f6a015453"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/setprototypeof@1.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/setprototypeof/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "setprototypeof@1.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/sha3@2.1.4",
                "type": "library",
                "name": "sha3",
                "version": "2.1.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1f9d94a7713a86009a0bbe7330caa09baef29f1c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/sha3@2.1.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/sha3/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sha3@2.1.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/shebang-command@2.0.0",
                "type": "library",
                "name": "shebang-command",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "2e2395a2e489846382e5cefdf011dcd7cacb82a5"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/shebang-command@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/shebang-command/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "shebang-command@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/shebang-regex@3.0.0",
                "type": "library",
                "name": "shebang-regex",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4c10640951d12ad418aa40c29b550fdfe3d2567a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/shebang-regex@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/shebang-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "shebang-regex@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/side-channel-list@1.0.0",
                "type": "library",
                "name": "side-channel-list",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "21ef767ddb85a996d52fe8f3f2b988044a02598f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/side-channel-list@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/side-channel-list/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "side-channel-list@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/side-channel-map@1.0.1",
                "type": "library",
                "name": "side-channel-map",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ab10f444db9aa7420125e321884ca7d765854b2f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/side-channel-map@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/side-channel-map/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "side-channel-map@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/side-channel-weakmap@1.0.2",
                "type": "library",
                "name": "side-channel-weakmap",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "cdb337908d19d32a79dc189c7bce63981babc35e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/side-channel-weakmap@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/side-channel-weakmap/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "side-channel-weakmap@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/side-channel@1.1.0",
                "type": "library",
                "name": "side-channel",
                "version": "1.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ca10dba255c81fa003499be7fca61829ec3c331e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/side-channel@1.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/side-channel/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "side-channel@1.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/signal-exit@4.1.0",
                "type": "library",
                "name": "signal-exit",
                "version": "4.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7ed47a76d7f1a65c0920cbf3d9f09c4adb9cc961"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/signal-exit@4.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/signal-exit/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "signal-exit@4.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/sigstore@3.1.0",
                "type": "library",
                "name": "sigstore",
                "version": "3.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5ff7286e5b49f2d5a02eab8c25e410d3a983c6db"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/sigstore@3.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/sigstore/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sigstore@3.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/smart-buffer@4.2.0",
                "type": "library",
                "name": "smart-buffer",
                "version": "4.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a9db89be9421029bd73baf8199042a08253a0b59"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/smart-buffer@4.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/smart-buffer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "smart-buffer@4.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/socks-proxy-agent@8.0.5",
                "type": "library",
                "name": "socks-proxy-agent",
                "version": "8.0.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a52f0cff949fd82f9e42d4214d2917964d7a9bdb"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/socks-proxy-agent@8.0.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/socks-proxy-agent/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "socks-proxy-agent@8.0.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/socks@2.8.5",
                "type": "library",
                "name": "socks",
                "version": "2.8.5",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "56262e47f0de318c60d2bd6ece74054a0542f3da"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/socks@2.8.5",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/socks/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "socks@2.8.5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/sparkles@2.1.0",
                "type": "library",
                "name": "sparkles",
                "version": "2.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9cdfe0be9211180fc52f3058587ba7ac1d0ba216"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/sparkles@2.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/sparkles/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sparkles@2.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/spdx-correct@3.2.0",
                "type": "library",
                "name": "spdx-correct",
                "version": "3.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a7a8f7467469c676a88934b972d08c03c9a4b7b4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/spdx-correct@3.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/spdx-correct/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "spdx-correct@3.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/spdx-exceptions@2.5.0",
                "type": "library",
                "name": "spdx-exceptions",
                "version": "2.5.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0f731ec5551fde840e6213e20cd9fbdc53468290"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "CC-BY-3.0"
                        }
                    }
                ],
                "purl": "pkg:npm/spdx-exceptions@2.5.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/spdx-exceptions/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "spdx-exceptions@2.5.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/spdx-expression-parse@4.0.0",
                "type": "library",
                "name": "spdx-expression-parse",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3f1b1059652d04327b6b0513080e242935399c30"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/spdx-expression-parse@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/spdx-expression-parse/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "spdx-expression-parse@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/spdx-license-ids@3.0.21",
                "type": "library",
                "name": "spdx-license-ids",
                "version": "3.0.21",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f265596e3d676b953051bb9d44f01f88fa55782a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "CC0-1.0"
                        }
                    }
                ],
                "purl": "pkg:npm/spdx-license-ids@3.0.21",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/spdx-license-ids/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "spdx-license-ids@3.0.21"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/sprintf-js@1.1.3",
                "type": "library",
                "name": "sprintf-js",
                "version": "1.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e99c21e49fb559d1b16f5662d44028a4e96b19a0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-3-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/sprintf-js@1.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/sprintf-js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sprintf-js@1.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/sqlstring@2.3.1",
                "type": "library",
                "name": "sqlstring",
                "version": "2.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e750dae3a5d36645ec8b454d02f6f00cd3f3926a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/sqlstring@2.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/sqlstring/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sqlstring@2.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/sqlstring@2.3.3",
                "type": "library",
                "name": "sqlstring",
                "version": "2.3.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "20b1ed5dd3b835b93339c273b779ddc556ca265b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/sqlstring@2.3.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mysql2/node_modules/sqlstring/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sqlstring@2.3.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/ssri@12.0.0",
                "type": "library",
                "name": "ssri",
                "version": "12.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "203926d505f969e44375e6a40942ce43ae490f44"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/ssri@12.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/ssri/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "ssri@12.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/statuses@2.0.1",
                "type": "library",
                "name": "statuses",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3328d9bfc82e4f981a1acd2f3f78c524bf85333c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/statuses@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/http-errors/node_modules/statuses/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "statuses@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/statuses@2.0.2",
                "type": "library",
                "name": "statuses",
                "version": "2.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7fcf010639ac286c47c517ea92d7ab13cbbee298"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/statuses@2.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/statuses/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "statuses@2.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/stream-composer@1.0.2",
                "type": "library",
                "name": "stream-composer",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c1cdfcf18ed379cb3f0d2400504d1795b2c4dc96"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/stream-composer@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/stream-composer/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "stream-composer@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/stream-exhaust@1.0.2",
                "type": "library",
                "name": "stream-exhaust",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "04c355c87ddbd7e6d4754621928cd955fcaa40b1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/stream-exhaust@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/stream-exhaust/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "stream-exhaust@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/streamx@2.22.0",
                "type": "library",
                "name": "streamx",
                "version": "2.22.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "8f41a70e034b35d69181f7a89853dc44a363dd91"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/streamx@2.22.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/streamx/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "streamx@2.22.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/string-width@2.1.1",
                "type": "library",
                "name": "string-width",
                "version": "2.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "1b26460d736e2cd59d75ff10cbdee5c483f6596f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/string-width@2.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/wide-align/node_modules/string-width/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "string-width@2.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/string_decoder@1.1.1",
                "type": "library",
                "name": "string_decoder",
                "version": "1.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "da598f24028fdd9f3801969161159c1bbeb2034c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/string_decoder@1.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/string_decoder/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "string_decoder@1.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/strip-ansi@4.0.0",
                "type": "library",
                "name": "strip-ansi",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9ce1d9cd5e0e83463c97e87ce10e25bbcc6f9e4a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/strip-ansi@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/wide-align/node_modules/strip-ansi/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "strip-ansi@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/strip-json-comments@3.1.1",
                "type": "library",
                "name": "strip-json-comments",
                "version": "3.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c928c94b3f0090067a272a4bfb7ae72d405f9d29"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/strip-json-comments@3.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/strip-json-comments/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "strip-json-comments@3.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/supports-color@10.0.0",
                "type": "library",
                "name": "supports-color",
                "version": "10.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7f763e4028a5bd4f3c676b9e672775f4f167e854"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/supports-color@10.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/supports-color/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "supports-color@10.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/supports-color@7.2.0",
                "type": "library",
                "name": "supports-color",
                "version": "7.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3c4abe10bd7383f277a3eac3ce43359fd92ad32e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/supports-color@7.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/supports-color/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "supports-color@7.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/supports-color@8.1.1",
                "type": "library",
                "name": "supports-color",
                "version": "8.1.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "22b13b67c217522b8bdad5579c2fa8c4e23df9f7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/supports-color@8.1.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/mocha/node_modules/supports-color/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "supports-color@8.1.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/supports-preserve-symlinks-flag@1.0.0",
                "type": "library",
                "name": "supports-preserve-symlinks-flag",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ca0c14a63df0bdf41422d5e8c79d38e214da561a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/supports-preserve-symlinks-flag@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/supports-preserve-symlinks-flag/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "supports-preserve-symlinks-flag@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/sver@1.8.4",
                "type": "library",
                "name": "sver",
                "version": "1.8.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "be425157b586f4247d69de0c78a1851350451091"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/sver@1.8.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/sver/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "sver@1.8.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/tar@6.2.1",
                "type": "library",
                "name": "tar",
                "version": "6.2.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "8b9fbec9a68117d7405c65ab254846287a63a494"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/tar@6.2.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tar/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tar@6.2.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/teex@1.0.1",
                "type": "library",
                "name": "teex",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "27a92dc87c1417eb0dd6f3600ad5c0e81e65043b"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/teex@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/teex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "teex@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/text-decoder@1.2.3",
                "type": "library",
                "name": "text-decoder",
                "version": "1.2.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "319ed5f50d8dc338efff5998d6432ade7e815040"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/text-decoder@1.2.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/text-decoder/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "text-decoder@1.2.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/text-table@0.2.0",
                "type": "library",
                "name": "text-table",
                "version": "0.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f63faee888ad065881dff49fc3e3de8ac57b2ae2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/text-table@0.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/text-table/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "text-table@0.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/tiny-relative-date@1.3.0",
                "type": "library",
                "name": "tiny-relative-date",
                "version": "1.3.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "07c10ed6a09d36ada94f639b94e9793485d9d6e1"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/tiny-relative-date@1.3.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tiny-relative-date/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tiny-relative-date@1.3.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/tinyglobby@0.2.14",
                "type": "library",
                "name": "tinyglobby",
                "version": "0.2.14",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9d1b712749d1ba4fdbc6a5486b0c418ef2715c63"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/tinyglobby@0.2.14",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tinyglobby/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tinyglobby@0.2.14"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/to-regex-range@5.0.1",
                "type": "library",
                "name": "to-regex-range",
                "version": "5.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c16a607925055788aae94f1123fa0d769af161bf"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/to-regex-range@5.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/to-regex-range/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "to-regex-range@5.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/to-through@3.0.0",
                "type": "library",
                "name": "to-through",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "4f17b40c0d082aa493fb5cd577cf8fffe0920e37"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/to-through@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/to-through/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "to-through@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/toidentifier@1.0.1",
                "type": "library",
                "name": "toidentifier",
                "version": "1.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "e8fe1d02a381b71a33e41588ae26746d34fa4903"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/toidentifier@1.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/toidentifier/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "toidentifier@1.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/treeverse@3.0.0",
                "type": "library",
                "name": "treeverse",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "83653dcf5b0c581f485febcbeb9152176632bed0"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/treeverse@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/treeverse/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "treeverse@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/tuf-js@3.0.1",
                "type": "library",
                "name": "tuf-js",
                "version": "3.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "edb2de270442222c50efe4d39b1b6761289383b3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/tuf-js@3.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/tuf-js/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "tuf-js@3.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/type-is@2.0.1",
                "type": "library",
                "name": "type-is",
                "version": "2.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3b97d6d03b601908f4819c94f6be9ab10ab4962e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/type-is@2.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/type-is/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "type-is@2.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/unc-path-regex@0.1.2",
                "type": "library",
                "name": "unc-path-regex",
                "version": "0.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5e66f1c422e03aee88f570bd73d7498db87bc036"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/unc-path-regex@0.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/unc-path-regex/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "unc-path-regex@0.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/undertaker-registry@2.0.0",
                "type": "library",
                "name": "undertaker-registry",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9884c34f0b6febbd17de0e9fcb03eac2c5a1dd04"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/undertaker-registry@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/undertaker-registry/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "undertaker-registry@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/undertaker@2.0.0",
                "type": "library",
                "name": "undertaker",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6187d474736e6f04a8917b17e300e5eebfda032e"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/undertaker@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/undertaker/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "undertaker@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/unique-filename@4.0.0",
                "type": "library",
                "name": "unique-filename",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "7ab7ef7fed369084e86d0800e1861115c3ff1bcd"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/unique-filename@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/unique-filename/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "unique-filename@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/unique-slug@5.0.0",
                "type": "library",
                "name": "unique-slug",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6bfb7b3e3ad92a208217828bc65a87369999d06f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/unique-slug@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/unique-slug/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "unique-slug@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/unpipe@1.0.0",
                "type": "library",
                "name": "unpipe",
                "version": "1.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f67f2d17a18c3ded93c9423903df8e6678f4e416"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/unpipe@1.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/unpipe/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "unpipe@1.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/v8flags@4.0.1",
                "type": "library",
                "name": "v8flags",
                "version": "4.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fe85f10e486cd4e1d7ee177facfe769a897c033a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/v8flags@4.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/v8flags/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "v8flags@4.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/validate-npm-package-license@3.0.4",
                "type": "library",
                "name": "validate-npm-package-license",
                "version": "3.0.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a938b65349aed1eb3852d98dc1a8431209faf99f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/validate-npm-package-license@3.0.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/validate-npm-package-license/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "validate-npm-package-license@3.0.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/validate-npm-package-name@6.0.1",
                "type": "library",
                "name": "validate-npm-package-name",
                "version": "6.0.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6a29c89c925f53634f333c34c57ff3b9b1e3f190"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/validate-npm-package-name@6.0.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/validate-npm-package-name/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "validate-npm-package-name@6.0.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/validator@13.15.0",
                "type": "library",
                "name": "validator",
                "version": "13.15.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "f7f63154defbe8500f103f71d8190bc956d86b58"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/validator@13.15.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/validator/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "validator@13.15.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/value-or-function@4.0.0",
                "type": "library",
                "name": "value-or-function",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3c2e8101011ba0c837b10e3f012d0f0ba744e825"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/value-or-function@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/value-or-function/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "value-or-function@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/vary@1.1.2",
                "type": "library",
                "name": "vary",
                "version": "1.1.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "82f740e2254b786f7a3a39a762d4d0fc6ec7b008"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/vary@1.1.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/vary/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "vary@1.1.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/vinyl-contents@2.0.0",
                "type": "library",
                "name": "vinyl-contents",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "0ececd8bf2fd4498cd05747ccc4269a4b8eec17a"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/vinyl-contents@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/vinyl-contents/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "vinyl-contents@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/vinyl-fs@4.0.0",
                "type": "library",
                "name": "vinyl-fs",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d9876fccaced1a32d3e7aba66e074153bf4c7954"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/vinyl-fs@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/vinyl-fs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "vinyl-fs@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/vinyl-sourcemap@2.0.0",
                "type": "library",
                "name": "vinyl-sourcemap",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ea0b091737f212e7918626c9bde3b348987b0df3"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/vinyl-sourcemap@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/vinyl-sourcemap/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "vinyl-sourcemap@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/vinyl@3.0.0",
                "type": "library",
                "name": "vinyl",
                "version": "3.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "be8ae4777d03d5bb2411fc2d88c45a05ee26737c"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/vinyl@3.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/vinyl/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "vinyl@3.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/walk-up-path@4.0.0",
                "type": "library",
                "name": "walk-up-path",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "5d1d771c0f7a60316cd0d039f38a9e6ce3b08b44"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/walk-up-path@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/walk-up-path/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "walk-up-path@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/which@1.3.1",
                "type": "library",
                "name": "which",
                "version": "1.3.1",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "6aa908dedff8d74053157a8a908db304252c8549"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/which@1.3.1",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/global-prefix/node_modules/which/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "which@1.3.1"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/which@5.0.0",
                "type": "library",
                "name": "which",
                "version": "5.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "519f542417e96085fb8a1ad8d7a0f913155b5e56"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/which@5.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/which/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "which@5.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/wide-align@1.1.3",
                "type": "library",
                "name": "wide-align",
                "version": "1.1.3",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3a42d35dea67d3af17d76c4232cf1f56532b1732"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/wide-align@1.1.3",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/wide-align/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "wide-align@1.1.3"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/workerpool@6.1.0",
                "type": "library",
                "name": "workerpool",
                "version": "6.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "9cf5fabc1a7744b815235f7b4fa1a3a467f95193"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "Apache-2.0"
                        }
                    }
                ],
                "purl": "pkg:npm/workerpool@6.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/workerpool/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "workerpool@6.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/wrap-ansi@8.1.0",
                "type": "library",
                "name": "wrap-ansi",
                "version": "8.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "c14f366cb2c71b662f7edb2dcf7370a513fc641f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/wrap-ansi@8.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/wrap-ansi/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "wrap-ansi@8.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/wrappy@1.0.2",
                "type": "library",
                "name": "wrappy",
                "version": "1.0.2",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "156d61004996b07079664753e7b5c415b99e4c89"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/wrappy@1.0.2",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/wrappy/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "wrappy@1.0.2"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/write-file-atomic@6.0.0",
                "type": "library",
                "name": "write-file-atomic",
                "version": "6.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "46f2584772ee8056a9e471fdec44718b3645c7f4"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/write-file-atomic@6.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/write-file-atomic/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "write-file-atomic@6.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/y18n@5.0.8",
                "type": "library",
                "name": "y18n",
                "version": "5.0.8",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a9fc56f4534ab6730f65e8b7a9fad1cceaab6ae7"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/y18n@5.0.8",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/y18n/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "y18n@5.0.8"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/yallist@4.0.0",
                "type": "library",
                "name": "yallist",
                "version": "4.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "d6a16b480cbd582f969b3d0ed89a157316268d10"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/yallist@4.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "usr/local/lib/node_modules/npm/node_modules/yallist/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:f38904b79958c72a25df044bb9e0f183c103869adbb9ebf5cf59fc23527c2e8a"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yallist@4.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/yargs-parser@20.2.4",
                "type": "library",
                "name": "yargs-parser",
                "version": "20.2.4",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "cdaef75f74fb6c74267173c7fa0187d37a66fa46"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "ISC"
                        }
                    }
                ],
                "purl": "pkg:npm/yargs-parser@20.2.4",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/yargs-parser/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yargs-parser@20.2.4"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/yargs-unparser@2.0.0",
                "type": "library",
                "name": "yargs-unparser",
                "version": "2.0.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "3b7fec6fb8e805b01e4eccdc7019d9876b45f314"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/yargs-unparser@2.0.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/yargs-unparser/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yargs-unparser@2.0.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/yargs@16.2.0",
                "type": "library",
                "name": "yargs",
                "version": "16.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "344af2013c16dc7f0bb4245a089fbac8fc29f6f2"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/yargs@16.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/yargs/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yargs@16.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/yarn@1.22.22",
                "type": "library",
                "name": "yarn",
                "version": "1.22.22",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "ef9669a851d8c73562772a3a26268a6a081b431f"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "BSD-2-Clause"
                        }
                    }
                ],
                "purl": "pkg:npm/yarn@1.22.22",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "opt/yarn-v1.22.22/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:fa6519b03a28b75d116628788d6c69ca3ef4b516c80c3a8bacbfec4a9865a1f5"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yarn@1.22.22"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/yocto-queue@0.1.0",
                "type": "library",
                "name": "yocto-queue",
                "version": "0.1.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "a3a0eebafcf830aea1d1f575e7d9e179105d1579"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/yocto-queue@0.1.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/yocto-queue/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yocto-queue@0.1.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            },
            {
                "bom-ref": "pkg:npm/yoctodelay@1.2.0",
                "type": "library",
                "name": "yoctodelay",
                "version": "1.2.0",
                "hashes": [
                    {
                        "alg": "SHA-1",
                        "content": "fff8d77dcbdf171d9da66f1793206c33ede3d156"
                    }
                ],
                "licenses": [
                    {
                        "license": {
                            "name": "MIT"
                        }
                    }
                ],
                "purl": "pkg:npm/yoctodelay@1.2.0",
                "properties": [
                    {
                        "name": "aquasecurity:trivy:FilePath",
                        "value": "app/node_modules/yoctodelay/package.json"
                    },
                    {
                        "name": "aquasecurity:trivy:LayerDiffID",
                        "value": "sha256:08a2e006fe86fceac0d2fbeaa6072d7f9952000f315ab0da2329c861353795ff"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgID",
                        "value": "yoctodelay@1.2.0"
                    },
                    {
                        "name": "aquasecurity:trivy:PkgType",
                        "value": "node-pkg"
                    }
                ]
            }
        ],
        "dependencies": [
            {
                "ref": "02724976-0c89-486d-a3e3-5616fcc468c2",
                "dependsOn": []
            },
            {
                "ref": "066acbcc-202f-42fc-bc2a-48742d276e2b",
                "dependsOn": []
            },
            {
                "ref": "06db1e21-2df7-42f4-acb0-318b04b99041",
                "dependsOn": []
            },
            {
                "ref": "081cd0c6-8a3f-4ac3-bbb3-1a382ef20041",
                "dependsOn": []
            },
            {
                "ref": "08e55d08-8e00-4c23-aa77-4242d1855daf",
                "dependsOn": []
            },
            {
                "ref": "097ae652-3bc0-4999-9666-5406f8036e4b",
                "dependsOn": []
            },
            {
                "ref": "12eb7782-45b2-4169-a0af-4ac187c3a241",
                "dependsOn": []
            },
            {
                "ref": "19cb2c23-c836-4a3f-ac7f-e26d6df02fa8",
                "dependsOn": []
            },
            {
                "ref": "1b7c20aa-5590-47f0-ad5e-c4671073a434",
                "dependsOn": []
            },
            {
                "ref": "20cc1758-794f-47e9-8c23-49c767fbb47b",
                "dependsOn": []
            },
            {
                "ref": "21bd6554-71dd-4197-9ca8-926aa886f2bf",
                "dependsOn": []
            },
            {
                "ref": "2365f5c7-ecdc-418a-ba87-c2caa80ac506",
                "dependsOn": []
            },
            {
                "ref": "23b0da91-5dd6-4136-814b-f7f271cc0b46",
                "dependsOn": []
            },
            {
                "ref": "25b8849b-ddb1-4475-aa8c-ce1924bf4478",
                "dependsOn": []
            },
            {
                "ref": "271c82eb-e33e-46bb-94bf-1d299d8a55f1",
                "dependsOn": []
            },
            {
                "ref": "2d3bde84-96c1-4340-bc86-ed071216b54f",
                "dependsOn": []
            },
            {
                "ref": "40b9d88e-4dd3-4d1a-85d6-6685210a5b00",
                "dependsOn": []
            },
            {
                "ref": "47dc0a15-0bd3-4423-9f7d-906d79af6480",
                "dependsOn": []
            },
            {
                "ref": "48af7da3-bb91-4ebb-90e6-a2ae7e9f715a",
                "dependsOn": []
            },
            {
                "ref": "4b2619b4-340d-414d-b439-d64fbf97339d",
                "dependsOn": []
            },
            {
                "ref": "4bcfbefb-09bd-4b01-87f6-cd7dcc6eac6c",
                "dependsOn": []
            },
            {
                "ref": "5158c049-2575-4685-89c7-a37da60226f3",
                "dependsOn": []
            },
            {
                "ref": "5243cb35-4e43-45a8-b3b8-875baec49f42",
                "dependsOn": []
            },
            {
                "ref": "57ff8f0d-5892-4c91-8ea5-5790435c7d60",
                "dependsOn": []
            },
            {
                "ref": "583ced29-c2d6-4d7c-9524-b17cb5ec6b73",
                "dependsOn": [
                    "pkg:deb/debian/apt@2.6.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/automake@1.16.5-1.3?arch=all&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/base-passwd@3.6.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/bash@5.2.15-2%2Bb8?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/bsdutils@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/ca-certificates@20230311%2Bdeb12u1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/coreutils@9.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/curl@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/dash@0.5.12-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/default-libmysqlclient-dev@1.1.0?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/diffutils@3.8-4?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/dpkg-dev@1.21.22?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/e2fsprogs@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/findutils@4.9.0-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/g%2B%2B@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                    "pkg:deb/debian/git@2.39.5-0%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/gnupg@2.2.40-1.1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/grep@3.8-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gzip@1.12-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/hostname@3.23%2Bnmu1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/imagemagick@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libacl1@2.3.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libattr1@2.5.1-4?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libc-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcurl4-openssl-dev@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdb-dev@5.3.2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-dev@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libext2fs2@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdbm-dev@1.23-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp-dev@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libkrb5-dev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmagickcore-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickwand-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmaxminddb-dev@1.7.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncurses5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncursesw5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpam-modules-bin@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpam-runtime@1.5.2-6%2Bdeb12u1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libpq-dev@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libreadline-dev@8.2-1.3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsqlite3-dev@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libss2@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtool@2.4.7-7~deb12u1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libxslt1-dev@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libyaml-dev@0.2.5-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/login@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/mawk@1.3.4.20200120-3.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/mercurial@6.3.2-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/mount@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/ncurses-base@6.4-4?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/netbase@6.4?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/openssh-client@9.2p1-2%2Bdeb12u6?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/procps@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/python3-minimal@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/sed@4.9-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/sq@0.27.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/subversion@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/sysvinit-utils@3.06-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/tzdata@2025b-0%2Bdeb12u1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/unzip@6.0-28?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/util-linux@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/wget@1.21.3-1%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "6001ec0b-7632-43d7-9eac-3594ad3b1e82",
                "dependsOn": []
            },
            {
                "ref": "60ea434f-fda8-45cc-96a6-d841caf3e131",
                "dependsOn": []
            },
            {
                "ref": "6532ef7f-4f94-4a0d-9d25-931d8240944e",
                "dependsOn": []
            },
            {
                "ref": "6762d01a-e47c-44b5-8aae-a34e1ab97050",
                "dependsOn": []
            },
            {
                "ref": "6acf3674-5bd7-4277-932b-3d57a23bf220",
                "dependsOn": []
            },
            {
                "ref": "7316dc63-c246-4d32-8929-56694f909c74",
                "dependsOn": []
            },
            {
                "ref": "76aa4e32-78f5-4cea-ba35-9991d49e6483",
                "dependsOn": []
            },
            {
                "ref": "78714f2e-a747-4b02-b202-8d1b270f9589",
                "dependsOn": []
            },
            {
                "ref": "7883efdc-d385-46cb-acf4-efbc347a8cb4",
                "dependsOn": []
            },
            {
                "ref": "7cc9eda0-db80-4682-b701-e05e853ee76e",
                "dependsOn": []
            },
            {
                "ref": "80396818-976a-4a0f-a6f0-2dd3593f5a23",
                "dependsOn": []
            },
            {
                "ref": "8acbbeaa-de7e-448a-a2bc-ab9fe7694d51",
                "dependsOn": []
            },
            {
                "ref": "8b7422b4-8cfb-4d46-9e74-3c44c53891de",
                "dependsOn": []
            },
            {
                "ref": "92824453-507e-4c55-aa96-3a9078b23389",
                "dependsOn": []
            },
            {
                "ref": "9371f87f-c21f-4f70-ab20-a779232f12d7",
                "dependsOn": []
            },
            {
                "ref": "98872e38-8c0c-4621-a28d-9def88cc73c6",
                "dependsOn": []
            },
            {
                "ref": "992171de-0b7e-46be-a402-1a4b0c73c4c1",
                "dependsOn": []
            },
            {
                "ref": "9ab393c4-fbe0-45b8-ac94-fc29ea68de12",
                "dependsOn": []
            },
            {
                "ref": "a937a9d3-b2bf-4d5e-a76e-ad151c5762c8",
                "dependsOn": []
            },
            {
                "ref": "aaeb7b53-e277-485c-8d5b-ef3a12ffc59e",
                "dependsOn": []
            },
            {
                "ref": "af2865d9-8f3a-4bd8-96bd-bb405693e2d8",
                "dependsOn": []
            },
            {
                "ref": "b0223353-c6f6-4b03-823f-d2d463c3f86a",
                "dependsOn": []
            },
            {
                "ref": "b30a2b3e-3d90-4284-bd96-f2ed4f95cc04",
                "dependsOn": []
            },
            {
                "ref": "b74d7e81-c924-4f29-a97a-e7850118918b",
                "dependsOn": []
            },
            {
                "ref": "b83ec9dd-33ca-4b68-a02c-e96154d7d0aa",
                "dependsOn": []
            },
            {
                "ref": "b9f9731f-8a45-4d75-850b-a23cc023a446",
                "dependsOn": []
            },
            {
                "ref": "bb1ac690-b144-427e-8894-77e6afdf17cb",
                "dependsOn": []
            },
            {
                "ref": "bb347fb4-fed1-494f-b89b-0d0d331ace14",
                "dependsOn": []
            },
            {
                "ref": "bce24e18-1dc7-48fb-907d-fb30502ab0b3",
                "dependsOn": []
            },
            {
                "ref": "bd197568-4e3e-4a08-83a7-072914f5130d",
                "dependsOn": []
            },
            {
                "ref": "be92c5f6-466b-4649-bc8d-87739cca5d83",
                "dependsOn": []
            },
            {
                "ref": "c261f2e1-8e21-4445-868a-e80f3ff13222",
                "dependsOn": []
            },
            {
                "ref": "c278a423-02f3-4fbe-9c23-4357d615d389",
                "dependsOn": []
            },
            {
                "ref": "c64b49e7-961f-4ab5-8ef2-28fd8e755489",
                "dependsOn": []
            },
            {
                "ref": "d04c3303-e2b3-4e73-a943-f4f269412a8c",
                "dependsOn": []
            },
            {
                "ref": "d06f2224-ed86-4b35-bda8-86b6bcf1ad63",
                "dependsOn": []
            },
            {
                "ref": "d306c067-0c04-4c37-a3ac-98429ed8d17d",
                "dependsOn": []
            },
            {
                "ref": "d691211e-1aa3-4aa2-ade5-0e3ccbbbc64d",
                "dependsOn": []
            },
            {
                "ref": "d965c9e6-eebf-4ebb-a8b2-73f139fd5699",
                "dependsOn": []
            },
            {
                "ref": "ddecb881-2ff7-4825-8568-ef6e5114fef4",
                "dependsOn": []
            },
            {
                "ref": "debcff8e-fd4f-496e-94dc-b326f9d3fb04",
                "dependsOn": []
            },
            {
                "ref": "e43b57b2-5ec4-46c3-9929-9f9204b9b2c1",
                "dependsOn": []
            },
            {
                "ref": "e5ec64b6-f5d9-49d1-b91a-6e552c68ec06",
                "dependsOn": []
            },
            {
                "ref": "ebf503a9-5f91-40e5-8db8-15e1421d8737",
                "dependsOn": []
            },
            {
                "ref": "efc54036-bd43-4ce5-98e9-1b411ae6ea08",
                "dependsOn": []
            },
            {
                "ref": "f28cb214-8017-4fa7-b514-5d401ff92adc",
                "dependsOn": []
            },
            {
                "ref": "f769a5e2-d5b5-4519-b0ea-bc64d3da391a",
                "dependsOn": []
            },
            {
                "ref": "fa758864-5a82-4563-8e39-3bc5f439b37b",
                "dependsOn": []
            },
            {
                "ref": "fa7be9e3-d7f7-4af3-bc76-b94886a616ef",
                "dependsOn": []
            },
            {
                "ref": "ffc21f4e-d8f1-4829-b77a-9328445d6d7f",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/adduser@3.134?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/passwd@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/apt@2.6.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/adduser@3.134?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/debian-archive-keyring@2023.3%2Bdeb12u2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/gpgv@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libapt-pkg6.0@2.6.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libseccomp2@2.5.4-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsystemd0@252.38-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/autoconf@2.71-3?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debianutils@5.7-0.5~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/m4@1.4.19-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/perl@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/automake@1.16.5-1.3?arch=all&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/autoconf@2.71-3?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/autotools-dev@20220109.1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/autotools-dev@20220109.1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/base-files@12.4%2Bdeb12u11?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/base-passwd@3.6.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdebconfclient0@0.270?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/bash@5.2.15-2%2Bb8?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/base-files@12.4%2Bdeb12u11?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/debianutils@5.7-0.5~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/binutils-common@2.40-2?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/binutils-x86-64-linux-gnu@2.40-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/binutils-common@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libbinutils@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libctf-nobfd0@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libctf0@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgprofng0@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjansson4@2.14-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/binutils@2.40-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/binutils-common@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/binutils-x86-64-linux-gnu@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libbinutils@2.40-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/bsdutils@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/bzip2@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/ca-certificates@20230311%2Bdeb12u1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/openssl@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/comerr-dev@2.1-1.47.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/coreutils@9.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/cpp-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libisl23@0.25-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmpc3@1.3.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmpfr6@4.2.0-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/cpp@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "dependsOn": [
                    "pkg:deb/debian/cpp-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/curl@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcurl4@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/dash@0.5.12-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debianutils@5.7-0.5~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/debian-archive-keyring@2023.3%2Bdeb12u2?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/debianutils@5.7-0.5~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/default-libmysqlclient-dev@1.1.0?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libmariadb-dev-compat@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/diffutils@3.8-4?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/dirmngr@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/adduser@3.134?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/gpgconf@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/init-system-helpers@1.65.2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libksba8@1.6.3-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libldap-2.5-0@2.5.13%2Bdfsg-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnpth0@1.6-3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/dpkg-dev@1.21.22?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/binutils@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/bzip2@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdpkg-perl@1.21.22?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/make@4.3-4.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/patch@2.7.6-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/tar@1.34%2Bdfsg-1.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/xz-utils@5.4.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/tar@1.34%2Bdfsg-1.2%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/e2fsprogs@1.47.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/logsave@1.47.0-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/file@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmagic1@5.44-3?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/findutils@4.9.0-4?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/fontconfig-config@2.14.1-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/fonts-dejavu-core@2.37-6?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/fontconfig@2.14.1-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/fontconfig-config@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/fonts-dejavu-core@2.37-6?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/g%2B%2B-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gcc-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libisl23@0.25-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmpc3@1.3.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmpfr6@4.2.0-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/g%2B%2B@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "dependsOn": [
                    "pkg:deb/debian/cpp@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                    "pkg:deb/debian/g%2B%2B-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gcc-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gcc@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4"
                ]
            },
            {
                "ref": "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/gcc-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/binutils@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/cpp-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcc1-0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libisl23@0.25-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmpc3@1.3.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmpfr6@4.2.0-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/gcc@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                "dependsOn": [
                    "pkg:deb/debian/cpp@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                    "pkg:deb/debian/gcc-12@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gir1.2-freedesktop@1.74.0-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gir1.2-glib-2.0@1.74.0-3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gir1.2-gdkpixbuf-2.0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gir1.2-glib-2.0@1.74.0-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gir1.2-glib-2.0@1.74.0-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libgirepository-1.0-1@1.74.0-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gir1.2-rsvg-2.0@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gir1.2-freedesktop@1.74.0-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gir1.2-gdkpixbuf-2.0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gir1.2-glib-2.0@1.74.0-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/librsvg2-2@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/git-man@2.39.5-0%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/git@2.39.5-0%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/git-man@2.39.5-0%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcurl3-gnutls@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liberror-perl@0.17029-2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/perl@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/gnupg-l10n@2.2.40-1.1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/gnupg-utils@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libksba8@1.6.3-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/gnupg@2.2.40-1.1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dirmngr@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gnupg-l10n@2.2.40-1.1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/gnupg-utils@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpg-agent@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpg-wks-client@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpg-wks-server@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpg@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpgsm@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpgv@2.2.40-1.1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gpg-agent@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gpgconf@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/init-system-helpers@1.65.2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnpth0@1.6-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/pinentry-curses@1.2.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gpg-wks-client@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dirmngr@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpg-agent@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpg@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gpg-wks-server@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gpg-agent@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/gpg@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gpg@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gpgconf@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsqlite3-0@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/gpgconf@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gpgsm@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gpgconf@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libksba8@1.6.3-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gpgv@2.2.40-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/grep@3.8-5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/gzip@1.12-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/hicolor-icon-theme@0.17-2?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/hostname@3.23%2Bnmu1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/icu-devtools@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libicu72@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/imagemagick-6.q16@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/hicolor-icon-theme@0.17-2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmagickcore-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickwand-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8"
                ]
            },
            {
                "ref": "pkg:deb/debian/imagemagick@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6.q16@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8"
                ]
            },
            {
                "ref": "pkg:deb/debian/init-system-helpers@1.65.2?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/usr-is-merged@37~deb12u1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/krb5-multidev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/comerr-dev@2.1-1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssrpc4@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkadm5clnt-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkadm5srv-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libacl1@2.3.1-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libaom3@3.6.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libapr1@1.7.2-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libaprutil1@1.6.3-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libapr1@1.7.2-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdbm6@1.23-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libapt-pkg6.0@2.6.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblz4-1@1.9.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsystemd0@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libudev1@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxxhash0@0.8.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libasan8@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libatomic1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libattr1@2.5.1-4?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libaudit-common@3.0.9-1?arch=all&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libaudit-common@3.0.9-1?arch=all&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcap-ng0@0.8.3-1%2Bb3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libbinutils@2.40-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/binutils-common@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libblkid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libblkid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/uuid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libblkid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libbrotli-dev@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbrotli1@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libbrotli1@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libbsd0@0.11.7-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmd0@1.0.4-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libbz2-dev@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libc-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libc-dev-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc-dev-bin@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcrypt-dev@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libnsl-dev@1.3.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/linux-libc-dev@6.1.140-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/rpcsvc-proto@1.4.3-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcairo-gobject2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcairo-script-interpreter2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzo2-2@2.10-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcairo2-dev@1.16.0-7?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libcairo-gobject2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo-script-interpreter2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig-dev@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-dev@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpixman-1-dev@0.42.2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpng-dev@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsm-dev@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxcb-render0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb-shm0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb1-dev@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxext-dev@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxrender-dev@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpixman-1-0@0.42.2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxcb-render0@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb-shm0@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxext6@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxrender1@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcap-ng0@0.8.3-1%2Bb3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcap2@2.66-4%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcbor0.8@0.8.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcc1-0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcrypt-dev@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libctf-nobfd0@2.40-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libctf0@2.40-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbinutils@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcurl3-gnutls@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbrotli1@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libldap-2.5-0@2.5.13%2Bdfsg-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnghttp2-14@1.52.0-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpsl5@0.21.2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/librtmp1@2.4%2B20151223.gitfa8646d.1-2%2Bb2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssh2-1@1.10.0-3%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcurl4-openssl-dev@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libcurl4@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libcurl4@7.88.1-10%2Bdeb12u12?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbrotli1@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libldap-2.5-0@2.5.13%2Bdfsg-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnghttp2-14@1.52.0-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpsl5@0.21.2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/librtmp1@2.4%2B20151223.gitfa8646d.1-2%2Bb2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssh2-1@1.10.0-3%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdatrie1@0.2.13-2%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdav1d6@1.0.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdb-dev@5.3.2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libdb5.3-dev@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdb5.3-dev@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libde265-0@1.0.11-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdebconfclient0@0.270?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdeflate-dev@1.14-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libdeflate0@1.14-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdeflate0@1.14-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdjvulibre-dev@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libdjvulibre21@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdjvulibre-text@3.5.28-2?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libdjvulibre21@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdjvulibre-text@3.5.28-2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libdpkg-perl@1.21.22?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libedit2@3.1-20221030-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbsd0@0.11.7-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libelf1@0.188-2.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/liberror-perl@0.17029-2?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libevent-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libevent-core-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libevent-dev@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libevent-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-core-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-extra-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-openssl-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-pthreads-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libevent-extra-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-core-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libevent-openssl-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-core-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libevent-pthreads-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libevent-core-2.1-7@2.1.12-stable-8?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libexif-dev@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libexif12@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libexif12@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libexpat1-dev@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libext2fs2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libffi-dev@3.4.4-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfftw3-double3@3.3.10-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgomp1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfido2-1@1.12.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcbor0.8@0.8.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libudev1@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfontconfig-dev@2.14.1-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libexpat1-dev@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/pkg-config@1.8.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/uuid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/fontconfig-config@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfreetype-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbrotli-dev@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpng-dev@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfreetype6-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libfreetype-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbrotli1@1.0.9-2%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libfribidi0@1.0.8-2.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgcc-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libasan8@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libatomic1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgomp1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libitm1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblsan0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libquadmath0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtsan2@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libubsan1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgdbm-compat4@1.23-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdbm6@1.23-3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgdbm-dev@1.23-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdbm6@1.23-3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgdbm6@1.23-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdk-pixbuf2.0-common@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtiff6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/shared-mime-info@2.2-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgdk-pixbuf-2.0-dev@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gir1.2-gdkpixbuf-2.0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdk-pixbuf2.0-bin@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-dev@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libpng-dev@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtiff-dev@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/shared-mime-info@2.2-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgdk-pixbuf2.0-bin@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgdk-pixbuf2.0-common@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libgirepository-1.0-1@1.74.0-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmount1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libglib2.0-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libelf1@0.188-2.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-data@2.74.6-2%2Bdeb12u6?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libglib2.0-data@2.74.6-2%2Bdeb12u6?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libglib2.0-dev-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/python3-distutils@3.11.2-3?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libglib2.0-dev@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libffi-dev@3.4.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-dev-bin@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmount-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-dev@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1-dev@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/pkg-config@1.8.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgmp-dev@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libgmpxx4ldbl@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgmpxx4ldbl@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libhogweed6@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libp11-kit0@0.24.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtasn1-6@4.19.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libunistring2@1.0-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgomp1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgprofng0@2.40-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbinutils@2.40-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgraphite2-3@1.3.14-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libgssrpc4@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libharfbuzz0b@6.0.0%2Bdfsg-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgraphite2-3@1.3.14-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libheif1@1.15.1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libaom3@3.6.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdav1d6@1.0.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libde265-0@1.0.11-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx265-199@3.5-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libhogweed6@3.8.1-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libice-dev@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libice6@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libice6@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libbsd0@0.11.7-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/x11-common@7.7%2B23?arch=all&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libicu-dev@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/icu-devtools@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libicu72@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libicu72@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libunistring2@1.0-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libimath-3-1-29@3.1.6-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libimath-dev@3.1.6-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libimath-3-1-29@3.1.6-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libisl23@0.25-1.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2"
                ]
            },
            {
                "ref": "pkg:deb/debian/libitm1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libjansson4@2.14-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libjbig-dev@2.1-6.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libjbig0@2.1-6.1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libjbig0@2.1-6.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libjpeg-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libjpeg62-turbo-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libjpeg62-turbo-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libkadm5clnt-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssrpc4@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libkadm5srv-mit12@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssrpc4@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkdb5-10@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libkdb5-10@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssrpc4@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libkeyutils1@1.6.3-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libkrb5-3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libk5crypto3@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkeyutils1@1.6.3-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libkrb5-dev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/krb5-multidev@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libkrb5support0@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libksba8@1.6.3-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblcms2-2@2.14-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblcms2-dev@2.14-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/liblcms2-2@2.14-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libldap-2.5-0@2.5.13%2Bdfsg-5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsasl2-2@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblerc-dev@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/liblerc4@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblerc4@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblqr-1-0-dev@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/liblqr-1-0@0.4.2-2.1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblqr-1-0@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblsan0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libltdl-dev@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libltdl7@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libltdl7@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblz4-1@1.9.4-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblzma-dev@5.4.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/liblzo2-2@2.10-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagic-mgc@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libmagic1@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmagic-mgc@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickcore-6-arch-config@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickcore-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickcore-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickcore-6.q16-6-extra@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdjvulibre21@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmagickcore-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickwand-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libopenexr-3-1-30@3.1.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpango-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpangocairo-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwmflite-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickcore-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfftw3-double3@3.3.10-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgomp1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libheif1@1.15.1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjbig0@2.1-6.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/liblcms2-2@2.14-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblqr-1-0@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libltdl7@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libopenjp2-7@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtiff6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebpdemux2@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebpmux3@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxext6@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickcore-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-dev@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdjvulibre-dev@3.5.28-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libexif-dev@0.6.24-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/liblcms2-dev@2.14-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblqr-1-0-dev@0.4.2-2.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libltdl-dev@2.4.7-7~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmagickcore-6-arch-config@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickcore-6.q16-6-extra@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickcore-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libopenexr-dev@3.1.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libopenjp2-7-dev@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpng-dev@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/librsvg2-dev@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtiff-dev@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwmf-dev@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxext-dev@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxml2-dev@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxt-dev@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/pkg-config@1.8.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickcore-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickcore-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickwand-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickcore-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickwand-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgomp1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmagickcore-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickwand-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/libmagickcore-6.q16-6-extra@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickcore-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickwand-6-headers@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickwand-6.q16-6@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/pkg-config@1.8.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmagickwand-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                "dependsOn": [
                    "pkg:deb/debian/imagemagick-6-common@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=all&distro=debian-12.11&epoch=8",
                    "pkg:deb/debian/libmagickwand-6.q16-dev@6.9.11.60%2Bdfsg-1.6%2Bdeb12u3?arch=amd64&distro=debian-12.11&epoch=8"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmariadb-dev-compat@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libmariadb-dev@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmariadb-dev@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmariadb3@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libssl-dev@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmariadb3@10.11.11-0%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/mariadb-common@10.11.11-0%2Bdeb12u1?arch=all&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmaxminddb-dev@1.7.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libmaxminddb0@1.7.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmaxminddb0@1.7.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmd0@1.0.4-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmount-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libblkid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libmount1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1-dev@3.4-1%2Bb6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmount1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libblkid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmpc3@1.3.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libmpfr6@4.2.0-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libmpfr6@4.2.0-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2"
                ]
            },
            {
                "ref": "pkg:deb/debian/libncurses-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncurses6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncursesw6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/ncurses-bin@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libncurses5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libncurses-dev@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libncurses6@6.4-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libncursesw5-dev@6.4-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libncurses-dev@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libncursesw6@6.4-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libnghttp2-14@1.52.0-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libnpth0@1.6-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libnsl-dev@1.3.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libnsl2@1.3.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtirpc-dev@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libnsl2@1.3.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtirpc3@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libnuma1@2.0.16-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libopenexr-3-1-30@3.1.5-5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libimath-3-1-29@3.1.6-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libopenexr-dev@3.1.5-5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libimath-dev@3.1.6-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libopenexr-3-1-30@3.1.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libopenjp2-7-dev@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libopenjp2-7@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libopenjp2-7@2.5.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libp11-kit0@0.24.1-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpam-modules-bin@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libpam0g@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpam-modules@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libpam-runtime@1.5.2-6%2Bdeb12u1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libpam-modules@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpam0g@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpango-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/fontconfig@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfribidi0@1.0.8-2.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libharfbuzz0b@6.0.0%2Bdfsg-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libthai0@0.1.29-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpangocairo-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libharfbuzz0b@6.0.0%2Bdfsg-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpango-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpangoft2-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpangoft2-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfontconfig1@2.14.1-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libharfbuzz0b@6.0.0%2Bdfsg-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpango-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpcre2-16-0@10.42-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpcre2-32-0@10.42-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpcre2-dev@10.42-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpcre2-16-0@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-32-0@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-posix3@10.42-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpcre2-posix3@10.42-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libperl5.36@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdbm-compat4@1.23-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdbm6@1.23-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/perl-modules-5.36@5.36.0-7%2Bdeb12u2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpixman-1-0@0.42.2-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpixman-1-dev@0.42.2-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpixman-1-0@0.42.2-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpkgconf3@1.8.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpng-dev@1.6.39-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpq-dev@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpq5@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl-dev@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpq5@15.13-0%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libldap-2.5-0@2.5.13%2Bdfsg-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libproc2-0@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsystemd0@252.38-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpsl5@0.21.2-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libunistring2@1.0-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpthread-stubs0-dev@0.4-1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libpython3-stdlib@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpython3.11-stdlib@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpython3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libpython3.11-stdlib@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libffi8@3.4.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncursesw6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnsl2@1.3.0-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpython3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsqlite3-0@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtirpc3@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/media-types@10.0.0?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libquadmath0@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libreadline-dev@8.2-1.3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncurses-dev@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libreadline8@8.2-1.3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/readline-common@8.2-1.3?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/librsvg2-2@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo-gobject2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo2@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpango-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpangocairo-1.0-0@1.50.12%2Bds-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/librsvg2-common@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libgdk-pixbuf-2.0-0@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/librsvg2-2@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/librsvg2-dev@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gir1.2-rsvg-2.0@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcairo2-dev@1.16.0-7?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgdk-pixbuf-2.0-dev@2.42.10%2Bdfsg-1%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-dev@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/librsvg2-2@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/librsvg2-common@2.54.7%2Bdfsg-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/librtmp1@2.4%2B20151223.gitfa8646d.1-2%2Bb2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libhogweed6@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsasl2-2@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsasl2-modules-db@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsasl2-modules-db@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libseccomp2@2.5.4-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libselinux1-dev@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpcre2-dev@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsepol-dev@3.4-2.1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsemanage-common@3.4-1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libsemanage2@3.4-1%2Bb5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsemanage-common@3.4-1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libsepol2@3.4-2.1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsepol-dev@3.4-2.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libsepol2@3.4-2.1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsepol2@3.4-2.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libserf-1-1@1.3.9-11?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libapr1@1.7.2-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libaprutil1@1.6.3-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsm-dev@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libice-dev@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libsm6@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/x11proto-core-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsm6@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libice6@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsmartcols1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsqlite3-0@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsqlite3-dev@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libsqlite3-0@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libss2@1.47.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcom-err2@1.47.0-2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libssh2-1@1.10.0-3%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libssl-dev@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libstdc%2B%2B-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-12-dev@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsvn1@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libapr1@1.7.2-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libaprutil1@1.6.3-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdb5.3@5.3.28%2Bdfsg2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblz4-1@1.9.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsasl2-2@2.1.28%2Bdfsg-10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libserf-1-1@1.3.9-11?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsqlite3-0@3.40.1-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libutf8proc2@2.8.0-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libsystemd0@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcap2@2.66-4%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblz4-1@1.9.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtasn1-6@4.19.0-2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libthai-data@0.1.29-1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libthai0@0.1.29-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdatrie1@0.2.13-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libthai-data@0.1.29-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtiff-dev@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdeflate-dev@1.14-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjbig-dev@2.1-6.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg-dev@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/liblerc-dev@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma-dev@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtiff6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtiffxx6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebp-dev@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd-dev@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtiff6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libdeflate0@1.14-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjbig0@2.1-6.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/liblerc4@4.0.0%2Bds-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtiffxx6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtiff6@4.5.0-6%2Bdeb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtirpc-common@1.3.3%2Bds-1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libtirpc-dev@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libtirpc3@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtirpc3@1.3.3%2Bds-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtirpc-common@1.3.3%2Bds-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtool@2.4.7-7~deb12u1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/autotools-dev@20220109.1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/cpp@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                    "pkg:deb/debian/file@5.44-3?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/gcc@12.2.0-3?arch=amd64&distro=debian-12.11&epoch=4",
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libtsan2@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libubsan1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/gcc-12-base@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libudev1@252.38-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libunistring2@1.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libutf8proc2@2.8.0-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libwebp-dev@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebpdemux2@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebpmux3@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libwebpdemux2@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libwebpmux3@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwebp7@1.2.4-0.2%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libwmf-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfreetype6@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libjpeg62-turbo@2.1.5-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libpng16-16@1.6.39-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwmflite-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libwmf-dev@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libfreetype-dev@2.12.1%2Bdfsg-5%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwmf-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libwmflite-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/x11proto-core-dev@2022.1-1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libwmflite-0.2-7@0.2.12-5.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-data@1.8.4-2%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libx11-data@1.8.4-2%2Bdeb12u2?arch=all&distro=debian-12.11&epoch=2",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxau-dev@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libxcb1-dev@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxdmcp-dev@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/xtrans-dev@1.4.0-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libx265-199@3.5-2%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnuma1@2.0.16-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libstdc%2B%2B6@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxau-dev@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libxau6@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxau6@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxcb-render0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libxcb-render0@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb1-dev@1.15-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxcb-render0@1.15-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxcb-shm0-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libxcb-shm0@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb1-dev@1.15-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxcb-shm0@1.15-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxcb1-dev@1.15-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpthread-stubs0-dev@0.4-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxau-dev@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxdmcp-dev@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxcb1@1.15-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxau6@1.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libxdmcp6@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxdmcp-dev@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libxdmcp6@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/x11proto-core-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxdmcp6@1.1.2-3?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libbsd0@0.11.7-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxext-dev@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxext6@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxext6@1.3.4-1%2Bb1?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxml2-dev@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libicu-dev@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libicu72@72.1-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxrender-dev@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxrender1@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/x11proto-core-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxrender1@0.9.10-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxslt1-dev@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libxml2-dev@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxslt1.1@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxslt1.1@1.1.35-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcrypt20@1.10.1-3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxt-dev@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libsm-dev@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libx11-dev@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libxt6@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxt6@1.2.1-1.1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libice6@1.0.10-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libsm6@1.2.3-1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libx11-6@1.8.4-2%2Bdeb12u2?arch=amd64&distro=debian-12.11&epoch=2"
                ]
            },
            {
                "ref": "pkg:deb/debian/libxxhash0@0.8.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libyaml-0-2@0.2.5-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libyaml-dev@0.2.5-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libyaml-0-2@0.2.5-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libzstd-dev@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/libzstd1@1.5.4%2Bdfsg2-5?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/linux-libc-dev@6.1.140-1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/login@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/logsave@1.47.0-2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/m4@1.4.19-3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/make@4.3-4.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/mariadb-common@10.11.11-0%2Bdeb12u1?arch=all&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/mysql-common@5.8%2B1.1.0?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/mawk@1.3.4.20200120-3.1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/media-types@10.0.0?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/mercurial-common@6.3.2-1%2Bdeb12u1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/mercurial@6.3.2-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/mercurial-common@6.3.2-1%2Bdeb12u1?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/python3@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/ucf@3.0043%2Bnmu1%2Bdeb12u1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/mount@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/mysql-common@5.8%2B1.1.0?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/ncurses-base@6.4-4?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/ncurses-bin@6.4-4?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/netbase@6.4?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/openssh-client@9.2p1-2%2Bdeb12u6?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/adduser@3.134?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libedit2@3.1-20221030-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libfido2-1@1.12.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgssapi-krb5-2@1.20.1-2%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/passwd@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/openssl@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/passwd@4.13%2Bdfsg1-1%2Bdeb12u1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libcrypt1@4.4.33-2?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libpam-modules@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpam0g@1.5.2-6%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libselinux1@3.4-1%2Bb6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsemanage2@3.4-1%2Bb5?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/patch@2.7.6-7?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/perl-base@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/perl-modules-5.36@5.36.0-7%2Bdeb12u2?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/perl-base@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/perl@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libperl5.36@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/perl-base@5.36.0-7%2Bdeb12u2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/perl-modules-5.36@5.36.0-7%2Bdeb12u2?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/pinentry-curses@1.2.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libassuan0@2.5.5-5?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgpg-error0@1.46-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncursesw6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/pkg-config@1.8.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/pkgconf@1.8.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/pkgconf-bin@1.8.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpkgconf3@1.8.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/pkgconf@1.8.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/pkgconf-bin@1.8.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/procps@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                "dependsOn": [
                    "pkg:deb/debian/init-system-helpers@1.65.2?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libncursesw6@6.4-4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libproc2-0@4.0.2-3?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libtinfo6@6.4-4?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/python3-distutils@3.11.2-3?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/python3-lib2to3@3.11.2-3?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/python3-lib2to3@3.11.2-3?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/python3-minimal@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/python3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libexpat1@2.5.0-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpython3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/python3.11@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpython3.11-stdlib@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/media-types@10.0.0?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/python3.11-minimal@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/python3@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libpython3-stdlib@3.11.2-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/python3.11@3.11.2-6%2Bdeb12u6?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/readline-common@8.2-1.3?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/dpkg@1.21.22?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/rpcsvc-proto@1.4.3-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/sed@4.9-1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/sensible-utils@0.0.17%2Bnmu1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/shared-mime-info@2.2-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libglib2.0-0@2.74.6-2%2Bdeb12u6?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libxml2@2.9.14%2Bdfsg-1.3~deb12u2?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/sq@0.27.0-2%2Bb1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgcc-s1@12.2.0-14%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgmp10@6.2.1%2Bdfsg1-1.1?arch=amd64&distro=debian-12.11&epoch=2",
                    "pkg:deb/debian/libhogweed6@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libssl3@3.0.16-1~deb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/subversion@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libapr1@1.7.2-3%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libaprutil1@1.6.3-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsvn1@1.14.2-4%2Bdeb12u1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/sysvinit-utils@3.06-4?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/tar@1.34%2Bdfsg-1.2%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/tzdata@2025b-0%2Bdeb12u1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/ucf@3.0043%2Bnmu1%2Bdeb12u1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/debconf@1.5.82?arch=all&distro=debian-12.11",
                    "pkg:deb/debian/sensible-utils@0.0.17%2Bnmu1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/unzip@6.0-28?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libbz2-1.0@1.0.8-5%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/usr-is-merged@37~deb12u1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/util-linux-extra@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libaudit1@3.0.9-1?arch=amd64&distro=debian-12.11&epoch=1",
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libsmartcols1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/util-linux@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/util-linux-extra@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/uuid-dev@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/wget@1.21.3-1%2Bdeb12u1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libgnutls30@3.7.9-2%2Bdeb12u4?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libidn2-0@2.3.3-1%2Bb1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libnettle8@3.8.1-2?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpcre2-8-0@10.42-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libpsl5@0.21.2-1?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/libuuid1@2.38.1-5%2Bdeb12u3?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/x11-common@7.7%2B23?arch=all&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/x11proto-core-dev@2022.1-1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/x11proto-dev@2022.1-1?arch=all&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/xorg-sgml-doctools@1.11-1.1?arch=all&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/xorg-sgml-doctools@1.11-1.1?arch=all&distro=debian-12.11&epoch=1",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/xtrans-dev@1.4.0-1?arch=all&distro=debian-12.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:deb/debian/xz-utils@5.4.1-1?arch=amd64&distro=debian-12.11",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/liblzma5@5.4.1-1?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:deb/debian/zlib1g-dev@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6-dev@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11",
                    "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1"
                ]
            },
            {
                "ref": "pkg:deb/debian/zlib1g@1.2.13.dfsg-1?arch=amd64&distro=debian-12.11&epoch=1",
                "dependsOn": [
                    "pkg:deb/debian/libc6@2.36-9%2Bdeb12u10?arch=amd64&distro=debian-12.11"
                ]
            },
            {
                "ref": "pkg:npm/%40gulpjs/messages@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40gulpjs/to-absolute-glob@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40idena/vrf-js@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40isaacs/cliui@8.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40isaacs/fs-minipass@4.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40isaacs/string-locale-compare@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40my-scope/package-a@0.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40my-scope/package-b@0.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/agent@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/arborist@9.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/config@10.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/fs@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/git@6.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/installed-package-contents@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/map-workspaces@4.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/metavuln-calculator@9.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/name-from-folder@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/node-gyp@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/package-json@6.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/promise-spawn@8.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/query@4.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/redact@3.2.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40npmcli/run-script@9.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40pkgjs/parseargs@0.11.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40sigstore/bundle@3.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40sigstore/core@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40sigstore/protobuf-specs@0.4.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40sigstore/sign@3.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40sigstore/tuf@3.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40sigstore/verify@2.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40tufjs/canonical-json@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40tufjs/models@3.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/%40ungap/promise-all-settled@1.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/abbrev@3.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/accepts@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/agent-base@7.1.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ansi-colors@4.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ansi-colors@4.1.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ansi-regex@3.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ansi-styles@6.2.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/anymatch@3.1.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/aproba@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/archy@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/argparse@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/array-each@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/array-slice@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/async-done@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/async-settle@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/aws-ssl-profiles@1.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/b4a@1.6.7",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bach@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bare-events@2.5.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/base64-js@1.5.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/beeper@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bignumber.js@9.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bin-links@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/binary-extensions@2.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/binary-extensions@3.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bl@5.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bn.js@4.12.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bn.js@5.2.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/body-parser@2.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/brace-expansion@1.1.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/brace-expansion@2.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/braces@3.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/brorand@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/browser-stdout@1.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/buffer-equal-constant-time@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/buffer@6.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/bytes@3.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cacache@19.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/call-bind-apply-helpers@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/call-bound@1.0.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/camelcase@6.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/chalk@4.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/chalk@5.4.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/chokidar@3.5.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/chokidar@3.6.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/chownr@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ci-info@4.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cidr-regex@4.1.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cli-columns@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cliui@7.0.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/clone-stats@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/clone@2.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cmd-shim@7.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/common-ancestor-path@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/concat-map@0.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/content-disposition@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/content-type@1.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/convert-source-map@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cookie-parser@1.4.7",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cookie-signature@1.0.6",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cookie-signature@1.2.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cookie@0.7.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/copy-props@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/core-util-is@1.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/corepack@0.33.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cross-spawn@7.0.6",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/crypto-js@4.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/cssesc@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/debug@4.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/decamelize@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/denque@2.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/depd@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/detect-file@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/diff@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/diff@7.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/dotenv@16.5.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/dunder-proto@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/each-props@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/eastasianwidth@0.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ecdsa-sig-formatter@1.0.11",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ee-first@1.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/elliptic@6.6.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/encodeurl@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/encoding@0.1.13",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/end-of-stream@1.4.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/env-paths@2.2.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/err-code@2.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/es-define-property@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/es-errors@1.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/es-object-atoms@1.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/escalade@3.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/escape-html@1.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/escape-string-regexp@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/etag@1.8.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/excid-cicd-demo@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/expand-tilde@2.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/exponential-backoff@3.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/express@5.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/extend@3.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fast-fifo@1.3.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fast-levenshtein@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fastq@1.19.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fdir@6.4.6",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fill-range@7.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/finalhandler@2.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/find-up@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/findup-sync@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fined@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/flagged-respawn@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/flat@5.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/for-in@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/for-own@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/foreground-child@3.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/forwarded@0.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fresh@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fs-minipass@2.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fs-minipass@3.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fs-mkdirp-stream@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/fs.realpath@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/function-bind@1.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/generate-function@2.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/get-caller-file@2.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/get-intrinsic@1.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/get-proto@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/glob-parent@5.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/glob-parent@6.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/glob-stream@8.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/glob-watcher@6.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/glob@10.4.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/glob@7.1.6",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/global-modules@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/global-prefix@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/glogg@2.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/gopd@1.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/growl@1.10.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/gulp-cli@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/gulp@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/gulplog@2.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/has-flag@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/has-symbols@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/hash.js@1.1.7",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/hasown@2.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/he@1.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/hmac-drbg@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/homedir-polyfill@1.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/hosted-git-info@8.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/http-cache-semantics@4.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/http-errors@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/http-proxy-agent@7.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/https-proxy-agent@7.0.6",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ieee754@1.2.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ignore-walk@7.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/imurmurhash@0.1.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/inflight@1.0.6",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/inherits@2.0.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ini@1.3.8",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ini@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/init-package-json@8.2.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/interpret@3.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ip-address@9.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ip-regex@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ipaddr.js@1.9.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-absolute@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-binary-path@2.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-cidr@5.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-core-module@2.16.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-extglob@2.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-fullwidth-code-point@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-glob@4.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-negated-glob@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-number@7.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-plain-obj@2.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-plain-object@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-promise@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-property@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-relative@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-unc-path@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-valid-glob@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/is-windows@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/isarray@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/isexe@3.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/isobject@3.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/jackspeak@3.4.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/js-sha256@0.9.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/js-sha512@0.8.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/js-yaml@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/jsbn@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/json-parse-even-better-errors@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/json-stringify-nice@1.1.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/jsonparse@1.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/jsonwebtoken@9.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/just-diff-apply@5.5.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/just-diff@6.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/jwa@1.4.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/jws@3.2.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/last-run@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lead@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmaccess@10.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmdiff@8.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmexec@10.1.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmfund@7.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmorg@8.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmpack@9.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmpublish@11.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmsearch@9.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmteam@8.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/libnpmversion@8.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/liftoff@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ljharb-monorepo-symlink-test@0.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/locate-path@6.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lodash.includes@4.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lodash.isboolean@3.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lodash.isinteger@4.0.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lodash.isnumber@3.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lodash.isplainobject@4.0.6",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lodash.isstring@4.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lodash.once@4.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/log-symbols@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/long@5.3.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lru-cache@10.4.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lru-cache@7.18.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/lru.min@1.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/make-fetch-happen@14.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/map-cache@0.2.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/math-intrinsics@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/media-typer@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/merge-descriptors@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/micromatch@4.0.8",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mime-db@1.54.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mime-types@3.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minimalistic-assert@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minimalistic-crypto-utils@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minimatch@3.0.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minimatch@9.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minipass-collect@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minipass-fetch@4.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minipass-flush@1.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minipass-pipeline@1.2.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minipass-sized@1.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minipass@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minipass@7.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/minizlib@2.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mkdirp@1.0.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mocha@8.4.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/moment@2.30.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ms@2.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mute-stdout@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mute-stream@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mylib@0.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mysql2@3.14.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/mysql@2.18.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/named-placeholders@1.1.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/nanoid@3.1.20",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/node-gyp@11.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/nopt@8.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/normalize-package-data@7.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/normalize-path@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/now-and-later@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-audit-report@6.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-bundled@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-install-checks@7.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-normalize-package-bin@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-package-arg@12.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-packlist@10.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-pick-manifest@10.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-profile@11.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-registry-fetch@18.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm-user-validate@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/npm@11.4.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/object-inspect@1.13.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/object.defaults@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/object.pick@1.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/on-finished@2.4.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/once@1.4.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/p-limit@3.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/p-locate@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/p-map@7.0.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/package-json-from-dist@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/pacote@21.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/parse-conflict-json@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/parse-filepath@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/parse-passwd@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/parseurl@1.3.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-exists@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-is-absolute@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-key@3.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-parse@1.0.7",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-root-regex@0.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-root@0.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-scurry@1.11.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/path-to-regexp@8.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/picomatch@2.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/picomatch@4.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/postcss-selector-parser@7.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/proc-log@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/process-nextick-args@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/proggy@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/promise-all-reject-late@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/promise-call-limit@3.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/promise-retry@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/promzard@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/proxy-addr@2.0.7",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/qrcode-terminal@0.12.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/qs@6.14.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/randombytes@2.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/range-parser@1.2.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/raw-body@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/read-cmd-shim@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/read-package-json-fast@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/read@4.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/readable-stream@2.3.7",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/readable-stream@3.6.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/readdirp@3.5.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/readdirp@3.6.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/rechoir@0.8.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/remove-trailing-separator@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/replace-ext@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/replace-homedir@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/require-directory@2.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/resolve-dir@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/resolve-options@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/resolve@1.22.10",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/retry@0.12.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/reusify@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/router@2.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/safe-buffer@5.2.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/semver-greatest-satisfied-range@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/semver@6.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/semver@7.7.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/semver@7.7.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/send@1.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/seq-queue@0.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/serialize-javascript@5.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/serve-static@2.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/setprototypeof@1.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/sha3@2.1.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/shebang-command@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/shebang-regex@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/side-channel-list@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/side-channel-map@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/side-channel-weakmap@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/side-channel@1.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/signal-exit@4.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/sigstore@3.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/smart-buffer@4.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/socks-proxy-agent@8.0.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/socks@2.8.5",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/sparkles@2.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/spdx-correct@3.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/spdx-exceptions@2.5.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/spdx-expression-parse@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/spdx-license-ids@3.0.21",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/sprintf-js@1.1.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/sqlstring@2.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/sqlstring@2.3.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/ssri@12.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/statuses@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/statuses@2.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/stream-composer@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/stream-exhaust@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/streamx@2.22.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/string-width@2.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/string_decoder@1.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/strip-ansi@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/strip-json-comments@3.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/supports-color@10.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/supports-color@7.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/supports-color@8.1.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/supports-preserve-symlinks-flag@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/sver@1.8.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/tar@6.2.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/teex@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/text-decoder@1.2.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/text-table@0.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/tiny-relative-date@1.3.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/tinyglobby@0.2.14",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/to-regex-range@5.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/to-through@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/toidentifier@1.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/treeverse@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/tuf-js@3.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/type-is@2.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/unc-path-regex@0.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/undertaker-registry@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/undertaker@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/unique-filename@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/unique-slug@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/unpipe@1.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/v8flags@4.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/validate-npm-package-license@3.0.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/validate-npm-package-name@6.0.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/validator@13.15.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/value-or-function@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/vary@1.1.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/vinyl-contents@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/vinyl-fs@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/vinyl-sourcemap@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/vinyl@3.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/walk-up-path@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/which@1.3.1",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/which@5.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/wide-align@1.1.3",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/workerpool@6.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/wrap-ansi@8.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/wrappy@1.0.2",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/write-file-atomic@6.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/y18n@5.0.8",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/yallist@4.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/yargs-parser@20.2.4",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/yargs-unparser@2.0.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/yargs@16.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/yarn@1.22.22",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/yocto-queue@0.1.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:npm/yoctodelay@1.2.0",
                "dependsOn": []
            },
            {
                "ref": "pkg:oci/excid-cicd-demo-project@sha256%3A96c03ffde967ea6e3d62d1a985c76ab83f600e613076f87410ef1fad3c7d868d?arch=amd64&repository_url=registry.gitlab.com%2Flefosg%2Fexcid-cicd-demo-project",
                "dependsOn": [
                    "02724976-0c89-486d-a3e3-5616fcc468c2",
                    "066acbcc-202f-42fc-bc2a-48742d276e2b",
                    "06db1e21-2df7-42f4-acb0-318b04b99041",
                    "081cd0c6-8a3f-4ac3-bbb3-1a382ef20041",
                    "08e55d08-8e00-4c23-aa77-4242d1855daf",
                    "097ae652-3bc0-4999-9666-5406f8036e4b",
                    "12eb7782-45b2-4169-a0af-4ac187c3a241",
                    "19cb2c23-c836-4a3f-ac7f-e26d6df02fa8",
                    "1b7c20aa-5590-47f0-ad5e-c4671073a434",
                    "20cc1758-794f-47e9-8c23-49c767fbb47b",
                    "21bd6554-71dd-4197-9ca8-926aa886f2bf",
                    "2365f5c7-ecdc-418a-ba87-c2caa80ac506",
                    "23b0da91-5dd6-4136-814b-f7f271cc0b46",
                    "25b8849b-ddb1-4475-aa8c-ce1924bf4478",
                    "271c82eb-e33e-46bb-94bf-1d299d8a55f1",
                    "2d3bde84-96c1-4340-bc86-ed071216b54f",
                    "40b9d88e-4dd3-4d1a-85d6-6685210a5b00",
                    "47dc0a15-0bd3-4423-9f7d-906d79af6480",
                    "48af7da3-bb91-4ebb-90e6-a2ae7e9f715a",
                    "4b2619b4-340d-414d-b439-d64fbf97339d",
                    "4bcfbefb-09bd-4b01-87f6-cd7dcc6eac6c",
                    "5158c049-2575-4685-89c7-a37da60226f3",
                    "5243cb35-4e43-45a8-b3b8-875baec49f42",
                    "57ff8f0d-5892-4c91-8ea5-5790435c7d60",
                    "583ced29-c2d6-4d7c-9524-b17cb5ec6b73",
                    "6001ec0b-7632-43d7-9eac-3594ad3b1e82",
                    "60ea434f-fda8-45cc-96a6-d841caf3e131",
                    "6532ef7f-4f94-4a0d-9d25-931d8240944e",
                    "6762d01a-e47c-44b5-8aae-a34e1ab97050",
                    "6acf3674-5bd7-4277-932b-3d57a23bf220",
                    "7316dc63-c246-4d32-8929-56694f909c74",
                    "76aa4e32-78f5-4cea-ba35-9991d49e6483",
                    "78714f2e-a747-4b02-b202-8d1b270f9589",
                    "7883efdc-d385-46cb-acf4-efbc347a8cb4",
                    "7cc9eda0-db80-4682-b701-e05e853ee76e",
                    "80396818-976a-4a0f-a6f0-2dd3593f5a23",
                    "8acbbeaa-de7e-448a-a2bc-ab9fe7694d51",
                    "8b7422b4-8cfb-4d46-9e74-3c44c53891de",
                    "92824453-507e-4c55-aa96-3a9078b23389",
                    "9371f87f-c21f-4f70-ab20-a779232f12d7",
                    "98872e38-8c0c-4621-a28d-9def88cc73c6",
                    "992171de-0b7e-46be-a402-1a4b0c73c4c1",
                    "9ab393c4-fbe0-45b8-ac94-fc29ea68de12",
                    "a937a9d3-b2bf-4d5e-a76e-ad151c5762c8",
                    "aaeb7b53-e277-485c-8d5b-ef3a12ffc59e",
                    "af2865d9-8f3a-4bd8-96bd-bb405693e2d8",
                    "b0223353-c6f6-4b03-823f-d2d463c3f86a",
                    "b30a2b3e-3d90-4284-bd96-f2ed4f95cc04",
                    "b74d7e81-c924-4f29-a97a-e7850118918b",
                    "b83ec9dd-33ca-4b68-a02c-e96154d7d0aa",
                    "b9f9731f-8a45-4d75-850b-a23cc023a446",
                    "bb1ac690-b144-427e-8894-77e6afdf17cb",
                    "bb347fb4-fed1-494f-b89b-0d0d331ace14",
                    "bce24e18-1dc7-48fb-907d-fb30502ab0b3",
                    "bd197568-4e3e-4a08-83a7-072914f5130d",
                    "be92c5f6-466b-4649-bc8d-87739cca5d83",
                    "c261f2e1-8e21-4445-868a-e80f3ff13222",
                    "c278a423-02f3-4fbe-9c23-4357d615d389",
                    "c64b49e7-961f-4ab5-8ef2-28fd8e755489",
                    "d04c3303-e2b3-4e73-a943-f4f269412a8c",
                    "d06f2224-ed86-4b35-bda8-86b6bcf1ad63",
                    "d306c067-0c04-4c37-a3ac-98429ed8d17d",
                    "d691211e-1aa3-4aa2-ade5-0e3ccbbbc64d",
                    "d965c9e6-eebf-4ebb-a8b2-73f139fd5699",
                    "ddecb881-2ff7-4825-8568-ef6e5114fef4",
                    "debcff8e-fd4f-496e-94dc-b326f9d3fb04",
                    "e43b57b2-5ec4-46c3-9929-9f9204b9b2c1",
                    "e5ec64b6-f5d9-49d1-b91a-6e552c68ec06",
                    "ebf503a9-5f91-40e5-8db8-15e1421d8737",
                    "efc54036-bd43-4ce5-98e9-1b411ae6ea08",
                    "f28cb214-8017-4fa7-b514-5d401ff92adc",
                    "f769a5e2-d5b5-4519-b0ea-bc64d3da391a",
                    "fa758864-5a82-4563-8e39-3bc5f439b37b",
                    "fa7be9e3-d7f7-4af3-bc76-b94886a616ef",
                    "ffc21f4e-d8f1-4829-b77a-9328445d6d7f",
                    "pkg:npm/%40gulpjs/messages@1.1.0",
                    "pkg:npm/%40gulpjs/to-absolute-glob@4.0.0",
                    "pkg:npm/%40idena/vrf-js@1.0.1",
                    "pkg:npm/%40isaacs/cliui@8.0.2",
                    "pkg:npm/%40isaacs/fs-minipass@4.0.1",
                    "pkg:npm/%40isaacs/string-locale-compare@1.1.0",
                    "pkg:npm/%40my-scope/package-a@0.0.0",
                    "pkg:npm/%40my-scope/package-b@0.0.0",
                    "pkg:npm/%40npmcli/agent@3.0.0",
                    "pkg:npm/%40npmcli/arborist@9.1.2",
                    "pkg:npm/%40npmcli/config@10.3.0",
                    "pkg:npm/%40npmcli/fs@4.0.0",
                    "pkg:npm/%40npmcli/git@6.0.3",
                    "pkg:npm/%40npmcli/installed-package-contents@3.0.0",
                    "pkg:npm/%40npmcli/map-workspaces@4.0.2",
                    "pkg:npm/%40npmcli/metavuln-calculator@9.0.0",
                    "pkg:npm/%40npmcli/name-from-folder@3.0.0",
                    "pkg:npm/%40npmcli/node-gyp@4.0.0",
                    "pkg:npm/%40npmcli/package-json@6.2.0",
                    "pkg:npm/%40npmcli/promise-spawn@8.0.2",
                    "pkg:npm/%40npmcli/query@4.0.1",
                    "pkg:npm/%40npmcli/redact@3.2.2",
                    "pkg:npm/%40npmcli/run-script@9.1.0",
                    "pkg:npm/%40pkgjs/parseargs@0.11.0",
                    "pkg:npm/%40sigstore/bundle@3.1.0",
                    "pkg:npm/%40sigstore/core@2.0.0",
                    "pkg:npm/%40sigstore/protobuf-specs@0.4.3",
                    "pkg:npm/%40sigstore/sign@3.1.0",
                    "pkg:npm/%40sigstore/tuf@3.1.1",
                    "pkg:npm/%40sigstore/verify@2.1.1",
                    "pkg:npm/%40tufjs/canonical-json@2.0.0",
                    "pkg:npm/%40tufjs/models@3.0.1",
                    "pkg:npm/%40ungap/promise-all-settled@1.1.2",
                    "pkg:npm/abbrev@3.0.1",
                    "pkg:npm/accepts@2.0.0",
                    "pkg:npm/agent-base@7.1.3",
                    "pkg:npm/ansi-colors@4.1.1",
                    "pkg:npm/ansi-colors@4.1.3",
                    "pkg:npm/ansi-regex@3.0.1",
                    "pkg:npm/ansi-styles@6.2.1",
                    "pkg:npm/anymatch@3.1.3",
                    "pkg:npm/aproba@2.0.0",
                    "pkg:npm/archy@1.0.0",
                    "pkg:npm/argparse@2.0.1",
                    "pkg:npm/array-each@1.0.1",
                    "pkg:npm/array-slice@1.1.0",
                    "pkg:npm/async-done@2.0.0",
                    "pkg:npm/async-settle@2.0.0",
                    "pkg:npm/aws-ssl-profiles@1.1.2",
                    "pkg:npm/b4a@1.6.7",
                    "pkg:npm/bach@2.0.1",
                    "pkg:npm/bare-events@2.5.4",
                    "pkg:npm/base64-js@1.5.1",
                    "pkg:npm/beeper@3.0.0",
                    "pkg:npm/bignumber.js@9.0.0",
                    "pkg:npm/bin-links@5.0.0",
                    "pkg:npm/binary-extensions@2.3.0",
                    "pkg:npm/binary-extensions@3.1.0",
                    "pkg:npm/bl@5.1.0",
                    "pkg:npm/bn.js@4.12.2",
                    "pkg:npm/bn.js@5.2.2",
                    "pkg:npm/body-parser@2.2.0",
                    "pkg:npm/brace-expansion@1.1.11",
                    "pkg:npm/brace-expansion@2.0.2",
                    "pkg:npm/braces@3.0.3",
                    "pkg:npm/brorand@1.1.0",
                    "pkg:npm/browser-stdout@1.3.1",
                    "pkg:npm/buffer-equal-constant-time@1.0.1",
                    "pkg:npm/buffer@6.0.3",
                    "pkg:npm/bytes@3.1.2",
                    "pkg:npm/cacache@19.0.1",
                    "pkg:npm/call-bind-apply-helpers@1.0.2",
                    "pkg:npm/call-bound@1.0.4",
                    "pkg:npm/camelcase@6.3.0",
                    "pkg:npm/chalk@4.1.2",
                    "pkg:npm/chalk@5.4.1",
                    "pkg:npm/chokidar@3.5.1",
                    "pkg:npm/chokidar@3.6.0",
                    "pkg:npm/chownr@2.0.0",
                    "pkg:npm/ci-info@4.2.0",
                    "pkg:npm/cidr-regex@4.1.3",
                    "pkg:npm/cli-columns@4.0.0",
                    "pkg:npm/cliui@7.0.4",
                    "pkg:npm/clone-stats@1.0.0",
                    "pkg:npm/clone@2.1.2",
                    "pkg:npm/cmd-shim@7.0.0",
                    "pkg:npm/common-ancestor-path@1.0.1",
                    "pkg:npm/concat-map@0.0.1",
                    "pkg:npm/content-disposition@1.0.0",
                    "pkg:npm/content-type@1.0.5",
                    "pkg:npm/convert-source-map@2.0.0",
                    "pkg:npm/cookie-parser@1.4.7",
                    "pkg:npm/cookie-signature@1.0.6",
                    "pkg:npm/cookie-signature@1.2.2",
                    "pkg:npm/cookie@0.7.2",
                    "pkg:npm/copy-props@4.0.0",
                    "pkg:npm/core-util-is@1.0.3",
                    "pkg:npm/corepack@0.33.0",
                    "pkg:npm/cross-spawn@7.0.6",
                    "pkg:npm/crypto-js@4.2.0",
                    "pkg:npm/cssesc@3.0.0",
                    "pkg:npm/debug@4.3.1",
                    "pkg:npm/decamelize@4.0.0",
                    "pkg:npm/denque@2.1.0",
                    "pkg:npm/depd@2.0.0",
                    "pkg:npm/detect-file@1.0.0",
                    "pkg:npm/diff@5.0.0",
                    "pkg:npm/diff@7.0.0",
                    "pkg:npm/dotenv@16.5.0",
                    "pkg:npm/dunder-proto@1.0.1",
                    "pkg:npm/each-props@3.0.0",
                    "pkg:npm/eastasianwidth@0.2.0",
                    "pkg:npm/ecdsa-sig-formatter@1.0.11",
                    "pkg:npm/ee-first@1.1.1",
                    "pkg:npm/elliptic@6.6.1",
                    "pkg:npm/encodeurl@2.0.0",
                    "pkg:npm/encoding@0.1.13",
                    "pkg:npm/end-of-stream@1.4.4",
                    "pkg:npm/env-paths@2.2.1",
                    "pkg:npm/err-code@2.0.3",
                    "pkg:npm/es-define-property@1.0.1",
                    "pkg:npm/es-errors@1.3.0",
                    "pkg:npm/es-object-atoms@1.1.1",
                    "pkg:npm/escalade@3.2.0",
                    "pkg:npm/escape-html@1.0.3",
                    "pkg:npm/escape-string-regexp@4.0.0",
                    "pkg:npm/etag@1.8.1",
                    "pkg:npm/excid-cicd-demo@1.0.0",
                    "pkg:npm/expand-tilde@2.0.2",
                    "pkg:npm/exponential-backoff@3.1.2",
                    "pkg:npm/express@5.1.0",
                    "pkg:npm/extend@3.0.2",
                    "pkg:npm/fast-fifo@1.3.2",
                    "pkg:npm/fast-levenshtein@3.0.0",
                    "pkg:npm/fastq@1.19.1",
                    "pkg:npm/fdir@6.4.6",
                    "pkg:npm/fill-range@7.1.1",
                    "pkg:npm/finalhandler@2.1.0",
                    "pkg:npm/find-up@5.0.0",
                    "pkg:npm/findup-sync@5.0.0",
                    "pkg:npm/fined@2.0.0",
                    "pkg:npm/flagged-respawn@2.0.0",
                    "pkg:npm/flat@5.0.2",
                    "pkg:npm/for-in@1.0.2",
                    "pkg:npm/for-own@1.0.0",
                    "pkg:npm/foreground-child@3.3.1",
                    "pkg:npm/forwarded@0.2.0",
                    "pkg:npm/fresh@2.0.0",
                    "pkg:npm/fs-minipass@2.1.0",
                    "pkg:npm/fs-minipass@3.0.3",
                    "pkg:npm/fs-mkdirp-stream@2.0.1",
                    "pkg:npm/fs.realpath@1.0.0",
                    "pkg:npm/function-bind@1.1.2",
                    "pkg:npm/generate-function@2.3.1",
                    "pkg:npm/get-caller-file@2.0.5",
                    "pkg:npm/get-intrinsic@1.3.0",
                    "pkg:npm/get-proto@1.0.1",
                    "pkg:npm/glob-parent@5.1.2",
                    "pkg:npm/glob-parent@6.0.2",
                    "pkg:npm/glob-stream@8.0.2",
                    "pkg:npm/glob-watcher@6.0.0",
                    "pkg:npm/glob@10.4.5",
                    "pkg:npm/glob@7.1.6",
                    "pkg:npm/global-modules@1.0.0",
                    "pkg:npm/global-prefix@1.0.2",
                    "pkg:npm/glogg@2.2.0",
                    "pkg:npm/gopd@1.2.0",
                    "pkg:npm/growl@1.10.5",
                    "pkg:npm/gulp-cli@3.0.0",
                    "pkg:npm/gulp@5.0.0",
                    "pkg:npm/gulplog@2.2.0",
                    "pkg:npm/has-flag@4.0.0",
                    "pkg:npm/has-symbols@1.1.0",
                    "pkg:npm/hash.js@1.1.7",
                    "pkg:npm/hasown@2.0.2",
                    "pkg:npm/he@1.2.0",
                    "pkg:npm/hmac-drbg@1.0.1",
                    "pkg:npm/homedir-polyfill@1.0.3",
                    "pkg:npm/hosted-git-info@8.1.0",
                    "pkg:npm/http-cache-semantics@4.2.0",
                    "pkg:npm/http-errors@2.0.0",
                    "pkg:npm/http-proxy-agent@7.0.2",
                    "pkg:npm/https-proxy-agent@7.0.6",
                    "pkg:npm/ieee754@1.2.1",
                    "pkg:npm/ignore-walk@7.0.0",
                    "pkg:npm/imurmurhash@0.1.4",
                    "pkg:npm/inflight@1.0.6",
                    "pkg:npm/inherits@2.0.4",
                    "pkg:npm/ini@1.3.8",
                    "pkg:npm/ini@5.0.0",
                    "pkg:npm/init-package-json@8.2.1",
                    "pkg:npm/interpret@3.1.1",
                    "pkg:npm/ip-address@9.0.5",
                    "pkg:npm/ip-regex@5.0.0",
                    "pkg:npm/ipaddr.js@1.9.1",
                    "pkg:npm/is-absolute@1.0.0",
                    "pkg:npm/is-binary-path@2.1.0",
                    "pkg:npm/is-cidr@5.1.1",
                    "pkg:npm/is-core-module@2.16.1",
                    "pkg:npm/is-extglob@2.1.1",
                    "pkg:npm/is-fullwidth-code-point@2.0.0",
                    "pkg:npm/is-glob@4.0.3",
                    "pkg:npm/is-negated-glob@1.0.0",
                    "pkg:npm/is-number@7.0.0",
                    "pkg:npm/is-plain-obj@2.1.0",
                    "pkg:npm/is-plain-object@5.0.0",
                    "pkg:npm/is-promise@4.0.0",
                    "pkg:npm/is-property@1.0.2",
                    "pkg:npm/is-relative@1.0.0",
                    "pkg:npm/is-unc-path@1.0.0",
                    "pkg:npm/is-valid-glob@1.0.0",
                    "pkg:npm/is-windows@1.0.2",
                    "pkg:npm/isarray@1.0.0",
                    "pkg:npm/isexe@3.1.1",
                    "pkg:npm/isobject@3.0.1",
                    "pkg:npm/jackspeak@3.4.3",
                    "pkg:npm/js-sha256@0.9.0",
                    "pkg:npm/js-sha512@0.8.0",
                    "pkg:npm/js-yaml@4.0.0",
                    "pkg:npm/jsbn@1.1.0",
                    "pkg:npm/json-parse-even-better-errors@4.0.0",
                    "pkg:npm/json-stringify-nice@1.1.4",
                    "pkg:npm/jsonparse@1.3.1",
                    "pkg:npm/jsonwebtoken@9.0.2",
                    "pkg:npm/just-diff-apply@5.5.0",
                    "pkg:npm/just-diff@6.0.2",
                    "pkg:npm/jwa@1.4.2",
                    "pkg:npm/jws@3.2.2",
                    "pkg:npm/last-run@2.0.0",
                    "pkg:npm/lead@4.0.0",
                    "pkg:npm/libnpmaccess@10.0.1",
                    "pkg:npm/libnpmdiff@8.0.5",
                    "pkg:npm/libnpmexec@10.1.4",
                    "pkg:npm/libnpmfund@7.0.5",
                    "pkg:npm/libnpmorg@8.0.0",
                    "pkg:npm/libnpmpack@9.0.5",
                    "pkg:npm/libnpmpublish@11.0.1",
                    "pkg:npm/libnpmsearch@9.0.0",
                    "pkg:npm/libnpmteam@8.0.1",
                    "pkg:npm/libnpmversion@8.0.1",
                    "pkg:npm/liftoff@5.0.0",
                    "pkg:npm/ljharb-monorepo-symlink-test@0.0.0",
                    "pkg:npm/locate-path@6.0.0",
                    "pkg:npm/lodash.includes@4.3.0",
                    "pkg:npm/lodash.isboolean@3.0.3",
                    "pkg:npm/lodash.isinteger@4.0.4",
                    "pkg:npm/lodash.isnumber@3.0.3",
                    "pkg:npm/lodash.isplainobject@4.0.6",
                    "pkg:npm/lodash.isstring@4.0.1",
                    "pkg:npm/lodash.once@4.1.1",
                    "pkg:npm/log-symbols@4.0.0",
                    "pkg:npm/long@5.3.2",
                    "pkg:npm/lru-cache@10.4.3",
                    "pkg:npm/lru-cache@7.18.3",
                    "pkg:npm/lru.min@1.1.2",
                    "pkg:npm/make-fetch-happen@14.0.3",
                    "pkg:npm/map-cache@0.2.2",
                    "pkg:npm/math-intrinsics@1.1.0",
                    "pkg:npm/media-typer@1.1.0",
                    "pkg:npm/merge-descriptors@2.0.0",
                    "pkg:npm/micromatch@4.0.8",
                    "pkg:npm/mime-db@1.54.0",
                    "pkg:npm/mime-types@3.0.1",
                    "pkg:npm/minimalistic-assert@1.0.1",
                    "pkg:npm/minimalistic-crypto-utils@1.0.1",
                    "pkg:npm/minimatch@3.0.4",
                    "pkg:npm/minimatch@9.0.5",
                    "pkg:npm/minipass-collect@2.0.1",
                    "pkg:npm/minipass-fetch@4.0.1",
                    "pkg:npm/minipass-flush@1.0.5",
                    "pkg:npm/minipass-pipeline@1.2.4",
                    "pkg:npm/minipass-sized@1.0.3",
                    "pkg:npm/minipass@5.0.0",
                    "pkg:npm/minipass@7.1.2",
                    "pkg:npm/minizlib@2.1.2",
                    "pkg:npm/mkdirp@1.0.4",
                    "pkg:npm/mocha@8.4.0",
                    "pkg:npm/moment@2.30.1",
                    "pkg:npm/ms@2.1.2",
                    "pkg:npm/mute-stdout@2.0.0",
                    "pkg:npm/mute-stream@2.0.0",
                    "pkg:npm/mylib@0.0.0",
                    "pkg:npm/mysql2@3.14.1",
                    "pkg:npm/mysql@2.18.1",
                    "pkg:npm/named-placeholders@1.1.3",
                    "pkg:npm/nanoid@3.1.20",
                    "pkg:npm/node-gyp@11.2.0",
                    "pkg:npm/nopt@8.1.0",
                    "pkg:npm/normalize-package-data@7.0.0",
                    "pkg:npm/normalize-path@3.0.0",
                    "pkg:npm/now-and-later@3.0.0",
                    "pkg:npm/npm-audit-report@6.0.0",
                    "pkg:npm/npm-bundled@4.0.0",
                    "pkg:npm/npm-install-checks@7.1.1",
                    "pkg:npm/npm-normalize-package-bin@4.0.0",
                    "pkg:npm/npm-package-arg@12.0.2",
                    "pkg:npm/npm-packlist@10.0.0",
                    "pkg:npm/npm-pick-manifest@10.0.0",
                    "pkg:npm/npm-profile@11.0.1",
                    "pkg:npm/npm-registry-fetch@18.0.2",
                    "pkg:npm/npm-user-validate@3.0.0",
                    "pkg:npm/npm@11.4.2",
                    "pkg:npm/object-inspect@1.13.4",
                    "pkg:npm/object.defaults@1.1.0",
                    "pkg:npm/object.pick@1.3.0",
                    "pkg:npm/on-finished@2.4.1",
                    "pkg:npm/once@1.4.0",
                    "pkg:npm/p-limit@3.1.0",
                    "pkg:npm/p-locate@5.0.0",
                    "pkg:npm/p-map@7.0.3",
                    "pkg:npm/package-json-from-dist@1.0.1",
                    "pkg:npm/pacote@21.0.0",
                    "pkg:npm/parse-conflict-json@4.0.0",
                    "pkg:npm/parse-filepath@1.0.2",
                    "pkg:npm/parse-passwd@1.0.0",
                    "pkg:npm/parseurl@1.3.3",
                    "pkg:npm/path-exists@4.0.0",
                    "pkg:npm/path-is-absolute@1.0.1",
                    "pkg:npm/path-key@3.1.1",
                    "pkg:npm/path-parse@1.0.7",
                    "pkg:npm/path-root-regex@0.1.2",
                    "pkg:npm/path-root@0.1.1",
                    "pkg:npm/path-scurry@1.11.1",
                    "pkg:npm/path-to-regexp@8.2.0",
                    "pkg:npm/picomatch@2.3.1",
                    "pkg:npm/picomatch@4.0.2",
                    "pkg:npm/postcss-selector-parser@7.1.0",
                    "pkg:npm/proc-log@5.0.0",
                    "pkg:npm/process-nextick-args@2.0.1",
                    "pkg:npm/proggy@3.0.0",
                    "pkg:npm/promise-all-reject-late@1.0.1",
                    "pkg:npm/promise-call-limit@3.0.2",
                    "pkg:npm/promise-retry@2.0.1",
                    "pkg:npm/promzard@2.0.0",
                    "pkg:npm/proxy-addr@2.0.7",
                    "pkg:npm/qrcode-terminal@0.12.0",
                    "pkg:npm/qs@6.14.0",
                    "pkg:npm/randombytes@2.1.0",
                    "pkg:npm/range-parser@1.2.1",
                    "pkg:npm/raw-body@3.0.0",
                    "pkg:npm/read-cmd-shim@5.0.0",
                    "pkg:npm/read-package-json-fast@4.0.0",
                    "pkg:npm/read@4.1.0",
                    "pkg:npm/readable-stream@2.3.7",
                    "pkg:npm/readable-stream@3.6.2",
                    "pkg:npm/readdirp@3.5.0",
                    "pkg:npm/readdirp@3.6.0",
                    "pkg:npm/rechoir@0.8.0",
                    "pkg:npm/remove-trailing-separator@1.1.0",
                    "pkg:npm/replace-ext@2.0.0",
                    "pkg:npm/replace-homedir@2.0.0",
                    "pkg:npm/require-directory@2.1.1",
                    "pkg:npm/resolve-dir@1.0.1",
                    "pkg:npm/resolve-options@2.0.0",
                    "pkg:npm/resolve@1.22.10",
                    "pkg:npm/retry@0.12.0",
                    "pkg:npm/reusify@1.1.0",
                    "pkg:npm/router@2.2.0",
                    "pkg:npm/safe-buffer@5.2.1",
                    "pkg:npm/semver-greatest-satisfied-range@2.0.0",
                    "pkg:npm/semver@6.3.1",
                    "pkg:npm/semver@7.7.1",
                    "pkg:npm/semver@7.7.2",
                    "pkg:npm/send@1.2.0",
                    "pkg:npm/seq-queue@0.0.5",
                    "pkg:npm/serialize-javascript@5.0.1",
                    "pkg:npm/serve-static@2.2.0",
                    "pkg:npm/setprototypeof@1.2.0",
                    "pkg:npm/sha3@2.1.4",
                    "pkg:npm/shebang-command@2.0.0",
                    "pkg:npm/shebang-regex@3.0.0",
                    "pkg:npm/side-channel-list@1.0.0",
                    "pkg:npm/side-channel-map@1.0.1",
                    "pkg:npm/side-channel-weakmap@1.0.2",
                    "pkg:npm/side-channel@1.1.0",
                    "pkg:npm/signal-exit@4.1.0",
                    "pkg:npm/sigstore@3.1.0",
                    "pkg:npm/smart-buffer@4.2.0",
                    "pkg:npm/socks-proxy-agent@8.0.5",
                    "pkg:npm/socks@2.8.5",
                    "pkg:npm/sparkles@2.1.0",
                    "pkg:npm/spdx-correct@3.2.0",
                    "pkg:npm/spdx-exceptions@2.5.0",
                    "pkg:npm/spdx-expression-parse@4.0.0",
                    "pkg:npm/spdx-license-ids@3.0.21",
                    "pkg:npm/sprintf-js@1.1.3",
                    "pkg:npm/sqlstring@2.3.1",
                    "pkg:npm/sqlstring@2.3.3",
                    "pkg:npm/ssri@12.0.0",
                    "pkg:npm/statuses@2.0.1",
                    "pkg:npm/statuses@2.0.2",
                    "pkg:npm/stream-composer@1.0.2",
                    "pkg:npm/stream-exhaust@1.0.2",
                    "pkg:npm/streamx@2.22.0",
                    "pkg:npm/string-width@2.1.1",
                    "pkg:npm/string_decoder@1.1.1",
                    "pkg:npm/strip-ansi@4.0.0",
                    "pkg:npm/strip-json-comments@3.1.1",
                    "pkg:npm/supports-color@10.0.0",
                    "pkg:npm/supports-color@7.2.0",
                    "pkg:npm/supports-color@8.1.1",
                    "pkg:npm/supports-preserve-symlinks-flag@1.0.0",
                    "pkg:npm/sver@1.8.4",
                    "pkg:npm/tar@6.2.1",
                    "pkg:npm/teex@1.0.1",
                    "pkg:npm/text-decoder@1.2.3",
                    "pkg:npm/text-table@0.2.0",
                    "pkg:npm/tiny-relative-date@1.3.0",
                    "pkg:npm/tinyglobby@0.2.14",
                    "pkg:npm/to-regex-range@5.0.1",
                    "pkg:npm/to-through@3.0.0",
                    "pkg:npm/toidentifier@1.0.1",
                    "pkg:npm/treeverse@3.0.0",
                    "pkg:npm/tuf-js@3.0.1",
                    "pkg:npm/type-is@2.0.1",
                    "pkg:npm/unc-path-regex@0.1.2",
                    "pkg:npm/undertaker-registry@2.0.0",
                    "pkg:npm/undertaker@2.0.0",
                    "pkg:npm/unique-filename@4.0.0",
                    "pkg:npm/unique-slug@5.0.0",
                    "pkg:npm/unpipe@1.0.0",
                    "pkg:npm/v8flags@4.0.1",
                    "pkg:npm/validate-npm-package-license@3.0.4",
                    "pkg:npm/validate-npm-package-name@6.0.1",
                    "pkg:npm/validator@13.15.0",
                    "pkg:npm/value-or-function@4.0.0",
                    "pkg:npm/vary@1.1.2",
                    "pkg:npm/vinyl-contents@2.0.0",
                    "pkg:npm/vinyl-fs@4.0.0",
                    "pkg:npm/vinyl-sourcemap@2.0.0",
                    "pkg:npm/vinyl@3.0.0",
                    "pkg:npm/walk-up-path@4.0.0",
                    "pkg:npm/which@1.3.1",
                    "pkg:npm/which@5.0.0",
                    "pkg:npm/wide-align@1.1.3",
                    "pkg:npm/workerpool@6.1.0",
                    "pkg:npm/wrap-ansi@8.1.0",
                    "pkg:npm/wrappy@1.0.2",
                    "pkg:npm/write-file-atomic@6.0.0",
                    "pkg:npm/y18n@5.0.8",
                    "pkg:npm/yallist@4.0.0",
                    "pkg:npm/yargs-parser@20.2.4",
                    "pkg:npm/yargs-unparser@2.0.0",
                    "pkg:npm/yargs@16.2.0",
                    "pkg:npm/yarn@1.22.22",
                    "pkg:npm/yocto-queue@0.1.0",
                    "pkg:npm/yoctodelay@1.2.0"
                ]
            }
        ],
        "vulnerabilities": []
    }
}","signatures":[{"keyid":"","sig":"MEQCIBnWR/7d1PpXIOuND5XHNs+MpO8RRXAwwhs97VEQ/8yrAiAckvbaLG/NYNn4Al2j56zVL6EHQfxuRTOMUAvXZi/coQ=="}]}
